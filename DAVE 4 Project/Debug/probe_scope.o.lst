   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,2
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "probe_scope.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.ProbeScope_SampleCh.part.0,"ax",%progbits
  20              	 .align 2
  21              	 .thumb
  22              	 .thumb_func
  24              	ProbeScope_SampleCh.part.0:
  25              	.LFB9:
  26              	 .file 1 "../probe_scope.c"
   1:../probe_scope.c **** /*
   2:../probe_scope.c **** ***************************************************************************************************
   3:../probe_scope.c **** *                                                     Oscilloscope
   4:../probe_scope.c **** *
   5:../probe_scope.c **** *                                    (c) Copyright 2016; Micrium, Inc.; Weston, FL
   6:../probe_scope.c **** *                           All rights reserved.  Protected by international copyright laws.
   7:../probe_scope.c **** *
   8:../probe_scope.c **** *
   9:../probe_scope.c **** * File    : PROBE_SCOPE.C
  10:../probe_scope.c **** * By      : JJL
  11:../probe_scope.c **** * Version : V1.00.00
  12:../probe_scope.c **** ***************************************************************************************************
  13:../probe_scope.c **** */
  14:../probe_scope.c **** 
  15:../probe_scope.c **** /*
  16:../probe_scope.c **** ***************************************************************************************************
  17:../probe_scope.c **** *                                             INCLUDE FILES
  18:../probe_scope.c **** ***************************************************************************************************
  19:../probe_scope.c **** */
  20:../probe_scope.c **** 
  21:../probe_scope.c **** #include  <probe_scope_cfg.h>
  22:../probe_scope.c **** #include  <probe_scope.h>
  23:../probe_scope.c **** 
  24:../probe_scope.c **** /*
  25:../probe_scope.c **** ***************************************************************************************************
  26:../probe_scope.c **** *                                             CONSTANTS
  27:../probe_scope.c **** ***************************************************************************************************
  28:../probe_scope.c **** */
  29:../probe_scope.c **** 
  30:../probe_scope.c **** 
  31:../probe_scope.c **** #define  PROBE_SCOPE_TRIG_NEG                  0                           // Trigger on Negative g
  32:../probe_scope.c **** #define  PROBE_SCOPE_TRIG_POS                  1                           // Trigger on Positive g
  33:../probe_scope.c **** 
  34:../probe_scope.c **** 
  35:../probe_scope.c **** #define  PROBE_SCOPE_STATE_START               0
  36:../probe_scope.c **** #define  PROBE_SCOPE_STATE_SAMPLING_PRE_TRIG   1
  37:../probe_scope.c **** #define  PROBE_SCOPE_STATE_SAMPLING_POST_TRIG  2
  38:../probe_scope.c **** #define  PROBE_SCOPE_STATE_DATA_RDY            3
  39:../probe_scope.c **** 
  40:../probe_scope.c **** 
  41:../probe_scope.c **** #define  PROBE_SCOPE_MODE_OFF                  0
  42:../probe_scope.c **** #define  PROBE_SCOPE_MODE_SINGLE               1
  43:../probe_scope.c **** #define  PROBE_SCOPE_MODE_CONTINUOUS           2
  44:../probe_scope.c **** #define  PROBE_SCOPE_MODE_TRIG                 3
  45:../probe_scope.c **** 
  46:../probe_scope.c **** 
  47:../probe_scope.c **** #define  PROBE_SCOPE_INT08U                    0                           // Supported data types
  48:../probe_scope.c **** #define  PROBE_SCOPE_INT08S                    1
  49:../probe_scope.c **** #define  PROBE_SCOPE_INT16U                    2
  50:../probe_scope.c **** #define  PROBE_SCOPE_INT16S                    3
  51:../probe_scope.c **** #define  PROBE_SCOPE_INT32U                    4
  52:../probe_scope.c **** #define  PROBE_SCOPE_INT32S                    5
  53:../probe_scope.c **** #define  PROBE_SCOPE_FP32                      6
  54:../probe_scope.c **** 
  55:../probe_scope.c **** 
  56:../probe_scope.c **** #define  PROBE_SCOPE_CH1                       1
  57:../probe_scope.c **** #define  PROBE_SCOPE_CH2                       2
  58:../probe_scope.c **** #define  PROBE_SCOPE_CH3                       3
  59:../probe_scope.c **** #define  PROBE_SCOPE_CH4                       4
  60:../probe_scope.c **** #define  PROBE_SCOPE_CH5                       5
  61:../probe_scope.c **** #define  PROBE_SCOPE_CH6                       6
  62:../probe_scope.c **** #define  PROBE_SCOPE_CH7                       7
  63:../probe_scope.c **** #define  PROBE_SCOPE_CH8                       8
  64:../probe_scope.c **** 
  65:../probe_scope.c **** /*
  66:../probe_scope.c **** ***************************************************************************************************
  67:../probe_scope.c **** *                                             DATA TYPES
  68:../probe_scope.c **** ***************************************************************************************************
  69:../probe_scope.c **** */
  70:../probe_scope.c **** 
  71:../probe_scope.c **** typedef  uint32_t                  CPU_BOOLEAN;                               //  8-bit boolean or 
  72:../probe_scope.c **** typedef  uint8_t                   CPU_INT08U;                                //  8-bit unsigned in
  73:../probe_scope.c **** typedef  int8_t                    CPU_INT08S;                                //  8-bit   signed in
  74:../probe_scope.c **** typedef  uint16_t                  CPU_INT16U;                                // 16-bit unsigned in
  75:../probe_scope.c **** typedef  int16_t                   CPU_INT16S;                                // 16-bit   signed in
  76:../probe_scope.c **** typedef  uint32_t                  CPU_INT32U;                                // 32-bit unsigned in
  77:../probe_scope.c **** typedef  int32_t                   CPU_INT32S;                                // 32-bit   signed in
  78:../probe_scope.c **** typedef  uint64_t                  CPU_INT64U;                                // 64-bit unsigned in
  79:../probe_scope.c **** typedef  int64_t                   CPU_INT64S;                                // 64-bit   signed in
  80:../probe_scope.c **** 
  81:../probe_scope.c **** typedef  float                     CPU_FP32;                                  // 32-bit floating po
  82:../probe_scope.c **** typedef  double                    CPU_FP64;                                  // 64-bit floating po
  83:../probe_scope.c **** 
  84:../probe_scope.c **** 
  85:../probe_scope.c **** typedef  struct  scope_ch          PROBE_SCOPE_CH;
  86:../probe_scope.c **** typedef  union   scope_ch_sample   PROBE_SCOPE_CH_SAMPLE;
  87:../probe_scope.c **** 
  88:../probe_scope.c **** 
  89:../probe_scope.c **** union  scope_ch_sample {                                                      // A sample can be an
  90:../probe_scope.c ****     CPU_INT08U    Val08U;
  91:../probe_scope.c ****     CPU_INT08S    Val08S;
  92:../probe_scope.c **** #if PROBE_SCOPE_16_BIT_EN > 0                                                 // ... 16-bits only i
  93:../probe_scope.c ****     CPU_INT16U    Val16U;
  94:../probe_scope.c ****     CPU_INT16S    Val16S;
  95:../probe_scope.c **** #endif
  96:../probe_scope.c **** #if PROBE_SCOPE_32_BIT_EN > 0                                                 // ... 32-bits only i
  97:../probe_scope.c ****     CPU_INT32U    Val32U;
  98:../probe_scope.c ****     CPU_INT32S    Val32S;
  99:../probe_scope.c ****     CPU_FP32      ValFP32;
 100:../probe_scope.c **** #endif
 101:../probe_scope.c **** };
 102:../probe_scope.c ****     
 103:../probe_scope.c **** 
 104:../probe_scope.c **** struct  scope_ch {
 105:../probe_scope.c ****     CPU_BOOLEAN            En;                                                // Channel enabled (1
 106:../probe_scope.c ****     CPU_INT08U             DataType;                                          // Source data type: 
 107:../probe_scope.c ****                                                                               //    0 = CPU_INT08U
 108:../probe_scope.c ****                                                                               //    1 = CPU_INT08S
 109:../probe_scope.c ****                                                                               //    2 = CPU_INT16U 
 110:../probe_scope.c ****                                                                               //    3 = CPU_INT16S 
 111:../probe_scope.c ****                                                                               //    4 = CPU_INT32U 
 112:../probe_scope.c ****                                                                               //    5 = CPU_INT32S 
 113:../probe_scope.c ****                                                                               //    6 = CPU_FP32   
 114:../probe_scope.c ****     CPU_BOOLEAN             BitEn;                                            // Bit mode enabled (
 115:../probe_scope.c ****     CPU_INT08U              BitSel;                                           // Selected bit in bi
 116:../probe_scope.c ****     CPU_INT08U             *DataAddr;                                         // Address of source 
 117:../probe_scope.c ****     PROBE_SCOPE_CH_SAMPLE   TrigLevel;                                        // Trigger level of t
 118:../probe_scope.c ****     PROBE_SCOPE_CH_SAMPLE   Samples[PROBE_SCOPE_MAX_SAMPLES];                 // Storage for sample
 119:../probe_scope.c **** };
 120:../probe_scope.c **** 
 121:../probe_scope.c **** /*
 122:../probe_scope.c **** ***************************************************************************************************
 123:../probe_scope.c **** *                                             LOCAL VARIABLES
 124:../probe_scope.c **** ***************************************************************************************************
 125:../probe_scope.c **** */
 126:../probe_scope.c **** 
 127:../probe_scope.c **** static    PROBE_SCOPE_CH       ProbeScope_Ch1;                                // Up to 8 scope chan
 128:../probe_scope.c **** 
 129:../probe_scope.c **** #if PROBE_SCOPE_MAX_CH >= 2
 130:../probe_scope.c **** static    PROBE_SCOPE_CH       ProbeScope_Ch2;
 131:../probe_scope.c **** #endif
 132:../probe_scope.c **** 
 133:../probe_scope.c **** #if PROBE_SCOPE_MAX_CH >= 3
 134:../probe_scope.c **** static    PROBE_SCOPE_CH       ProbeScope_Ch3;
 135:../probe_scope.c **** #endif
 136:../probe_scope.c **** 
 137:../probe_scope.c **** #if PROBE_SCOPE_MAX_CH >= 4
 138:../probe_scope.c **** static    PROBE_SCOPE_CH       ProbeScope_Ch4;
 139:../probe_scope.c **** #endif
 140:../probe_scope.c **** 
 141:../probe_scope.c **** #if PROBE_SCOPE_MAX_CH >= 5
 142:../probe_scope.c **** static    PROBE_SCOPE_CH       ProbeScope_Ch5;
 143:../probe_scope.c **** #endif
 144:../probe_scope.c **** 
 145:../probe_scope.c **** #if PROBE_SCOPE_MAX_CH >= 6
 146:../probe_scope.c **** static    PROBE_SCOPE_CH       ProbeScope_Ch6;
 147:../probe_scope.c **** #endif
 148:../probe_scope.c **** 
 149:../probe_scope.c **** #if PROBE_SCOPE_MAX_CH >= 7
 150:../probe_scope.c **** static    PROBE_SCOPE_CH       ProbeScope_Ch7;
 151:../probe_scope.c **** #endif
 152:../probe_scope.c **** 
 153:../probe_scope.c **** #if PROBE_SCOPE_MAX_CH >= 8
 154:../probe_scope.c **** static    PROBE_SCOPE_CH       ProbeScope_Ch8;
 155:../probe_scope.c **** #endif
 156:../probe_scope.c **** 
 157:../probe_scope.c **** volatile  CPU_INT32U           ProbeScope_DataRdyFlag;                        // Data is ready to b
 158:../probe_scope.c **** 
 159:../probe_scope.c **** volatile  CPU_BOOLEAN          ProbeScope_InitFlag;                           // Flag indicating MC
 160:../probe_scope.c **** 
 161:../probe_scope.c **** static    CPU_INT08U           ProbeScope_Mode;                               // Scope Mode:
 162:../probe_scope.c ****                                                                               //     0 = Stop
 163:../probe_scope.c ****                                                                               //     1 = Single
 164:../probe_scope.c ****                                                                               //     2 = Continuous
 165:../probe_scope.c ****                                                                               //     3 = Triggered 
 166:../probe_scope.c ****                                                                             
 167:../probe_scope.c **** static    CPU_INT08U           ProbeScope_TrigChSel;                          // Channel that will 
 168:../probe_scope.c ****                                                                               //     1 = Channel #1
 169:../probe_scope.c ****                                                                               //     2 = Channel #2
 170:../probe_scope.c ****                                                                               //     3 = Channel #3
 171:../probe_scope.c ****                                                                               //     4 = Channel #4
 172:../probe_scope.c ****                                                                               //     5 = Channel #5
 173:../probe_scope.c ****                                                                               //     6 = Channel #6
 174:../probe_scope.c ****                                                                               //     7 = Channel #7
 175:../probe_scope.c ****                                                                               //     8 = Channel #8
 176:../probe_scope.c ****                                                                             
 177:../probe_scope.c **** 
 178:../probe_scope.c **** volatile  CPU_INT32U           ProbeScope_TrigDispPos;                        // Position of the tr
 179:../probe_scope.c ****                                                                               //     0             
 180:../probe_scope.c ****                                                                               //     PROBE_SCOPE_MA
 181:../probe_scope.c **** volatile  CPU_BOOLEAN          ProbeScope_TrigFlag;                           // Flag indicating th
 182:../probe_scope.c **** volatile  CPU_INT32U           ProbeScope_TrigHoldOff;                        // Determines how man
 183:../probe_scope.c **** static    CPU_INT32U           ProbeScope_TrigHoldOffCtr;
 184:../probe_scope.c **** volatile  CPU_INT32U           ProbeScope_TrigIx;                             // Position in the sa
 185:../probe_scope.c **** static    CPU_BOOLEAN          ProbeScope_TrigSlope;                          // Trigger Slope
 186:../probe_scope.c ****                                                                               //     0 = Low  going
 187:../probe_scope.c ****                                                                               //     1 = High going
 188:../probe_scope.c **** 
 189:../probe_scope.c **** static    CPU_INT32U           ProbeScope_SampleIxPrev;
 190:../probe_scope.c **** static    CPU_INT32U           ProbeScope_SampleIxCur;
 191:../probe_scope.c **** static    CPU_INT32U           ProbeScope_SamplesPreTrigCtr;                  // Minimum number of 
 192:../probe_scope.c **** static    CPU_INT32U           ProbeScope_SamplesPostTrigCtr;                 // Determines how man
 193:../probe_scope.c ****                                                                               //     In 100% post-t
 194:../probe_scope.c ****                                                                               //     In 100% pre-tr
 195:../probe_scope.c **** 
 196:../probe_scope.c **** static    CPU_INT16U           ProbeScope_SamplingClkDiv;                     // Clk source divider
 197:../probe_scope.c **** static    CPU_INT16U           ProbeScope_SamplingClkDivCtr; 
 198:../probe_scope.c **** volatile  CPU_INT32U           ProbeScope_SamplingClkHz;                      // Sampling Clock Fre
 199:../probe_scope.c **** 
 200:../probe_scope.c **** static    CPU_INT08U           ProbeScope_State;                              // Scope State
 201:../probe_scope.c **** 
 202:../probe_scope.c **** /*
 203:../probe_scope.c **** ***************************************************************************************************
 204:../probe_scope.c **** *                                             CONSTANTS
 205:../probe_scope.c **** ***************************************************************************************************
 206:../probe_scope.c **** */
 207:../probe_scope.c **** 
 208:../probe_scope.c **** static  volatile  CPU_INT16U   ProbeScopeDbg_MaxSamples     = PROBE_SCOPE_MAX_SAMPLES;
 209:../probe_scope.c **** static  volatile  CPU_INT08U   ProbeScopeDbg_MaxCh          = PROBE_SCOPE_MAX_CH;
 210:../probe_scope.c **** static  volatile  CPU_BOOLEAN  ProbeScopeDbg_16BitEn        = PROBE_SCOPE_16_BIT_EN;
 211:../probe_scope.c **** static  volatile  CPU_BOOLEAN  ProbeScopeDbg_32BitEn        = PROBE_SCOPE_32_BIT_EN;
 212:../probe_scope.c **** 
 213:../probe_scope.c **** /*
 214:../probe_scope.c **** ***************************************************************************************************
 215:../probe_scope.c **** *                                             PROTOTYPES
 216:../probe_scope.c **** ***************************************************************************************************
 217:../probe_scope.c **** */
 218:../probe_scope.c **** 
 219:../probe_scope.c **** static  void       ProbeScope_IsTrig          (void);
 220:../probe_scope.c ****         
 221:../probe_scope.c **** static  void       ProbeScope_ModeOff         (void);
 222:../probe_scope.c **** static  void       ProbeScope_ModeContinuous  (void);
 223:../probe_scope.c **** static  void       ProbeScope_ModeTrig        (void);
 224:../probe_scope.c ****         
 225:../probe_scope.c **** static  void       ProbeScope_SampleChAll     (void);
 226:../probe_scope.c **** static  void       ProbeScope_SampleCh        (PROBE_SCOPE_CH  *p_ch);
 227:../probe_scope.c **** static  void       ProbeScope_SamplePosNext   (void);
 228:../probe_scope.c **** 
 229:../probe_scope.c **** /*
 230:../probe_scope.c **** ***************************************************************************************************
 231:../probe_scope.c **** *                                                    INITIALIZATION
 232:../probe_scope.c **** *
 233:../probe_scope.c **** * Description: This function is used to initialize the internals of the Oscilloscope module
 234:../probe_scope.c **** *
 235:../probe_scope.c **** * Arguments  : sampling_clk_hz    The frequency of the sampling clock (Hz)
 236:../probe_scope.c **** *
 237:../probe_scope.c **** * Returns    : none
 238:../probe_scope.c **** ***************************************************************************************************
 239:../probe_scope.c **** */
 240:../probe_scope.c **** 
 241:../probe_scope.c **** void  ProbeScope_Init (uint32_t  sampling_clk_hz)
 242:../probe_scope.c **** {
 243:../probe_scope.c ****     static  CPU_INT32U  temp = 0;
 244:../probe_scope.c **** 
 245:../probe_scope.c **** 
 246:../probe_scope.c ****     ProbeScope_Ch1.En             = 0;
 247:../probe_scope.c **** #if PROBE_SCOPE_MAX_CH >= 2       
 248:../probe_scope.c ****     ProbeScope_Ch2.En             = 0;
 249:../probe_scope.c **** #endif                            
 250:../probe_scope.c **** #if PROBE_SCOPE_MAX_CH >= 3       
 251:../probe_scope.c ****     ProbeScope_Ch3.En             = 0;
 252:../probe_scope.c **** #endif                            
 253:../probe_scope.c **** #if PROBE_SCOPE_MAX_CH >= 4       
 254:../probe_scope.c ****     ProbeScope_Ch4.En             = 0;
 255:../probe_scope.c **** #endif                            
 256:../probe_scope.c **** #if PROBE_SCOPE_MAX_CH >= 5       
 257:../probe_scope.c ****     ProbeScope_Ch5.En             = 0;
 258:../probe_scope.c **** #endif                            
 259:../probe_scope.c **** #if PROBE_SCOPE_MAX_CH >= 6       
 260:../probe_scope.c ****     ProbeScope_Ch6.En             = 0;
 261:../probe_scope.c **** #endif                            
 262:../probe_scope.c **** #if PROBE_SCOPE_MAX_CH >= 7       
 263:../probe_scope.c ****     ProbeScope_Ch7.En             = 0;
 264:../probe_scope.c **** #endif                            
 265:../probe_scope.c **** #if PROBE_SCOPE_MAX_CH >= 8       
 266:../probe_scope.c ****     ProbeScope_Ch8.En             = 0;
 267:../probe_scope.c **** #endif
 268:../probe_scope.c **** 
 269:../probe_scope.c ****     ProbeScope_Mode               = PROBE_SCOPE_MODE_OFF;
 270:../probe_scope.c ****     ProbeScope_State              = PROBE_SCOPE_STATE_START;
 271:../probe_scope.c ****     ProbeScope_TrigChSel          = PROBE_SCOPE_CH1;                         // Default trigger cha
 272:../probe_scope.c ****     ProbeScope_SampleIxPrev       = 0;
 273:../probe_scope.c ****     ProbeScope_SampleIxCur        = 0;
 274:../probe_scope.c ****     ProbeScope_TrigFlag           = 0;
 275:../probe_scope.c ****     ProbeScope_TrigDispPos        = 0;
 276:../probe_scope.c ****     ProbeScope_TrigHoldOff        = 0;
 277:../probe_scope.c ****     ProbeScope_TrigHoldOffCtr     = 0;
 278:../probe_scope.c ****     ProbeScope_DataRdyFlag        = 0;
 279:../probe_scope.c ****     ProbeScope_SamplesPreTrigCtr  = ProbeScope_TrigDispPos;
 280:../probe_scope.c ****     ProbeScope_SamplesPostTrigCtr = PROBE_SCOPE_MAX_SAMPLES;
 281:../probe_scope.c ****     ProbeScope_TrigSlope          = PROBE_SCOPE_TRIG_POS;                    // We assume a positiv
 282:../probe_scope.c ****     temp                          = ProbeScopeDbg_MaxSamples;
 283:../probe_scope.c ****     temp                         += ProbeScopeDbg_MaxCh;
 284:../probe_scope.c ****     temp                         += ProbeScopeDbg_16BitEn;
 285:../probe_scope.c ****     temp                         += ProbeScopeDbg_32BitEn;
 286:../probe_scope.c ****     ProbeScope_SamplingClkDiv     =    1;
 287:../probe_scope.c ****     ProbeScope_SamplingClkDivCtr  =    0;
 288:../probe_scope.c ****     ProbeScope_SamplingClkHz      = sampling_clk_hz;
 289:../probe_scope.c ****     ProbeScope_InitFlag           =    1;
 290:../probe_scope.c **** }
 291:../probe_scope.c **** 
 292:../probe_scope.c **** /*
 293:../probe_scope.c **** ***************************************************************************************************
 294:../probe_scope.c **** *                                                  Scope Sampling API
 295:../probe_scope.c **** *
 296:../probe_scope.c **** * Description: This function must be called when your code needs to take a sample of all enabled ch
 297:../probe_scope.c **** *
 298:../probe_scope.c **** * Arguments  : none
 299:../probe_scope.c **** * Returns    : none
 300:../probe_scope.c **** ***************************************************************************************************
 301:../probe_scope.c **** */
 302:../probe_scope.c **** 
 303:../probe_scope.c **** void  ProbeScope_Sampling (void)
 304:../probe_scope.c **** {
 305:../probe_scope.c ****     switch (ProbeScope_Mode) {
 306:../probe_scope.c ****         case PROBE_SCOPE_MODE_OFF:
 307:../probe_scope.c ****              ProbeScope_ModeOff();
 308:../probe_scope.c ****              break;
 309:../probe_scope.c ****     
 310:../probe_scope.c ****         case PROBE_SCOPE_MODE_SINGLE:
 311:../probe_scope.c ****              ProbeScope_ModeTrig();
 312:../probe_scope.c ****              break;
 313:../probe_scope.c ****     
 314:../probe_scope.c ****         case PROBE_SCOPE_MODE_CONTINUOUS:
 315:../probe_scope.c ****              ProbeScope_ModeContinuous();
 316:../probe_scope.c ****              break;
 317:../probe_scope.c ****     
 318:../probe_scope.c ****         case PROBE_SCOPE_MODE_TRIG:
 319:../probe_scope.c ****              ProbeScope_ModeTrig(); 
 320:../probe_scope.c ****              break;
 321:../probe_scope.c ****     }
 322:../probe_scope.c **** }
 323:../probe_scope.c ****     
 324:../probe_scope.c **** 
 325:../probe_scope.c **** /*
 326:../probe_scope.c **** ***************************************************************************************************
 327:../probe_scope.c **** *                                                  OFF Sampling Mode
 328:../probe_scope.c **** *
 329:../probe_scope.c **** * Description: This is the state machine called when we are not reading samples
 330:../probe_scope.c **** *
 331:../probe_scope.c **** * Arguments  : none
 332:../probe_scope.c **** * Returns    : none
 333:../probe_scope.c **** ***************************************************************************************************
 334:../probe_scope.c **** */
 335:../probe_scope.c **** 
 336:../probe_scope.c **** static  void  ProbeScope_ModeOff (void)
 337:../probe_scope.c **** {
 338:../probe_scope.c ****     ProbeScope_State = PROBE_SCOPE_STATE_START;                                // Force Triggered m
 339:../probe_scope.c ****     if (ProbeScope_SamplingClkDiv == 0) {
 340:../probe_scope.c ****         ProbeScope_SamplingClkDiv =  1;
 341:../probe_scope.c ****     }
 342:../probe_scope.c **** }
 343:../probe_scope.c ****          
 344:../probe_scope.c **** /*
 345:../probe_scope.c **** ***************************************************************************************************
 346:../probe_scope.c **** *                                                Continuous Sampling Mode
 347:../probe_scope.c **** *
 348:../probe_scope.c **** * Description: This is the state machine called when continuous mode is selected
 349:../probe_scope.c **** *
 350:../probe_scope.c **** * Arguments  : none
 351:../probe_scope.c **** * Returns    : none
 352:../probe_scope.c **** ***************************************************************************************************
 353:../probe_scope.c **** */
 354:../probe_scope.c **** 
 355:../probe_scope.c **** static  void  ProbeScope_ModeContinuous (void)
 356:../probe_scope.c **** {
 357:../probe_scope.c ****     if (ProbeScope_DataRdyFlag == 0) {                                          // Read one buffer'
 358:../probe_scope.c ****         ProbeScope_TrigFlag = 0;
 359:../probe_scope.c ****         if (ProbeScope_SamplingClkDivCtr > 1) {
 360:../probe_scope.c ****             ProbeScope_SamplingClkDivCtr--;
 361:../probe_scope.c ****         } else {
 362:../probe_scope.c ****             if (ProbeScope_SamplingClkDiv == 0) {                               // Make sure clock 
 363:../probe_scope.c ****                 ProbeScope_SamplingClkDiv =  1;
 364:../probe_scope.c ****             }
 365:../probe_scope.c ****             ProbeScope_SamplingClkDivCtr  = ProbeScope_SamplingClkDiv;
 366:../probe_scope.c ****             ProbeScope_SampleChAll();                                           // Get the first sa
 367:../probe_scope.c ****             ProbeScope_SamplePosNext();                                         // Position to next
 368:../probe_scope.c ****             if (ProbeScope_SampleIxCur == 0) {                                  // Read one buffer'
 369:../probe_scope.c ****                 ProbeScope_DataRdyFlag = 1;   
 370:../probe_scope.c ****                 ProbeScope_TrigFlag    = 1;
 371:../probe_scope.c ****             }
 372:../probe_scope.c ****         }
 373:../probe_scope.c ****     }
 374:../probe_scope.c ****     ProbeScope_State = PROBE_SCOPE_STATE_START;                                 // Force Triggered 
 375:../probe_scope.c **** }
 376:../probe_scope.c **** 
 377:../probe_scope.c **** /*
 378:../probe_scope.c **** ***************************************************************************************************
 379:../probe_scope.c **** *                                                 Triggered Sampling
 380:../probe_scope.c **** *
 381:../probe_scope.c **** * Description: This is the state machine called when triggered mode is selected
 382:../probe_scope.c **** *
 383:../probe_scope.c **** * Arguments  : none
 384:../probe_scope.c **** * Returns    : none
 385:../probe_scope.c **** ***************************************************************************************************
 386:../probe_scope.c **** */
 387:../probe_scope.c **** 
 388:../probe_scope.c **** static  void  ProbeScope_ModeTrig (void)
 389:../probe_scope.c **** {
 390:../probe_scope.c ****     if (ProbeScope_SamplingClkDivCtr > 1) {
 391:../probe_scope.c ****         ProbeScope_SamplingClkDivCtr--;
 392:../probe_scope.c ****     } else { 
 393:../probe_scope.c ****         if (ProbeScope_SamplingClkDiv == 0) {                                        // Make sure c
 394:../probe_scope.c ****             ProbeScope_SamplingClkDiv =  1;
 395:../probe_scope.c ****         }
 396:../probe_scope.c ****         ProbeScope_SamplingClkDivCtr = ProbeScope_SamplingClkDiv;
 397:../probe_scope.c ****         switch (ProbeScope_State) {
 398:../probe_scope.c ****             case PROBE_SCOPE_STATE_START:
 399:../probe_scope.c ****                  ProbeScope_DataRdyFlag        = 0;
 400:../probe_scope.c ****                  ProbeScope_TrigFlag           = 0;
 401:../probe_scope.c ****                  ProbeScope_SampleIxPrev       = 0;
 402:../probe_scope.c ****                  ProbeScope_SampleIxCur        = 0;
 403:../probe_scope.c ****                  ProbeScope_TrigHoldOffCtr     = 0;
 404:../probe_scope.c ****                  ProbeScope_SamplesPostTrigCtr = 0;
 405:../probe_scope.c ****                  ProbeScope_SamplesPreTrigCtr  = ProbeScope_TrigDispPos;            // Minimum numb
 406:../probe_scope.c ****                  ProbeScope_SampleChAll();                                          // Get the firs
 407:../probe_scope.c ****                  ProbeScope_SamplePosNext();
 408:../probe_scope.c ****                  ProbeScope_State              = PROBE_SCOPE_STATE_SAMPLING_PRE_TRIG;
 409:../probe_scope.c ****                  break;
 410:../probe_scope.c ****                  
 411:../probe_scope.c ****             case PROBE_SCOPE_STATE_SAMPLING_PRE_TRIG:
 412:../probe_scope.c ****                  ProbeScope_SampleChAll();                                          // Get the next
 413:../probe_scope.c ****                  if (ProbeScope_SamplesPreTrigCtr > 0) {                            // We need a mi
 414:../probe_scope.c ****                      ProbeScope_SamplesPreTrigCtr--;                               
 415:../probe_scope.c ****                  } else {
 416:../probe_scope.c ****                      ProbeScope_IsTrig();                                           // See if we de
 417:../probe_scope.c ****                  }
 418:../probe_scope.c ****                  ProbeScope_SamplePosNext();
 419:../probe_scope.c ****                  if (ProbeScope_TrigFlag == 1) {                                    // Remaining nu
 420:../probe_scope.c ****                      ProbeScope_SamplesPostTrigCtr = PROBE_SCOPE_MAX_SAMPLES - ProbeScope_TrigDispP
 421:../probe_scope.c ****                      ProbeScope_State              = PROBE_SCOPE_STATE_SAMPLING_POST_TRIG;
 422:../probe_scope.c ****                  }
 423:../probe_scope.c ****                  break;
 424:../probe_scope.c ****                  
 425:../probe_scope.c ****             case PROBE_SCOPE_STATE_SAMPLING_POST_TRIG:
 426:../probe_scope.c ****                  ProbeScope_SampleChAll();                                          // Get the next
 427:../probe_scope.c ****                  ProbeScope_SamplePosNext();
 428:../probe_scope.c ****                  if (ProbeScope_SamplesPostTrigCtr > 0) {
 429:../probe_scope.c ****                      ProbeScope_SamplesPostTrigCtr--;
 430:../probe_scope.c ****                  } else {
 431:../probe_scope.c ****                      if (ProbeScope_Mode == PROBE_SCOPE_MODE_SINGLE) {
 432:../probe_scope.c ****                          ProbeScope_Mode           = PROBE_SCOPE_MODE_OFF;
 433:../probe_scope.c ****                          ProbeScope_State          = PROBE_SCOPE_STATE_START;
 434:../probe_scope.c ****                      } else {
 435:../probe_scope.c ****                          ProbeScope_TrigHoldOffCtr = ProbeScope_TrigHoldOff;        // Load hold-of
 436:../probe_scope.c ****                          ProbeScope_State          = PROBE_SCOPE_STATE_DATA_RDY;    
 437:../probe_scope.c ****                      }                                                              
 438:../probe_scope.c ****                      ProbeScope_DataRdyFlag = 1;                                    // Trace is ava
 439:../probe_scope.c ****                  }                                                                  
 440:../probe_scope.c ****                  break;                                                             
 441:../probe_scope.c ****                                                                                     
 442:../probe_scope.c ****             case PROBE_SCOPE_STATE_DATA_RDY:                                        
 443:../probe_scope.c ****                  if (ProbeScope_TrigHoldOffCtr > 0) {                               // Hold-off bef
 444:../probe_scope.c ****                      ProbeScope_TrigHoldOffCtr--;                                   
 445:../probe_scope.c ****                  } else {                                                           
 446:../probe_scope.c ****                      if (ProbeScope_DataRdyFlag == 0) {                             // Give Probe t
 447:../probe_scope.c ****                          ProbeScope_TrigFlag          = 0;
 448:../probe_scope.c ****                          ProbeScope_SamplesPreTrigCtr = ProbeScope_TrigDispPos;     // Minimum numb
 449:../probe_scope.c ****                          ProbeScope_State             = PROBE_SCOPE_STATE_SAMPLING_PRE_TRIG;
 450:../probe_scope.c ****                          ProbeScope_SampleChAll();                                  // Get the firs
 451:../probe_scope.c ****                          ProbeScope_SamplePosNext();
 452:../probe_scope.c ****                      }
 453:../probe_scope.c ****                  }
 454:../probe_scope.c ****                  break;
 455:../probe_scope.c ****                  
 456:../probe_scope.c ****             default:
 457:../probe_scope.c ****                  ProbeScope_State = PROBE_SCOPE_STATE_START;
 458:../probe_scope.c ****                  break;
 459:../probe_scope.c ****         }
 460:../probe_scope.c ****     }
 461:../probe_scope.c **** }
 462:../probe_scope.c **** 
 463:../probe_scope.c **** /*
 464:../probe_scope.c **** ***************************************************************************************************
 465:../probe_scope.c **** *                                              ProbeScope_SampleChAll()
 466:../probe_scope.c **** *
 467:../probe_scope.c **** * Description: This function is called to get a sample from all the enabled channels
 468:../probe_scope.c **** *
 469:../probe_scope.c **** * Arguments  : none
 470:../probe_scope.c **** * Returns    : none
 471:../probe_scope.c **** ***************************************************************************************************
 472:../probe_scope.c **** */
 473:../probe_scope.c **** 
 474:../probe_scope.c **** static  void  ProbeScope_SampleChAll (void)
 475:../probe_scope.c **** {
 476:../probe_scope.c ****     ProbeScope_SampleCh(&ProbeScope_Ch1);
 477:../probe_scope.c **** 
 478:../probe_scope.c **** #if PROBE_SCOPE_MAX_CH >= 2
 479:../probe_scope.c ****     ProbeScope_SampleCh(&ProbeScope_Ch2);
 480:../probe_scope.c **** #endif
 481:../probe_scope.c **** 
 482:../probe_scope.c **** #if PROBE_SCOPE_MAX_CH >= 3                     
 483:../probe_scope.c ****     ProbeScope_SampleCh(&ProbeScope_Ch3);
 484:../probe_scope.c **** #endif
 485:../probe_scope.c **** 
 486:../probe_scope.c **** #if PROBE_SCOPE_MAX_CH >= 4                     
 487:../probe_scope.c ****     ProbeScope_SampleCh(&ProbeScope_Ch4);
 488:../probe_scope.c **** #endif                     
 489:../probe_scope.c **** 
 490:../probe_scope.c **** #if PROBE_SCOPE_MAX_CH >= 5
 491:../probe_scope.c ****     ProbeScope_SampleCh(&ProbeScope_Ch5);
 492:../probe_scope.c **** #endif
 493:../probe_scope.c **** 
 494:../probe_scope.c **** #if PROBE_SCOPE_MAX_CH >= 6                     
 495:../probe_scope.c ****     ProbeScope_SampleCh(&ProbeScope_Ch6);
 496:../probe_scope.c **** #endif
 497:../probe_scope.c **** 
 498:../probe_scope.c **** #if PROBE_SCOPE_MAX_CH >= 7                     
 499:../probe_scope.c ****     ProbeScope_SampleCh(&ProbeScope_Ch7);
 500:../probe_scope.c **** #endif                     
 501:../probe_scope.c **** 
 502:../probe_scope.c **** #if PROBE_SCOPE_MAX_CH >= 8                     
 503:../probe_scope.c ****     ProbeScope_SampleCh(&ProbeScope_Ch8);
 504:../probe_scope.c **** #endif                     
 505:../probe_scope.c **** }
 506:../probe_scope.c **** 
 507:../probe_scope.c **** /*
 508:../probe_scope.c **** ***************************************************************************************************
 509:../probe_scope.c **** *                                                   ProbeScope_SampleCh()
 510:../probe_scope.c **** *
 511:../probe_scope.c **** * Description: This function is called to read a sample from the desired channel and store it in it
 512:../probe_scope.c **** *
 513:../probe_scope.c **** * Arguments  : p_ch      is a pointer to the desired channel to sample
 514:../probe_scope.c **** * Returns    : none
 515:../probe_scope.c **** ***************************************************************************************************
 516:../probe_scope.c **** */
 517:../probe_scope.c **** 
 518:../probe_scope.c **** static  void  ProbeScope_SampleCh (PROBE_SCOPE_CH  *p_ch)
  27              	 .loc 1 518 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32              	.LVL0:
  33 0000 10B4     	 push {r4}
  34              	.LCFI0:
  35              	 .cfi_def_cfa_offset 4
  36              	 .cfi_offset 4,-4
 519:../probe_scope.c **** {
 520:../probe_scope.c ****     PROBE_SCOPE_CH_SAMPLE   msk;                                    // Mask used to select desired 
 521:../probe_scope.c ****     PROBE_SCOPE_CH_SAMPLE  *p_sample;                               // Pointer to where the sample 
 522:../probe_scope.c **** 
 523:../probe_scope.c **** 
 524:../probe_scope.c ****     if (p_ch->En == 1) {
 525:../probe_scope.c ****         p_sample = &p_ch->Samples[ProbeScope_SampleIxCur];          // Point to current position in
  37              	 .loc 1 525 0
  38 0002 3D4B     	 ldr r3,.L33
 526:../probe_scope.c ****         switch (p_ch->DataType) {
  39              	 .loc 1 526 0
  40 0004 0279     	 ldrb r2,[r0,#4]
 525:../probe_scope.c ****         switch (p_ch->DataType) {
  41              	 .loc 1 525 0
  42 0006 1B68     	 ldr r3,[r3]
  43              	.LVL1:
  44              	 .loc 1 526 0
  45 0008 062A     	 cmp r2,#6
  46 000a 0AD8     	 bhi .L1
  47 000c DFE802F0 	 tbb [pc,r2]
  48              	.L4:
  49 0010 1F       	 .byte (.L3-.L4)/2
  50 0011 2F       	 .byte (.L5-.L4)/2
  51 0012 3F       	 .byte (.L6-.L4)/2
  52 0013 4E       	 .byte (.L7-.L4)/2
  53 0014 0C       	 .byte (.L9-.L4)/2
  54 0015 0C       	 .byte (.L9-.L4)/2
  55 0016 04       	 .byte (.L10-.L4)/2
  56 0017 00       	 .p2align 1
  57              	.L10:
 527:../probe_scope.c ****             case PROBE_SCOPE_INT08U:
 528:../probe_scope.c ****                  if (p_ch->BitEn == 0) {
 529:../probe_scope.c ****                      p_sample->Val08U     = *(CPU_INT08U *)p_ch->DataAddr;
 530:../probe_scope.c ****                  } else {
 531:../probe_scope.c ****                      msk.Val08U           =  (CPU_INT08U)1 << p_ch->BitSel;
 532:../probe_scope.c ****                      if (*(CPU_INT08U *)p_ch->DataAddr & msk.Val08U) {
 533:../probe_scope.c ****                          p_sample->Val08U = 1;
 534:../probe_scope.c ****                      } else {
 535:../probe_scope.c ****                          p_sample->Val08U = 0;
 536:../probe_scope.c ****                      }
 537:../probe_scope.c ****                  }
 538:../probe_scope.c ****                  break;
 539:../probe_scope.c ****                                   
 540:../probe_scope.c ****             case PROBE_SCOPE_INT08S:
 541:../probe_scope.c ****                  if (p_ch->BitEn == 0) {
 542:../probe_scope.c ****                      p_sample->Val08S     = *(CPU_INT08S *)p_ch->DataAddr;
 543:../probe_scope.c ****                  } else {
 544:../probe_scope.c ****                      msk.Val08S           =  (CPU_INT08S)1 << p_ch->BitSel;
 545:../probe_scope.c ****                      if (*(CPU_INT08S *)p_ch->DataAddr & msk.Val08S) {
 546:../probe_scope.c ****                          p_sample->Val08S = 1;
 547:../probe_scope.c ****                      } else {
 548:../probe_scope.c ****                          p_sample->Val08S = 0;
 549:../probe_scope.c ****                      }
 550:../probe_scope.c ****                  }
 551:../probe_scope.c ****                  break;
 552:../probe_scope.c ****                                   
 553:../probe_scope.c **** #if PROBE_SCOPE_16_BIT_EN > 0                                   
 554:../probe_scope.c ****             case PROBE_SCOPE_INT16U:
 555:../probe_scope.c ****                  if (p_ch->BitEn == 0) {
 556:../probe_scope.c ****                      p_sample->Val16U     = *(CPU_INT16U *)p_ch->DataAddr;
 557:../probe_scope.c ****                  } else {
 558:../probe_scope.c ****                      msk.Val16U           =  (CPU_INT16U)1 << p_ch->BitSel;
 559:../probe_scope.c ****                      if (*(CPU_INT16U *)p_ch->DataAddr & msk.Val16U) {
 560:../probe_scope.c ****                          p_sample->Val16U = 1;
 561:../probe_scope.c ****                      } else {
 562:../probe_scope.c ****                          p_sample->Val16U = 0;
 563:../probe_scope.c ****                      }
 564:../probe_scope.c ****                  }
 565:../probe_scope.c ****                  break;
 566:../probe_scope.c ****                                   
 567:../probe_scope.c ****             case PROBE_SCOPE_INT16S:
 568:../probe_scope.c ****                  if (p_ch->BitEn == 0) {
 569:../probe_scope.c ****                      p_sample->Val16S     = *(CPU_INT16S *)p_ch->DataAddr;
 570:../probe_scope.c ****                  } else {
 571:../probe_scope.c ****                      msk.Val16S           =  (CPU_INT16S)1 << p_ch->BitSel;
 572:../probe_scope.c ****                      if (*(CPU_INT16S *)p_ch->DataAddr & msk.Val16S) {
 573:../probe_scope.c ****                          p_sample->Val16S = 1;
 574:../probe_scope.c ****                      } else {
 575:../probe_scope.c ****                          p_sample->Val16S = 0;
 576:../probe_scope.c ****                      }
 577:../probe_scope.c ****                  }
 578:../probe_scope.c ****                  break;
 579:../probe_scope.c **** #endif
 580:../probe_scope.c **** 
 581:../probe_scope.c **** #if PROBE_SCOPE_32_BIT_EN > 0                                   
 582:../probe_scope.c ****             case PROBE_SCOPE_INT32U:
 583:../probe_scope.c ****                  if (p_ch->BitEn == 0) {
 584:../probe_scope.c ****                      p_sample->Val32U     = *(CPU_INT32U *)p_ch->DataAddr;
 585:../probe_scope.c ****                  } else {
 586:../probe_scope.c ****                      msk.Val32U           =  (CPU_INT32U)1 << p_ch->BitSel;
 587:../probe_scope.c ****                      if (*(CPU_INT32U *)p_ch->DataAddr & msk.Val32U) {
 588:../probe_scope.c ****                          p_sample->Val32U = 1;
 589:../probe_scope.c ****                      } else {
 590:../probe_scope.c ****                          p_sample->Val32U = 0;
 591:../probe_scope.c ****                      }
 592:../probe_scope.c ****                  }
 593:../probe_scope.c ****                  break;
 594:../probe_scope.c ****                                   
 595:../probe_scope.c ****             case PROBE_SCOPE_INT32S:
 596:../probe_scope.c ****                  if (p_ch->BitEn == 0) {
 597:../probe_scope.c ****                      p_sample->Val32S     = *(CPU_INT32S *)p_ch->DataAddr;
 598:../probe_scope.c ****                  } else {
 599:../probe_scope.c ****                      msk.Val32S           =  (CPU_INT32S)1 << p_ch->BitSel;
 600:../probe_scope.c ****                      if (*(CPU_INT32S *)p_ch->DataAddr & msk.Val32S) {
 601:../probe_scope.c ****                          p_sample->Val32S = 1;
 602:../probe_scope.c ****                      } else {
 603:../probe_scope.c ****                          p_sample->Val32S = 0;
 604:../probe_scope.c ****                      }
 605:../probe_scope.c ****                  }
 606:../probe_scope.c ****                  break;
 607:../probe_scope.c ****                                   
 608:../probe_scope.c ****             case PROBE_SCOPE_FP32:
 609:../probe_scope.c ****                  p_sample->ValFP32  = *(CPU_FP32   *)p_ch->DataAddr;
  58              	 .loc 1 609 0
  59 0018 0269     	 ldr r2,[r0,#16]
  60 001a 00EB8300 	 add r0,r0,r3,lsl#2
  61              	.LVL2:
  62 001e 1268     	 ldr r2,[r2]
  63 0020 8261     	 str r2,[r0,#24]
  64              	.LVL3:
  65              	.L1:
 610:../probe_scope.c ****                  break;
 611:../probe_scope.c **** #endif
 612:../probe_scope.c ****         }                          
 613:../probe_scope.c ****     }
 614:../probe_scope.c **** }
  66              	 .loc 1 614 0
  67 0022 5DF8044B 	 ldr r4,[sp],#4
  68              	.LCFI1:
  69              	 .cfi_remember_state
  70              	 .cfi_restore 4
  71              	 .cfi_def_cfa_offset 0
  72 0026 7047     	 bx lr
  73              	.LVL4:
  74              	.L9:
  75              	.LCFI2:
  76              	 .cfi_restore_state
 596:../probe_scope.c ****                      p_sample->Val32S     = *(CPU_INT32S *)p_ch->DataAddr;
  77              	 .loc 1 596 0
  78 0028 8268     	 ldr r2,[r0,#8]
  79 002a 002A     	 cmp r2,#0
  80 002c 4DD0     	 beq .L32
 600:../probe_scope.c ****                          p_sample->Val32S = 1;
  81              	 .loc 1 600 0
  82 002e 0169     	 ldr r1,[r0,#16]
 599:../probe_scope.c ****                      if (*(CPU_INT32S *)p_ch->DataAddr & msk.Val32S) {
  83              	 .loc 1 599 0
  84 0030 027B     	 ldrb r2,[r0,#12]
 600:../probe_scope.c ****                          p_sample->Val32S = 1;
  85              	 .loc 1 600 0
  86 0032 0968     	 ldr r1,[r1]
 599:../probe_scope.c ****                      if (*(CPU_INT32S *)p_ch->DataAddr & msk.Val32S) {
  87              	 .loc 1 599 0
  88 0034 0124     	 movs r4,#1
  89 0036 04FA02F2 	 lsl r2,r4,r2
 601:../probe_scope.c ****                      } else {
  90              	 .loc 1 601 0
  91 003a 0633     	 adds r3,r3,#6
  92              	.LVL5:
 600:../probe_scope.c ****                          p_sample->Val32S = 1;
  93              	 .loc 1 600 0
  94 003c 0A40     	 ands r2,r2,r1
 601:../probe_scope.c ****                      } else {
  95              	 .loc 1 601 0
  96 003e 14BF     	 ite ne
  97 0040 40F82340 	 strne r4,[r0,r3,lsl#2]
  98              	.LVL6:
 603:../probe_scope.c ****                      }
  99              	 .loc 1 603 0
 100 0044 40F82320 	 streq r2,[r0,r3,lsl#2]
 101              	 .loc 1 614 0
 102 0048 5DF8044B 	 ldr r4,[sp],#4
 103              	.LCFI3:
 104              	 .cfi_remember_state
 105              	 .cfi_restore 4
 106              	 .cfi_def_cfa_offset 0
 107 004c 7047     	 bx lr
 108              	.LVL7:
 109              	.L3:
 110              	.LCFI4:
 111              	 .cfi_restore_state
 528:../probe_scope.c ****                      p_sample->Val08U     = *(CPU_INT08U *)p_ch->DataAddr;
 112              	 .loc 1 528 0
 113 004e 8268     	 ldr r2,[r0,#8]
 114 0050 002A     	 cmp r2,#0
 115 0052 40D0     	 beq .L24
 532:../probe_scope.c ****                          p_sample->Val08U = 1;
 116              	 .loc 1 532 0
 117 0054 0169     	 ldr r1,[r0,#16]
 531:../probe_scope.c ****                      if (*(CPU_INT08U *)p_ch->DataAddr & msk.Val08U) {
 118              	 .loc 1 531 0
 119 0056 027B     	 ldrb r2,[r0,#12]
 532:../probe_scope.c ****                          p_sample->Val08U = 1;
 120              	 .loc 1 532 0
 121 0058 0978     	 ldrb r1,[r1]
 531:../probe_scope.c ****                      if (*(CPU_INT08U *)p_ch->DataAddr & msk.Val08U) {
 122              	 .loc 1 531 0
 123 005a 0124     	 movs r4,#1
 124 005c 04FA02F2 	 lsl r2,r4,r2
 532:../probe_scope.c ****                          p_sample->Val08U = 1;
 125              	 .loc 1 532 0
 126 0060 0A40     	 ands r2,r2,r1
 533:../probe_scope.c ****                      } else {
 127              	 .loc 1 533 0
 128 0062 03F10603 	 add r3,r3,#6
 129              	.LVL8:
 532:../probe_scope.c ****                          p_sample->Val08U = 1;
 130              	 .loc 1 532 0
 131 0066 39D0     	 beq .L25
 533:../probe_scope.c ****                      } else {
 132              	 .loc 1 533 0
 133 0068 00F82340 	 strb r4,[r0,r3,lsl#2]
 134 006c D9E7     	 b .L1
 135              	.LVL9:
 136              	.L5:
 541:../probe_scope.c ****                      p_sample->Val08S     = *(CPU_INT08S *)p_ch->DataAddr;
 137              	 .loc 1 541 0
 138 006e 8268     	 ldr r2,[r0,#8]
 139 0070 002A     	 cmp r2,#0
 140 0072 30D0     	 beq .L24
 545:../probe_scope.c ****                          p_sample->Val08S = 1;
 141              	 .loc 1 545 0
 142 0074 0269     	 ldr r2,[r0,#16]
 544:../probe_scope.c ****                      if (*(CPU_INT08S *)p_ch->DataAddr & msk.Val08S) {
 143              	 .loc 1 544 0
 144 0076 047B     	 ldrb r4,[r0,#12]
 545:../probe_scope.c ****                          p_sample->Val08S = 1;
 145              	 .loc 1 545 0
 146 0078 1278     	 ldrb r2,[r2]
 544:../probe_scope.c ****                      if (*(CPU_INT08S *)p_ch->DataAddr & msk.Val08S) {
 147              	 .loc 1 544 0
 148 007a 0121     	 movs r1,#1
 149 007c 01FA04F4 	 lsl r4,r1,r4
 545:../probe_scope.c ****                          p_sample->Val08S = 1;
 150              	 .loc 1 545 0
 151 0080 2240     	 ands r2,r2,r4
 152 0082 52B2     	 sxtb r2,r2
 546:../probe_scope.c ****                      } else {
 153              	 .loc 1 546 0
 154 0084 0633     	 adds r3,r3,#6
 155              	.LVL10:
 545:../probe_scope.c ****                          p_sample->Val08S = 1;
 156              	 .loc 1 545 0
 157 0086 4AB3     	 cbz r2,.L25
 546:../probe_scope.c ****                      } else {
 158              	 .loc 1 546 0
 159 0088 00F82310 	 strb r1,[r0,r3,lsl#2]
 160 008c C9E7     	 b .L1
 161              	.LVL11:
 162              	.L6:
 555:../probe_scope.c ****                      p_sample->Val16U     = *(CPU_INT16U *)p_ch->DataAddr;
 163              	 .loc 1 555 0
 164 008e 8268     	 ldr r2,[r0,#8]
 165 0090 62B3     	 cbz r2,.L28
 559:../probe_scope.c ****                          p_sample->Val16U = 1;
 166              	 .loc 1 559 0
 167 0092 0169     	 ldr r1,[r0,#16]
 558:../probe_scope.c ****                      if (*(CPU_INT16U *)p_ch->DataAddr & msk.Val16U) {
 168              	 .loc 1 558 0
 169 0094 027B     	 ldrb r2,[r0,#12]
 559:../probe_scope.c ****                          p_sample->Val16U = 1;
 170              	 .loc 1 559 0
 171 0096 0988     	 ldrh r1,[r1]
 558:../probe_scope.c ****                      if (*(CPU_INT16U *)p_ch->DataAddr & msk.Val16U) {
 172              	 .loc 1 558 0
 173 0098 0124     	 movs r4,#1
 174 009a 04FA02F2 	 lsl r2,r4,r2
 559:../probe_scope.c ****                          p_sample->Val16U = 1;
 175              	 .loc 1 559 0
 176 009e 0A40     	 ands r2,r2,r1
 560:../probe_scope.c ****                      } else {
 177              	 .loc 1 560 0
 178 00a0 03F10603 	 add r3,r3,#6
 179              	.LVL12:
 559:../probe_scope.c ****                          p_sample->Val16U = 1;
 180              	 .loc 1 559 0
 181 00a4 1FD0     	 beq .L18
 560:../probe_scope.c ****                      } else {
 182              	 .loc 1 560 0
 183 00a6 20F82340 	 strh r4,[r0,r3,lsl#2]
 184 00aa BAE7     	 b .L1
 185              	.LVL13:
 186              	.L7:
 568:../probe_scope.c ****                      p_sample->Val16S     = *(CPU_INT16S *)p_ch->DataAddr;
 187              	 .loc 1 568 0
 188 00ac 8268     	 ldr r2,[r0,#8]
 189 00ae EAB1     	 cbz r2,.L28
 572:../probe_scope.c ****                          p_sample->Val16S = 1;
 190              	 .loc 1 572 0
 191 00b0 0269     	 ldr r2,[r0,#16]
 571:../probe_scope.c ****                      if (*(CPU_INT16S *)p_ch->DataAddr & msk.Val16S) {
 192              	 .loc 1 571 0
 193 00b2 047B     	 ldrb r4,[r0,#12]
 572:../probe_scope.c ****                          p_sample->Val16S = 1;
 194              	 .loc 1 572 0
 195 00b4 1288     	 ldrh r2,[r2]
 571:../probe_scope.c ****                      if (*(CPU_INT16S *)p_ch->DataAddr & msk.Val16S) {
 196              	 .loc 1 571 0
 197 00b6 0121     	 movs r1,#1
 198 00b8 01FA04F4 	 lsl r4,r1,r4
 572:../probe_scope.c ****                          p_sample->Val16S = 1;
 199              	 .loc 1 572 0
 200 00bc 2240     	 ands r2,r2,r4
 201 00be 12B2     	 sxth r2,r2
 573:../probe_scope.c ****                      } else {
 202              	 .loc 1 573 0
 203 00c0 0633     	 adds r3,r3,#6
 204              	.LVL14:
 572:../probe_scope.c ****                          p_sample->Val16S = 1;
 205              	 .loc 1 572 0
 206 00c2 82B1     	 cbz r2,.L18
 573:../probe_scope.c ****                      } else {
 207              	 .loc 1 573 0
 208 00c4 20F82310 	 strh r1,[r0,r3,lsl#2]
 209 00c8 ABE7     	 b .L1
 210              	.LVL15:
 211              	.L32:
 597:../probe_scope.c ****                  } else {
 212              	 .loc 1 597 0
 213 00ca 0269     	 ldr r2,[r0,#16]
 214 00cc 0633     	 adds r3,r3,#6
 215              	.LVL16:
 216 00ce 1268     	 ldr r2,[r2]
 217 00d0 40F82320 	 str r2,[r0,r3,lsl#2]
 218              	.LVL17:
 219 00d4 A5E7     	 b .L1
 220              	.LVL18:
 221              	.L24:
 542:../probe_scope.c ****                  } else {
 222              	 .loc 1 542 0
 223 00d6 0269     	 ldr r2,[r0,#16]
 224 00d8 1278     	 ldrb r2,[r2]
 225 00da 0633     	 adds r3,r3,#6
 226              	.LVL19:
 227              	.L25:
 228 00dc 00F82320 	 strb r2,[r0,r3,lsl#2]
 229              	.LVL20:
 230              	 .loc 1 614 0
 231 00e0 5DF8044B 	 ldr r4,[sp],#4
 232              	.LCFI5:
 233              	 .cfi_remember_state
 234              	 .cfi_restore 4
 235              	 .cfi_def_cfa_offset 0
 236 00e4 7047     	 bx lr
 237              	.LVL21:
 238              	.L18:
 239              	.LCFI6:
 240              	 .cfi_restore_state
 575:../probe_scope.c ****                      }
 241              	 .loc 1 575 0
 242 00e6 20F82320 	 strh r2,[r0,r3,lsl#2]
 243              	.LVL22:
 244 00ea 9AE7     	 b .L1
 245              	.LVL23:
 246              	.L28:
 569:../probe_scope.c ****                  } else {
 247              	 .loc 1 569 0
 248 00ec 0269     	 ldr r2,[r0,#16]
 249 00ee 0633     	 adds r3,r3,#6
 250              	.LVL24:
 251 00f0 1288     	 ldrh r2,[r2]
 252 00f2 20F82320 	 strh r2,[r0,r3,lsl#2]
 253              	.LVL25:
 254 00f6 94E7     	 b .L1
 255              	.L34:
 256              	 .align 2
 257              	.L33:
 258 00f8 00000000 	 .word .LANCHOR0
 259              	 .cfi_endproc
 260              	.LFE9:
 262              	 .section .text.ProbeScope_ModeTrig.part.1,"ax",%progbits
 263              	 .align 2
 264              	 .thumb
 265              	 .thumb_func
 267              	ProbeScope_ModeTrig.part.1:
 268              	.LFB10:
 388:../probe_scope.c **** {
 269              	 .loc 1 388 0
 270              	 .cfi_startproc
 271              	 
 272              	 
 393:../probe_scope.c ****             ProbeScope_SamplingClkDiv =  1;
 273              	 .loc 1 393 0
 274 0000 A44A     	 ldr r2,.L236
 388:../probe_scope.c **** {
 275              	 .loc 1 388 0
 276 0002 2DE9F843 	 push {r3,r4,r5,r6,r7,r8,r9,lr}
 277              	.LCFI7:
 278              	 .cfi_def_cfa_offset 32
 279              	 .cfi_offset 3,-32
 280              	 .cfi_offset 4,-28
 281              	 .cfi_offset 5,-24
 282              	 .cfi_offset 6,-20
 283              	 .cfi_offset 7,-16
 284              	 .cfi_offset 8,-12
 285              	 .cfi_offset 9,-8
 286              	 .cfi_offset 14,-4
 393:../probe_scope.c ****             ProbeScope_SamplingClkDiv =  1;
 287              	 .loc 1 393 0
 288 0006 1388     	 ldrh r3,[r2]
 289 0008 0BB9     	 cbnz r3,.L36
 394:../probe_scope.c ****         }
 290              	 .loc 1 394 0
 291 000a 0123     	 movs r3,#1
 292 000c 1380     	 strh r3,[r2]
 293              	.L36:
 397:../probe_scope.c ****             case PROBE_SCOPE_STATE_START:
 294              	 .loc 1 397 0
 295 000e A24C     	 ldr r4,.L236+4
 396:../probe_scope.c ****         switch (ProbeScope_State) {
 296              	 .loc 1 396 0
 297 0010 A249     	 ldr r1,.L236+8
 397:../probe_scope.c ****             case PROBE_SCOPE_STATE_START:
 298              	 .loc 1 397 0
 299 0012 2278     	 ldrb r2,[r4]
 396:../probe_scope.c ****         switch (ProbeScope_State) {
 300              	 .loc 1 396 0
 301 0014 0B80     	 strh r3,[r1]
 397:../probe_scope.c ****             case PROBE_SCOPE_STATE_START:
 302              	 .loc 1 397 0
 303 0016 032A     	 cmp r2,#3
 304 0018 00F21981 	 bhi .L37
 305 001c DFE812F0 	 tbh [pc,r2,lsl#1]
 306              	.L39:
 307 0020 D700     	 .2byte (.L38-.L39)/2
 308 0022 9100     	 .2byte (.L40-.L39)/2
 309 0024 4A00     	 .2byte (.L41-.L39)/2
 310 0026 0400     	 .2byte (.L42-.L39)/2
 311              	 .p2align 1
 312              	.L42:
 443:../probe_scope.c ****                      ProbeScope_TrigHoldOffCtr--;                                   
 313              	 .loc 1 443 0
 314 0028 9D4A     	 ldr r2,.L236+12
 315 002a 1368     	 ldr r3,[r2]
 316 002c 002B     	 cmp r3,#0
 317 002e 40F01281 	 bne .L183
 446:../probe_scope.c ****                          ProbeScope_TrigFlag          = 0;
 318              	 .loc 1 446 0
 319 0032 9C4B     	 ldr r3,.L236+16
 320 0034 1B68     	 ldr r3,[r3]
 321 0036 002B     	 cmp r3,#0
 322 0038 40F00B81 	 bne .L35
 447:../probe_scope.c ****                          ProbeScope_SamplesPreTrigCtr = ProbeScope_TrigDispPos;     // Minimum numb
 323              	 .loc 1 447 0
 324 003c 9A4A     	 ldr r2,.L236+20
 325              	.LBB124:
 326              	.LBB125:
 327              	.LBB126:
 328              	.LBB127:
 524:../probe_scope.c ****         p_sample = &p_ch->Samples[ProbeScope_SampleIxCur];          // Point to current position in
 329              	 .loc 1 524 0
 330 003e 9B48     	 ldr r0,.L236+24
 331              	.LBE127:
 332              	.LBE126:
 333              	.LBE125:
 334              	.LBE124:
 448:../probe_scope.c ****                          ProbeScope_State             = PROBE_SCOPE_STATE_SAMPLING_PRE_TRIG;
 335              	 .loc 1 448 0
 336 0040 9B49     	 ldr r1,.L236+28
 447:../probe_scope.c ****                          ProbeScope_SamplesPreTrigCtr = ProbeScope_TrigDispPos;     // Minimum numb
 337              	 .loc 1 447 0
 338 0042 1360     	 str r3,[r2]
 448:../probe_scope.c ****                          ProbeScope_State             = PROBE_SCOPE_STATE_SAMPLING_PRE_TRIG;
 339              	 .loc 1 448 0
 340 0044 9B4A     	 ldr r2,.L236+32
 341              	.LBB168:
 342              	.LBB164:
 343              	.LBB132:
 344              	.LBB128:
 524:../probe_scope.c ****         p_sample = &p_ch->Samples[ProbeScope_SampleIxCur];          // Point to current position in
 345              	 .loc 1 524 0
 346 0046 0368     	 ldr r3,[r0]
 347              	.LBE128:
 348              	.LBE132:
 349              	.LBE164:
 350              	.LBE168:
 448:../probe_scope.c ****                          ProbeScope_State             = PROBE_SCOPE_STATE_SAMPLING_PRE_TRIG;
 351              	 .loc 1 448 0
 352 0048 0968     	 ldr r1,[r1]
 353 004a 1160     	 str r1,[r2]
 449:../probe_scope.c ****                          ProbeScope_SampleChAll();                                  // Get the firs
 354              	 .loc 1 449 0
 355 004c 0122     	 movs r2,#1
 356              	.LBB169:
 357              	.LBB165:
 358              	.LBB133:
 359              	.LBB129:
 524:../probe_scope.c ****         p_sample = &p_ch->Samples[ProbeScope_SampleIxCur];          // Point to current position in
 360              	 .loc 1 524 0
 361 004e 9342     	 cmp r3,r2
 362              	.LBE129:
 363              	.LBE133:
 364              	.LBE165:
 365              	.LBE169:
 449:../probe_scope.c ****                          ProbeScope_SampleChAll();                                  // Get the firs
 366              	 .loc 1 449 0
 367 0050 2270     	 strb r2,[r4]
 368              	.LVL26:
 369              	.LBB170:
 370              	.LBB166:
 371              	.LBB134:
 372              	.LBB130:
 524:../probe_scope.c ****         p_sample = &p_ch->Samples[ProbeScope_SampleIxCur];          // Point to current position in
 373              	 .loc 1 524 0
 374 0052 00F04F82 	 beq .L202
 375              	.L126:
 376              	.LVL27:
 377              	.LBE130:
 378              	.LBE134:
 379              	.LBB135:
 380              	.LBB136:
 381 0056 9848     	 ldr r0,.L236+36
 382 0058 0368     	 ldr r3,[r0]
 383 005a 012B     	 cmp r3,#1
 384 005c 00F04782 	 beq .L203
 385              	.L127:
 386              	.LVL28:
 387              	.LBE136:
 388              	.LBE135:
 389              	.LBB138:
 390              	.LBB139:
 391 0060 9648     	 ldr r0,.L236+40
 392 0062 0368     	 ldr r3,[r0]
 393 0064 012B     	 cmp r3,#1
 394 0066 00F03F82 	 beq .L204
 395              	.L128:
 396              	.LVL29:
 397              	.LBE139:
 398              	.LBE138:
 399              	.LBB141:
 400              	.LBB142:
 401 006a 9548     	 ldr r0,.L236+44
 402 006c 0368     	 ldr r3,[r0]
 403 006e 012B     	 cmp r3,#1
 404 0070 00F03782 	 beq .L205
 405              	.L129:
 406              	.LVL30:
 407              	.LBE142:
 408              	.LBE141:
 409              	.LBB144:
 410              	.LBB145:
 411 0074 9348     	 ldr r0,.L236+48
 412 0076 0368     	 ldr r3,[r0]
 413 0078 012B     	 cmp r3,#1
 414 007a 00F04182 	 beq .L206
 415              	.L130:
 416              	.LVL31:
 417              	.LBE145:
 418              	.LBE144:
 419              	.LBB147:
 420              	.LBB148:
 421 007e 9248     	 ldr r0,.L236+52
 422 0080 0368     	 ldr r3,[r0]
 423 0082 012B     	 cmp r3,#1
 424 0084 00F03982 	 beq .L207
 425              	.L131:
 426              	.LVL32:
 427              	.LBE148:
 428              	.LBE147:
 429              	.LBB150:
 430              	.LBB151:
 431 0088 9048     	 ldr r0,.L236+56
 432 008a 0368     	 ldr r3,[r0]
 433 008c 012B     	 cmp r3,#1
 434 008e 00F03A82 	 beq .L208
 435              	.L132:
 436              	.LVL33:
 437              	.LBE151:
 438              	.LBE150:
 439              	.LBB153:
 440              	.LBB154:
 441 0092 8F48     	 ldr r0,.L236+60
 442 0094 0368     	 ldr r3,[r0]
 443 0096 012B     	 cmp r3,#1
 444 0098 00F02082 	 beq .L209
 445              	.L133:
 446              	.LBE154:
 447              	.LBE153:
 448              	.LBE166:
 449              	.LBE170:
 450              	.LBB171:
 451              	.LBB172:
 615:../probe_scope.c **** 
 616:../probe_scope.c **** 
 617:../probe_scope.c **** /*
 618:../probe_scope.c **** ***************************************************************************************************
 619:../probe_scope.c **** *                                         Position Sample Index for next sample
 620:../probe_scope.c **** *
 621:../probe_scope.c **** * Description: 
 622:../probe_scope.c **** *
 623:../probe_scope.c **** * Arguments  : none
 624:../probe_scope.c **** * Returns    : none
 625:../probe_scope.c **** ***************************************************************************************************
 626:../probe_scope.c **** */
 627:../probe_scope.c **** 
 628:../probe_scope.c **** static  void  ProbeScope_SamplePosNext (void)
 629:../probe_scope.c **** {
 630:../probe_scope.c ****     ProbeScope_SampleIxPrev = ProbeScope_SampleIxCur;              // Update the position of the pr
 452              	 .loc 1 630 0
 453 009c 8D4A     	 ldr r2,.L236+64
 454 009e 8E49     	 ldr r1,.L236+68
 455 00a0 1368     	 ldr r3,[r2]
 456 00a2 0B60     	 str r3,[r1]
 631:../probe_scope.c ****     ProbeScope_SampleIxCur++;                                      // Position to where next sample
 457              	 .loc 1 631 0
 458 00a4 0133     	 adds r3,r3,#1
 632:../probe_scope.c ****     if (ProbeScope_SampleIxCur >= PROBE_SCOPE_MAX_SAMPLES) {       // See if we need to wrap around
 459              	 .loc 1 632 0
 460 00a6 B3F57A7F 	 cmp r3,#1000
 633:../probe_scope.c ****         ProbeScope_SampleIxCur = 0;                                // yes
 461              	 .loc 1 633 0
 462 00aa 28BF     	 it cs
 463 00ac 0023     	 movcs r3,#0
 464 00ae 1360     	 str r3,[r2]
 465 00b0 BDE8F883 	 pop {r3,r4,r5,r6,r7,r8,r9,pc}
 466              	.LVL34:
 467              	.L41:
 468              	.LBE172:
 469              	.LBE171:
 470              	.LBB173:
 471              	.LBB174:
 472              	.LBB175:
 473              	.LBB176:
 524:../probe_scope.c ****         p_sample = &p_ch->Samples[ProbeScope_SampleIxCur];          // Point to current position in
 474              	 .loc 1 524 0
 475 00b4 7D48     	 ldr r0,.L236+24
 476 00b6 0368     	 ldr r3,[r0]
 477 00b8 012B     	 cmp r3,#1
 478 00ba 00F0E880 	 beq .L210
 479              	.L111:
 480              	.LVL35:
 481              	.LBE176:
 482              	.LBE175:
 483              	.LBB178:
 484              	.LBB179:
 485 00be 7E48     	 ldr r0,.L236+36
 486 00c0 0368     	 ldr r3,[r0]
 487 00c2 012B     	 cmp r3,#1
 488 00c4 00F03981 	 beq .L211
 489              	.L112:
 490              	.LVL36:
 491              	.LBE179:
 492              	.LBE178:
 493              	.LBB181:
 494              	.LBB182:
 495 00c8 7C48     	 ldr r0,.L236+40
 496 00ca 0368     	 ldr r3,[r0]
 497 00cc 012B     	 cmp r3,#1
 498 00ce 00F03781 	 beq .L212
 499              	.L113:
 500              	.LVL37:
 501              	.LBE182:
 502              	.LBE181:
 503              	.LBB184:
 504              	.LBB185:
 505 00d2 7B48     	 ldr r0,.L236+44
 506 00d4 0368     	 ldr r3,[r0]
 507 00d6 012B     	 cmp r3,#1
 508 00d8 00F03B81 	 beq .L213
 509              	.L114:
 510              	.LVL38:
 511              	.LBE185:
 512              	.LBE184:
 513              	.LBB187:
 514              	.LBB188:
 515 00dc 7948     	 ldr r0,.L236+48
 516 00de 0368     	 ldr r3,[r0]
 517 00e0 012B     	 cmp r3,#1
 518 00e2 00F03981 	 beq .L214
 519              	.L115:
 520              	.LVL39:
 521              	.LBE188:
 522              	.LBE187:
 523              	.LBB190:
 524              	.LBB191:
 525 00e6 7848     	 ldr r0,.L236+52
 526 00e8 0368     	 ldr r3,[r0]
 527 00ea 012B     	 cmp r3,#1
 528 00ec 00F00181 	 beq .L215
 529              	.L116:
 530              	.LVL40:
 531              	.LBE191:
 532              	.LBE190:
 533              	.LBB193:
 534              	.LBB194:
 535 00f0 7648     	 ldr r0,.L236+56
 536 00f2 0368     	 ldr r3,[r0]
 537 00f4 012B     	 cmp r3,#1
 538 00f6 00F0FF80 	 beq .L216
 539              	.L117:
 540              	.LVL41:
 541              	.LBE194:
 542              	.LBE193:
 543              	.LBB196:
 544              	.LBB197:
 545 00fa 7548     	 ldr r0,.L236+60
 546 00fc 0368     	 ldr r3,[r0]
 547 00fe 012B     	 cmp r3,#1
 548 0100 00F0BF80 	 beq .L217
 549              	.L118:
 550              	.LBE197:
 551              	.LBE196:
 552              	.LBE174:
 553              	.LBE173:
 554              	.LBB212:
 555              	.LBB213:
 630:../probe_scope.c ****     ProbeScope_SampleIxCur++;                                      // Position to where next sample
 556              	 .loc 1 630 0
 557 0104 734A     	 ldr r2,.L236+64
 558 0106 7449     	 ldr r1,.L236+68
 559 0108 1368     	 ldr r3,[r2]
 560 010a 0B60     	 str r3,[r1]
 631:../probe_scope.c ****     if (ProbeScope_SampleIxCur >= PROBE_SCOPE_MAX_SAMPLES) {       // See if we need to wrap around
 561              	 .loc 1 631 0
 562 010c 0133     	 adds r3,r3,#1
 632:../probe_scope.c ****         ProbeScope_SampleIxCur = 0;                                // yes
 563              	 .loc 1 632 0
 564 010e B3F57A7F 	 cmp r3,#1000
 565              	 .loc 1 633 0
 566 0112 28BF     	 it cs
 567 0114 0023     	 movcs r3,#0
 568 0116 1360     	 str r3,[r2]
 569              	.LBE213:
 570              	.LBE212:
 428:../probe_scope.c ****                      ProbeScope_SamplesPostTrigCtr--;
 571              	 .loc 1 428 0
 572 0118 704A     	 ldr r2,.L236+72
 573 011a 1368     	 ldr r3,[r2]
 574 011c 002B     	 cmp r3,#0
 575 011e 40F09A80 	 bne .L183
 431:../probe_scope.c ****                          ProbeScope_Mode           = PROBE_SCOPE_MODE_OFF;
 576              	 .loc 1 431 0
 577 0122 6F4A     	 ldr r2,.L236+76
 578 0124 1178     	 ldrb r1,[r2]
 579 0126 0129     	 cmp r1,#1
 580 0128 00F03281 	 beq .L218
 435:../probe_scope.c ****                          ProbeScope_State          = PROBE_SCOPE_STATE_DATA_RDY;    
 581              	 .loc 1 435 0
 582 012c 6D4A     	 ldr r2,.L236+80
 583 012e 5C4B     	 ldr r3,.L236+12
 584 0130 1268     	 ldr r2,[r2]
 585 0132 1A60     	 str r2,[r3]
 436:../probe_scope.c ****                      }                                                              
 586              	 .loc 1 436 0
 587 0134 0323     	 movs r3,#3
 588              	.L123:
 438:../probe_scope.c ****                  }                                                                  
 589              	 .loc 1 438 0
 590 0136 5B4A     	 ldr r2,.L236+16
 591 0138 2370     	 strb r3,[r4]
 592 013a 0123     	 movs r3,#1
 593 013c 1360     	 str r3,[r2]
 594 013e BDE8F883 	 pop {r3,r4,r5,r6,r7,r8,r9,pc}
 595              	.LVL42:
 596              	.L40:
 597              	.LBB214:
 598              	.LBB215:
 599              	.LBB216:
 600              	.LBB217:
 524:../probe_scope.c ****         p_sample = &p_ch->Samples[ProbeScope_SampleIxCur];          // Point to current position in
 601              	 .loc 1 524 0
 602 0142 5A48     	 ldr r0,.L236+24
 603 0144 0368     	 ldr r3,[r0]
 604 0146 012B     	 cmp r3,#1
 605 0148 00F0D080 	 beq .L219
 606              	.L52:
 607              	.LVL43:
 608              	.LBE217:
 609              	.LBE216:
 610              	.LBB219:
 611              	.LBB220:
 612 014c 5A48     	 ldr r0,.L236+36
 613 014e 0368     	 ldr r3,[r0]
 614 0150 012B     	 cmp r3,#1
 615 0152 00F0E380 	 beq .L220
 616              	.L53:
 617              	.LVL44:
 618              	.LBE220:
 619              	.LBE219:
 620              	.LBB222:
 621              	.LBB223:
 622 0156 5948     	 ldr r0,.L236+40
 623 0158 0368     	 ldr r3,[r0]
 624 015a 012B     	 cmp r3,#1
 625 015c 00F0F380 	 beq .L221
 626              	.L54:
 627              	.LVL45:
 628              	.LBE223:
 629              	.LBE222:
 630              	.LBB225:
 631              	.LBB226:
 632 0160 5748     	 ldr r0,.L236+44
 633 0162 0368     	 ldr r3,[r0]
 634 0164 012B     	 cmp r3,#1
 635 0166 00F0F180 	 beq .L222
 636              	.L55:
 637              	.LVL46:
 638              	.LBE226:
 639              	.LBE225:
 640              	.LBB228:
 641              	.LBB229:
 642 016a 5648     	 ldr r0,.L236+48
 643 016c 0368     	 ldr r3,[r0]
 644 016e 012B     	 cmp r3,#1
 645 0170 00F0CB80 	 beq .L223
 646              	.L56:
 647              	.LVL47:
 648              	.LBE229:
 649              	.LBE228:
 650              	.LBB231:
 651              	.LBB232:
 652 0174 5448     	 ldr r0,.L236+52
 653 0176 0368     	 ldr r3,[r0]
 654 0178 012B     	 cmp r3,#1
 655 017a 00F0C980 	 beq .L224
 656              	.L57:
 657              	.LVL48:
 658              	.LBE232:
 659              	.LBE231:
 660              	.LBB234:
 661              	.LBB235:
 662 017e 5348     	 ldr r0,.L236+56
 663 0180 0368     	 ldr r3,[r0]
 664 0182 012B     	 cmp r3,#1
 665 0184 00F0C780 	 beq .L225
 666              	.L58:
 667              	.LVL49:
 668              	.LBE235:
 669              	.LBE234:
 670              	.LBB237:
 671              	.LBB238:
 672 0188 5148     	 ldr r0,.L236+60
 673 018a 0368     	 ldr r3,[r0]
 674 018c 012B     	 cmp r3,#1
 675 018e 75D0     	 beq .L226
 676              	.L59:
 677              	.LBE238:
 678              	.LBE237:
 679              	.LBE215:
 680              	.LBE214:
 413:../probe_scope.c ****                      ProbeScope_SamplesPreTrigCtr--;                               
 681              	 .loc 1 413 0
 682 0190 4849     	 ldr r1,.L236+32
 683 0192 0B68     	 ldr r3,[r1]
 684 0194 002B     	 cmp r3,#0
 685 0196 62D0     	 beq .L60
 686 0198 4E4D     	 ldr r5,.L236+64
 687 019a 4348     	 ldr r0,.L236+20
 688 019c 2A68     	 ldr r2,[r5]
 689 019e 4E4E     	 ldr r6,.L236+68
 414:../probe_scope.c ****                  } else {
 690              	 .loc 1 414 0
 691 01a0 013B     	 subs r3,r3,#1
 692 01a2 0B60     	 str r3,[r1]
 693              	.L61:
 694              	.LBB252:
 695              	.LBB253:
 631:../probe_scope.c ****     if (ProbeScope_SampleIxCur >= PROBE_SCOPE_MAX_SAMPLES) {       // See if we need to wrap around
 696              	 .loc 1 631 0
 697 01a4 531C     	 adds r3,r2,#1
 632:../probe_scope.c ****         ProbeScope_SampleIxCur = 0;                                // yes
 698              	 .loc 1 632 0
 699 01a6 B3F57A7F 	 cmp r3,#1000
 700              	 .loc 1 633 0
 701 01aa 28BF     	 it cs
 702 01ac 0023     	 movcs r3,#0
 703 01ae 2B60     	 str r3,[r5]
 704              	.LBE253:
 705              	.LBE252:
 419:../probe_scope.c ****                      ProbeScope_SamplesPostTrigCtr = PROBE_SCOPE_MAX_SAMPLES - ProbeScope_TrigDispP
 706              	 .loc 1 419 0
 707 01b0 0368     	 ldr r3,[r0]
 708              	.LBB255:
 709              	.LBB254:
 630:../probe_scope.c ****     ProbeScope_SampleIxCur++;                                      // Position to where next sample
 710              	 .loc 1 630 0
 711 01b2 3260     	 str r2,[r6]
 712              	.LBE254:
 713              	.LBE255:
 419:../probe_scope.c ****                      ProbeScope_SamplesPostTrigCtr = PROBE_SCOPE_MAX_SAMPLES - ProbeScope_TrigDispP
 714              	 .loc 1 419 0
 715 01b4 012B     	 cmp r3,#1
 716 01b6 4CD1     	 bne .L35
 420:../probe_scope.c ****                      ProbeScope_State              = PROBE_SCOPE_STATE_SAMPLING_POST_TRIG;
 717              	 .loc 1 420 0
 718 01b8 3D4B     	 ldr r3,.L236+28
 719 01ba 4849     	 ldr r1,.L236+72
 720 01bc 1B68     	 ldr r3,[r3]
 421:../probe_scope.c ****                  }
 721              	 .loc 1 421 0
 722 01be 0222     	 movs r2,#2
 420:../probe_scope.c ****                      ProbeScope_State              = PROBE_SCOPE_STATE_SAMPLING_POST_TRIG;
 723              	 .loc 1 420 0
 724 01c0 C3F57973 	 rsb r3,r3,#996
 725 01c4 0233     	 adds r3,r3,#2
 421:../probe_scope.c ****                  }
 726              	 .loc 1 421 0
 727 01c6 2270     	 strb r2,[r4]
 420:../probe_scope.c ****                      ProbeScope_State              = PROBE_SCOPE_STATE_SAMPLING_POST_TRIG;
 728              	 .loc 1 420 0
 729 01c8 0B60     	 str r3,[r1]
 730 01ca BDE8F883 	 pop {r3,r4,r5,r6,r7,r8,r9,pc}
 731              	.LVL50:
 732              	.L38:
 399:../probe_scope.c ****                  ProbeScope_TrigFlag           = 0;
 733              	 .loc 1 399 0
 734 01ce DFF8D490 	 ldr r9,.L236+16
 400:../probe_scope.c ****                  ProbeScope_SampleIxPrev       = 0;
 735              	 .loc 1 400 0
 736 01d2 DFF8D480 	 ldr r8,.L236+20
 737              	.LBB256:
 738              	.LBB257:
 739              	.LBB258:
 740              	.LBB259:
 524:../probe_scope.c ****         p_sample = &p_ch->Samples[ProbeScope_SampleIxCur];          // Point to current position in
 741              	 .loc 1 524 0
 742 01d6 3548     	 ldr r0,.L236+24
 743              	.LBE259:
 744              	.LBE258:
 745              	.LBE257:
 746              	.LBE256:
 401:../probe_scope.c ****                  ProbeScope_SampleIxCur        = 0;
 747              	 .loc 1 401 0
 748 01d8 DFF8FCC0 	 ldr ip,.L236+68
 403:../probe_scope.c ****                  ProbeScope_SamplesPostTrigCtr = 0;
 749              	 .loc 1 403 0
 750 01dc 304A     	 ldr r2,.L236+12
 404:../probe_scope.c ****                  ProbeScope_SamplesPreTrigCtr  = ProbeScope_TrigDispPos;            // Minimum numb
 751              	 .loc 1 404 0
 752 01de 3F4F     	 ldr r7,.L236+72
 402:../probe_scope.c ****                  ProbeScope_TrigHoldOffCtr     = 0;
 753              	 .loc 1 402 0
 754 01e0 3C4D     	 ldr r5,.L236+64
 405:../probe_scope.c ****                  ProbeScope_SampleChAll();                                          // Get the firs
 755              	 .loc 1 405 0
 756 01e2 334E     	 ldr r6,.L236+28
 757 01e4 3349     	 ldr r1,.L236+32
 399:../probe_scope.c ****                  ProbeScope_TrigFlag           = 0;
 758              	 .loc 1 399 0
 759 01e6 0023     	 movs r3,#0
 760 01e8 C9F80030 	 str r3,[r9]
 401:../probe_scope.c ****                  ProbeScope_SampleIxCur        = 0;
 761              	 .loc 1 401 0
 762 01ec CCF80030 	 str r3,[ip]
 400:../probe_scope.c ****                  ProbeScope_SampleIxPrev       = 0;
 763              	 .loc 1 400 0
 764 01f0 C8F80030 	 str r3,[r8]
 403:../probe_scope.c ****                  ProbeScope_SamplesPostTrigCtr = 0;
 765              	 .loc 1 403 0
 766 01f4 1360     	 str r3,[r2]
 404:../probe_scope.c ****                  ProbeScope_SamplesPreTrigCtr  = ProbeScope_TrigDispPos;            // Minimum numb
 767              	 .loc 1 404 0
 768 01f6 3B60     	 str r3,[r7]
 402:../probe_scope.c ****                  ProbeScope_TrigHoldOffCtr     = 0;
 769              	 .loc 1 402 0
 770 01f8 2B60     	 str r3,[r5]
 771              	.LBB300:
 772              	.LBB294:
 773              	.LBB263:
 774              	.LBB260:
 524:../probe_scope.c ****         p_sample = &p_ch->Samples[ProbeScope_SampleIxCur];          // Point to current position in
 775              	 .loc 1 524 0
 776 01fa 0368     	 ldr r3,[r0]
 777              	.LBE260:
 778              	.LBE263:
 779              	.LBE294:
 780              	.LBE300:
 405:../probe_scope.c ****                  ProbeScope_SampleChAll();                                          // Get the firs
 781              	 .loc 1 405 0
 782 01fc 3668     	 ldr r6,[r6]
 783 01fe 0E60     	 str r6,[r1]
 784              	.LVL51:
 785              	.LBB301:
 786              	.LBB295:
 787              	.LBB264:
 788              	.LBB261:
 524:../probe_scope.c ****         p_sample = &p_ch->Samples[ProbeScope_SampleIxCur];          // Point to current position in
 789              	 .loc 1 524 0
 790 0200 012B     	 cmp r3,#1
 791 0202 7CD0     	 beq .L227
 792              	.L43:
 793              	.LVL52:
 794              	.LBE261:
 795              	.LBE264:
 796              	.LBB265:
 797              	.LBB266:
 798 0204 2C48     	 ldr r0,.L236+36
 799 0206 0368     	 ldr r3,[r0]
 800 0208 012B     	 cmp r3,#1
 801 020a 7BD0     	 beq .L228
 802              	.L44:
 803              	.LVL53:
 804              	.LBE266:
 805              	.LBE265:
 806              	.LBB268:
 807              	.LBB269:
 808 020c 2B48     	 ldr r0,.L236+40
 809 020e 0368     	 ldr r3,[r0]
 810 0210 012B     	 cmp r3,#1
 811 0212 00F08680 	 beq .L229
 812              	.L45:
 813              	.LVL54:
 814              	.LBE269:
 815              	.LBE268:
 816              	.LBB271:
 817              	.LBB272:
 818 0216 2A48     	 ldr r0,.L236+44
 819 0218 0368     	 ldr r3,[r0]
 820 021a 012B     	 cmp r3,#1
 821 021c 00F08480 	 beq .L230
 822              	.L46:
 823              	.LVL55:
 824              	.LBE272:
 825              	.LBE271:
 826              	.LBB274:
 827              	.LBB275:
 828 0220 2848     	 ldr r0,.L236+48
 829 0222 0368     	 ldr r3,[r0]
 830 0224 012B     	 cmp r3,#1
 831 0226 00F08280 	 beq .L231
 832              	.L47:
 833              	.LVL56:
 834              	.LBE275:
 835              	.LBE274:
 836              	.LBB277:
 837              	.LBB278:
 838 022a 2748     	 ldr r0,.L236+52
 839 022c 0368     	 ldr r3,[r0]
 840 022e 012B     	 cmp r3,#1
 841 0230 00F08080 	 beq .L232
 842              	.L48:
 843              	.LVL57:
 844              	.LBE278:
 845              	.LBE277:
 846              	.LBB280:
 847              	.LBB281:
 848 0234 2548     	 ldr r0,.L236+56
 849 0236 0368     	 ldr r3,[r0]
 850 0238 012B     	 cmp r3,#1
 851 023a 25D0     	 beq .L233
 852              	.L49:
 853              	.LVL58:
 854              	.LBE281:
 855              	.LBE280:
 856              	.LBB283:
 857              	.LBB284:
 858 023c 2448     	 ldr r0,.L236+60
 859 023e 0368     	 ldr r3,[r0]
 860 0240 012B     	 cmp r3,#1
 861 0242 18D0     	 beq .L234
 862              	.L50:
 863              	.LBE284:
 864              	.LBE283:
 865              	.LBE295:
 866              	.LBE301:
 867              	.LBB302:
 868              	.LBB303:
 631:../probe_scope.c ****     if (ProbeScope_SampleIxCur >= PROBE_SCOPE_MAX_SAMPLES) {       // See if we need to wrap around
 869              	 .loc 1 631 0
 870 0244 0123     	 movs r3,#1
 871              	.LBE303:
 872              	.LBE302:
 408:../probe_scope.c ****                  break;
 873              	 .loc 1 408 0
 874 0246 2370     	 strb r3,[r4]
 875              	.LBB305:
 876              	.LBB304:
 631:../probe_scope.c ****     if (ProbeScope_SampleIxCur >= PROBE_SCOPE_MAX_SAMPLES) {       // See if we need to wrap around
 877              	 .loc 1 631 0
 878 0248 2B60     	 str r3,[r5]
 879 024a BDE8F883 	 pop {r3,r4,r5,r6,r7,r8,r9,pc}
 880              	.LVL59:
 881              	.L37:
 882              	.LBE304:
 883              	.LBE305:
 457:../probe_scope.c ****                  break;
 884              	 .loc 1 457 0
 885 024e 0023     	 movs r3,#0
 886 0250 2370     	 strb r3,[r4]
 887              	.L35:
 888 0252 BDE8F883 	 pop {r3,r4,r5,r6,r7,r8,r9,pc}
 889              	.L183:
 444:../probe_scope.c ****                  } else {                                                           
 890              	 .loc 1 444 0
 891 0256 013B     	 subs r3,r3,#1
 892 0258 1360     	 str r3,[r2]
 893 025a BDE8F883 	 pop {r3,r4,r5,r6,r7,r8,r9,pc}
 894              	.LVL60:
 895              	.L60:
 896              	.LBB306:
 897              	.LBB307:
 634:../probe_scope.c ****     }
 635:../probe_scope.c **** }
 636:../probe_scope.c **** 
 637:../probe_scope.c **** /*
 638:../probe_scope.c **** ***************************************************************************************************
 639:../probe_scope.c **** *                                                    ProbeScope_IsTrig()
 640:../probe_scope.c **** *
 641:../probe_scope.c **** * Description: This function is called to detect whether the trigger channel sees the trigger condi
 642:../probe_scope.c **** *              The channel needs to be enabled as well.
 643:../probe_scope.c **** *              To trigger the sampling, we must see the proper slope and the trigger level must be 
 644:../probe_scope.c **** *
 645:../probe_scope.c **** * Arguments  : ch      is the channel number that will be used as the trigger channel.
 646:../probe_scope.c **** * Returns    : Sets ProbeScope_TrigFlag to 1 when a  trigger is detected
 647:../probe_scope.c **** *              Sets ProbeScope_TrigFlag to 0 when no trigger is detected
 648:../probe_scope.c **** ***************************************************************************************************
 649:../probe_scope.c **** */
 650:../probe_scope.c **** 
 651:../probe_scope.c **** static  void  ProbeScope_IsTrig (void)
 652:../probe_scope.c **** {
 653:../probe_scope.c ****     PROBE_SCOPE_CH          *p_ch;
 654:../probe_scope.c ****     PROBE_SCOPE_CH_SAMPLE   *p_sample_prev;
 655:../probe_scope.c ****     PROBE_SCOPE_CH_SAMPLE   *p_sample_cur;
 656:../probe_scope.c ****     
 657:../probe_scope.c **** 
 658:../probe_scope.c ****     switch (ProbeScope_TrigChSel) {
 898              	 .loc 1 658 0
 899 025e 224A     	 ldr r2,.L236+84
 900 0260 1378     	 ldrb r3,[r2]
 901 0262 013B     	 subs r3,r3,#1
 902 0264 072B     	 cmp r3,#7
 903 0266 00F25181 	 bhi .L62
 904 026a DFE803F0 	 tbb [pc,r3]
 905              	.L64:
 906 026e 78       	 .byte (.L135-.L64)/2
 907 026f 83       	 .byte (.L65-.L64)/2
 908 0270 8F       	 .byte (.L66-.L64)/2
 909 0271 8D       	 .byte (.L67-.L64)/2
 910 0272 8B       	 .byte (.L68-.L64)/2
 911 0273 89       	 .byte (.L69-.L64)/2
 912 0274 87       	 .byte (.L70-.L64)/2
 913 0275 85       	 .byte (.L71-.L64)/2
 914              	.LVL61:
 915              	 .p2align 1
 916              	.L234:
 917              	.LBE307:
 918              	.LBE306:
 919              	.LBB311:
 920              	.LBB296:
 921              	.LBB286:
 922              	.LBB285:
 923 0276 FFF7FEFF 	 bl ProbeScope_SampleCh.part.0
 924              	.LVL62:
 925 027a E3E7     	 b .L50
 926              	.LVL63:
 927              	.L226:
 928              	.LBE285:
 929              	.LBE286:
 930              	.LBE296:
 931              	.LBE311:
 932              	.LBB312:
 933              	.LBB248:
 934              	.LBB240:
 935              	.LBB239:
 936 027c FFF7FEFF 	 bl ProbeScope_SampleCh.part.0
 937              	.LVL64:
 938 0280 86E7     	 b .L59
 939              	.LVL65:
 940              	.L217:
 941              	.LBE239:
 942              	.LBE240:
 943              	.LBE248:
 944              	.LBE312:
 945              	.LBB313:
 946              	.LBB207:
 947              	.LBB199:
 948              	.LBB198:
 949 0282 FFF7FEFF 	 bl ProbeScope_SampleCh.part.0
 950              	.LVL66:
 951 0286 3DE7     	 b .L118
 952              	.LVL67:
 953              	.L233:
 954              	.LBE198:
 955              	.LBE199:
 956              	.LBE207:
 957              	.LBE313:
 958              	.LBB314:
 959              	.LBB297:
 960              	.LBB287:
 961              	.LBB282:
 962 0288 FFF7FEFF 	 bl ProbeScope_SampleCh.part.0
 963              	.LVL68:
 964 028c D6E7     	 b .L49
 965              	.LVL69:
 966              	.L210:
 967              	.LBE282:
 968              	.LBE287:
 969              	.LBE297:
 970              	.LBE314:
 971              	.LBB315:
 972              	.LBB208:
 973              	.LBB200:
 974              	.LBB177:
 975 028e FFF7FEFF 	 bl ProbeScope_SampleCh.part.0
 976              	.LVL70:
 977 0292 14E7     	 b .L111
 978              	.L237:
 979              	 .align 2
 980              	.L236:
 981 0294 00000000 	 .word .LANCHOR9
 982 0298 00000000 	 .word .LANCHOR11
 983 029c 00000000 	 .word .LANCHOR10
 984 02a0 00000000 	 .word .LANCHOR13
 985 02a4 00000000 	 .word ProbeScope_DataRdyFlag
 986 02a8 00000000 	 .word ProbeScope_TrigFlag
 987 02ac 00000000 	 .word .LANCHOR1
 988 02b0 00000000 	 .word ProbeScope_TrigDispPos
 989 02b4 00000000 	 .word .LANCHOR15
 990 02b8 00000000 	 .word .LANCHOR2
 991 02bc 00000000 	 .word .LANCHOR3
 992 02c0 00000000 	 .word .LANCHOR4
 993 02c4 00000000 	 .word .LANCHOR5
 994 02c8 00000000 	 .word .LANCHOR6
 995 02cc 00000000 	 .word .LANCHOR7
 996 02d0 00000000 	 .word .LANCHOR8
 997 02d4 00000000 	 .word .LANCHOR0
 998 02d8 00000000 	 .word .LANCHOR12
 999 02dc 00000000 	 .word .LANCHOR14
 1000 02e0 00000000 	 .word .LANCHOR18
 1001 02e4 00000000 	 .word ProbeScope_TrigHoldOff
 1002 02e8 00000000 	 .word .LANCHOR16
 1003              	.LVL71:
 1004              	.L219:
 1005              	.LBE177:
 1006              	.LBE200:
 1007              	.LBE208:
 1008              	.LBE315:
 1009              	.LBB316:
 1010              	.LBB249:
 1011              	.LBB241:
 1012              	.LBB218:
 1013 02ec FFF7FEFF 	 bl ProbeScope_SampleCh.part.0
 1014              	.LVL72:
 1015 02f0 2CE7     	 b .L52
 1016              	.LVL73:
 1017              	.L215:
 1018              	.LBE218:
 1019              	.LBE241:
 1020              	.LBE249:
 1021              	.LBE316:
 1022              	.LBB317:
 1023              	.LBB209:
 1024              	.LBB201:
 1025              	.LBB192:
 1026 02f2 FFF7FEFF 	 bl ProbeScope_SampleCh.part.0
 1027              	.LVL74:
 1028 02f6 FBE6     	 b .L116
 1029              	.LVL75:
 1030              	.L216:
 1031              	.LBE192:
 1032              	.LBE201:
 1033              	.LBB202:
 1034              	.LBB195:
 1035 02f8 FFF7FEFF 	 bl ProbeScope_SampleCh.part.0
 1036              	.LVL76:
 1037 02fc FDE6     	 b .L117
 1038              	.LVL77:
 1039              	.L227:
 1040              	.LBE195:
 1041              	.LBE202:
 1042              	.LBE209:
 1043              	.LBE317:
 1044              	.LBB318:
 1045              	.LBB298:
 1046              	.LBB288:
 1047              	.LBB262:
 1048 02fe FFF7FEFF 	 bl ProbeScope_SampleCh.part.0
 1049              	.LVL78:
 1050 0302 7FE7     	 b .L43
 1051              	.LVL79:
 1052              	.L228:
 1053              	.LBE262:
 1054              	.LBE288:
 1055              	.LBB289:
 1056              	.LBB267:
 1057 0304 FFF7FEFF 	 bl ProbeScope_SampleCh.part.0
 1058              	.LVL80:
 1059 0308 80E7     	 b .L44
 1060              	.LVL81:
 1061              	.L223:
 1062              	.LBE267:
 1063              	.LBE289:
 1064              	.LBE298:
 1065              	.LBE318:
 1066              	.LBB319:
 1067              	.LBB250:
 1068              	.LBB242:
 1069              	.LBB230:
 1070 030a FFF7FEFF 	 bl ProbeScope_SampleCh.part.0
 1071              	.LVL82:
 1072 030e 31E7     	 b .L56
 1073              	.LVL83:
 1074              	.L224:
 1075              	.LBE230:
 1076              	.LBE242:
 1077              	.LBB243:
 1078              	.LBB233:
 1079 0310 FFF7FEFF 	 bl ProbeScope_SampleCh.part.0
 1080              	.LVL84:
 1081 0314 33E7     	 b .L57
 1082              	.LVL85:
 1083              	.L225:
 1084              	.LBE233:
 1085              	.LBE243:
 1086              	.LBB244:
 1087              	.LBB236:
 1088 0316 FFF7FEFF 	 bl ProbeScope_SampleCh.part.0
 1089              	.LVL86:
 1090 031a 35E7     	 b .L58
 1091              	.LVL87:
 1092              	.L220:
 1093              	.LBE236:
 1094              	.LBE244:
 1095              	.LBB245:
 1096              	.LBB221:
 1097 031c FFF7FEFF 	 bl ProbeScope_SampleCh.part.0
 1098              	.LVL88:
 1099 0320 19E7     	 b .L53
 1100              	.LVL89:
 1101              	.L229:
 1102              	.LBE221:
 1103              	.LBE245:
 1104              	.LBE250:
 1105              	.LBE319:
 1106              	.LBB320:
 1107              	.LBB299:
 1108              	.LBB290:
 1109              	.LBB270:
 1110 0322 FFF7FEFF 	 bl ProbeScope_SampleCh.part.0
 1111              	.LVL90:
 1112 0326 76E7     	 b .L45
 1113              	.LVL91:
 1114              	.L230:
 1115              	.LBE270:
 1116              	.LBE290:
 1117              	.LBB291:
 1118              	.LBB273:
 1119 0328 FFF7FEFF 	 bl ProbeScope_SampleCh.part.0
 1120              	.LVL92:
 1121 032c 78E7     	 b .L46
 1122              	.LVL93:
 1123              	.L231:
 1124              	.LBE273:
 1125              	.LBE291:
 1126              	.LBB292:
 1127              	.LBB276:
 1128 032e FFF7FEFF 	 bl ProbeScope_SampleCh.part.0
 1129              	.LVL94:
 1130 0332 7AE7     	 b .L47
 1131              	.LVL95:
 1132              	.L232:
 1133              	.LBE276:
 1134              	.LBE292:
 1135              	.LBB293:
 1136              	.LBB279:
 1137 0334 FFF7FEFF 	 bl ProbeScope_SampleCh.part.0
 1138              	.LVL96:
 1139 0338 7CE7     	 b .L48
 1140              	.LVL97:
 1141              	.L211:
 1142              	.LBE279:
 1143              	.LBE293:
 1144              	.LBE299:
 1145              	.LBE320:
 1146              	.LBB321:
 1147              	.LBB210:
 1148              	.LBB203:
 1149              	.LBB180:
 1150 033a FFF7FEFF 	 bl ProbeScope_SampleCh.part.0
 1151              	.LVL98:
 1152 033e C3E6     	 b .L112
 1153              	.LVL99:
 1154              	.L212:
 1155              	.LBE180:
 1156              	.LBE203:
 1157              	.LBB204:
 1158              	.LBB183:
 1159 0340 FFF7FEFF 	 bl ProbeScope_SampleCh.part.0
 1160              	.LVL100:
 1161 0344 C5E6     	 b .L113
 1162              	.LVL101:
 1163              	.L221:
 1164              	.LBE183:
 1165              	.LBE204:
 1166              	.LBE210:
 1167              	.LBE321:
 1168              	.LBB322:
 1169              	.LBB251:
 1170              	.LBB246:
 1171              	.LBB224:
 1172 0346 FFF7FEFF 	 bl ProbeScope_SampleCh.part.0
 1173              	.LVL102:
 1174 034a 09E7     	 b .L54
 1175              	.LVL103:
 1176              	.L222:
 1177              	.LBE224:
 1178              	.LBE246:
 1179              	.LBB247:
 1180              	.LBB227:
 1181 034c FFF7FEFF 	 bl ProbeScope_SampleCh.part.0
 1182              	.LVL104:
 1183 0350 0BE7     	 b .L55
 1184              	.LVL105:
 1185              	.L213:
 1186              	.LBE227:
 1187              	.LBE247:
 1188              	.LBE251:
 1189              	.LBE322:
 1190              	.LBB323:
 1191              	.LBB211:
 1192              	.LBB205:
 1193              	.LBB186:
 1194 0352 FFF7FEFF 	 bl ProbeScope_SampleCh.part.0
 1195              	.LVL106:
 1196 0356 C1E6     	 b .L114
 1197              	.LVL107:
 1198              	.L214:
 1199              	.LBE186:
 1200              	.LBE205:
 1201              	.LBB206:
 1202              	.LBB189:
 1203 0358 FFF7FEFF 	 bl ProbeScope_SampleCh.part.0
 1204              	.LVL108:
 1205 035c C3E6     	 b .L115
 1206              	.LVL109:
 1207              	.L135:
 1208              	.LBE189:
 1209              	.LBE206:
 1210              	.LBE211:
 1211              	.LBE323:
 1212              	.LBB324:
 1213              	.LBB308:
 659:../probe_scope.c ****         case PROBE_SCOPE_CH1:
 660:../probe_scope.c ****              p_ch = &ProbeScope_Ch1;
 1214              	 .loc 1 660 0
 1215 035e B84B     	 ldr r3,.L238
 1216              	.L63:
 1217              	.LVL110:
 661:../probe_scope.c ****              break;
 662:../probe_scope.c ****              
 663:../probe_scope.c **** #if PROBE_SCOPE_MAX_CH >= 2
 664:../probe_scope.c ****         case PROBE_SCOPE_CH2:
 665:../probe_scope.c ****              p_ch = &ProbeScope_Ch2;
 666:../probe_scope.c ****              break;
 667:../probe_scope.c **** #endif
 668:../probe_scope.c ****              
 669:../probe_scope.c **** #if PROBE_SCOPE_MAX_CH >= 3
 670:../probe_scope.c ****         case PROBE_SCOPE_CH3:
 671:../probe_scope.c ****              p_ch = &ProbeScope_Ch3;
 672:../probe_scope.c ****              break;
 673:../probe_scope.c **** #endif             
 674:../probe_scope.c ****              
 675:../probe_scope.c **** #if PROBE_SCOPE_MAX_CH >= 4
 676:../probe_scope.c ****         case PROBE_SCOPE_CH4:
 677:../probe_scope.c ****              p_ch = &ProbeScope_Ch4;
 678:../probe_scope.c ****              break;
 679:../probe_scope.c **** #endif
 680:../probe_scope.c ****              
 681:../probe_scope.c **** #if PROBE_SCOPE_MAX_CH >= 5
 682:../probe_scope.c ****         case PROBE_SCOPE_CH5:
 683:../probe_scope.c ****              p_ch = &ProbeScope_Ch5;
 684:../probe_scope.c ****              break;
 685:../probe_scope.c **** #endif
 686:../probe_scope.c ****              
 687:../probe_scope.c **** #if PROBE_SCOPE_MAX_CH >= 6
 688:../probe_scope.c ****         case PROBE_SCOPE_CH6:
 689:../probe_scope.c ****              p_ch = &ProbeScope_Ch6;
 690:../probe_scope.c ****              break;
 691:../probe_scope.c **** #endif             
 692:../probe_scope.c ****              
 693:../probe_scope.c **** #if PROBE_SCOPE_MAX_CH >= 7
 694:../probe_scope.c ****         case PROBE_SCOPE_CH7:
 695:../probe_scope.c ****              p_ch = &ProbeScope_Ch7;
 696:../probe_scope.c ****              break;
 697:../probe_scope.c **** #endif
 698:../probe_scope.c ****              
 699:../probe_scope.c **** #if PROBE_SCOPE_MAX_CH >= 8
 700:../probe_scope.c ****         case PROBE_SCOPE_CH8:
 701:../probe_scope.c ****              p_ch = &ProbeScope_Ch8;
 702:../probe_scope.c ****              break;
 703:../probe_scope.c **** #endif
 704:../probe_scope.c ****              
 705:../probe_scope.c ****         default:
 706:../probe_scope.c ****              p_ch                 = &ProbeScope_Ch1;
 707:../probe_scope.c ****              ProbeScope_TrigChSel = PROBE_SCOPE_CH1;
 708:../probe_scope.c ****              break;
 709:../probe_scope.c ****     }         
 710:../probe_scope.c ****     ProbeScope_TrigFlag = 0;
 711:../probe_scope.c ****     if (p_ch->En == 1) {
 1218              	 .loc 1 711 0
 1219 0360 1A68     	 ldr r2,[r3]
 710:../probe_scope.c ****     if (p_ch->En == 1) {
 1220              	 .loc 1 710 0
 1221 0362 B848     	 ldr r0,.L238+4
 1222 0364 0021     	 movs r1,#0
 1223              	 .loc 1 711 0
 1224 0366 012A     	 cmp r2,#1
 710:../probe_scope.c ****     if (p_ch->En == 1) {
 1225              	 .loc 1 710 0
 1226 0368 0160     	 str r1,[r0]
 1227              	 .loc 1 711 0
 1228 036a 13D0     	 beq .L72
 1229 036c B64D     	 ldr r5,.L238+8
 1230 036e B74E     	 ldr r6,.L238+12
 1231 0370 2A68     	 ldr r2,[r5]
 1232 0372 17E7     	 b .L61
 1233              	.LVL111:
 1234              	.L65:
 665:../probe_scope.c ****              break;
 1235              	 .loc 1 665 0
 1236 0374 B64B     	 ldr r3,.L238+16
 1237 0376 F3E7     	 b .L63
 1238              	.L71:
 1239              	.LVL112:
 701:../probe_scope.c ****              break;
 1240              	 .loc 1 701 0
 1241 0378 B64B     	 ldr r3,.L238+20
 1242 037a F1E7     	 b .L63
 1243              	.LVL113:
 1244              	.L70:
 695:../probe_scope.c ****              break;
 1245              	 .loc 1 695 0
 1246 037c B64B     	 ldr r3,.L238+24
 1247 037e EFE7     	 b .L63
 1248              	.LVL114:
 1249              	.L69:
 689:../probe_scope.c ****              break;
 1250              	 .loc 1 689 0
 1251 0380 B64B     	 ldr r3,.L238+28
 1252 0382 EDE7     	 b .L63
 1253              	.LVL115:
 1254              	.L68:
 683:../probe_scope.c ****              break;
 1255              	 .loc 1 683 0
 1256 0384 B64B     	 ldr r3,.L238+32
 1257 0386 EBE7     	 b .L63
 1258              	.LVL116:
 1259              	.L67:
 677:../probe_scope.c ****              break;
 1260              	 .loc 1 677 0
 1261 0388 B64B     	 ldr r3,.L238+36
 1262 038a E9E7     	 b .L63
 1263              	.LVL117:
 1264              	.L66:
 671:../probe_scope.c ****              break;
 1265              	 .loc 1 671 0
 1266 038c B64B     	 ldr r3,.L238+40
 1267 038e E7E7     	 b .L63
 1268              	.LVL118:
 1269              	.L218:
 1270              	.LBE308:
 1271              	.LBE324:
 432:../probe_scope.c ****                          ProbeScope_State          = PROBE_SCOPE_STATE_START;
 1272              	 .loc 1 432 0
 1273 0390 1370     	 strb r3,[r2]
 1274 0392 D0E6     	 b .L123
 1275              	.LVL119:
 1276              	.L72:
 1277              	.LBB325:
 1278              	.LBB309:
 712:../probe_scope.c ****         p_sample_prev = &p_ch->Samples[ProbeScope_SampleIxPrev];          // Point to previous posi
 713:../probe_scope.c ****         p_sample_cur  = &p_ch->Samples[ProbeScope_SampleIxCur];           // Point to current  posi
 714:../probe_scope.c ****         if (ProbeScope_TrigSlope == PROBE_SCOPE_TRIG_POS) {
 1279              	 .loc 1 714 0
 1280 0394 B54A     	 ldr r2,.L238+44
 712:../probe_scope.c ****         p_sample_prev = &p_ch->Samples[ProbeScope_SampleIxPrev];          // Point to previous posi
 1281              	 .loc 1 712 0
 1282 0396 AD4E     	 ldr r6,.L238+12
 1283              	 .loc 1 714 0
 1284 0398 1768     	 ldr r7,[r2]
 713:../probe_scope.c ****         if (ProbeScope_TrigSlope == PROBE_SCOPE_TRIG_POS) {
 1285              	 .loc 1 713 0
 1286 039a AB4D     	 ldr r5,.L238+8
 712:../probe_scope.c ****         p_sample_prev = &p_ch->Samples[ProbeScope_SampleIxPrev];          // Point to previous posi
 1287              	 .loc 1 712 0
 1288 039c 3168     	 ldr r1,[r6]
 1289              	.LVL120:
 713:../probe_scope.c ****         if (ProbeScope_TrigSlope == PROBE_SCOPE_TRIG_POS) {
 1290              	 .loc 1 713 0
 1291 039e 2A68     	 ldr r2,[r5]
 1292              	.LVL121:
 1293              	 .loc 1 714 0
 1294 03a0 012F     	 cmp r7,#1
 715:../probe_scope.c ****             switch (p_ch->DataType) {
 1295              	 .loc 1 715 0
 1296 03a2 1F79     	 ldrb r7,[r3,#4]
 714:../probe_scope.c ****             switch (p_ch->DataType) {
 1297              	 .loc 1 714 0
 1298 03a4 00F0B680 	 beq .L235
 716:../probe_scope.c ****                 case PROBE_SCOPE_INT08U:
 717:../probe_scope.c ****                      if (p_ch->BitEn == 0) {
 718:../probe_scope.c ****                          if (p_sample_prev->Val08U < p_sample_cur->Val08U) {
 719:../probe_scope.c ****                              if (p_sample_prev->Val08U <= p_ch->TrigLevel.Val08U) {
 720:../probe_scope.c ****                                  if (p_sample_cur->Val08U >= p_ch->TrigLevel.Val08U) {
 721:../probe_scope.c ****                                      ProbeScope_TrigFlag = 1;
 722:../probe_scope.c ****                                      ProbeScope_TrigIx   = ProbeScope_SampleIxCur; 
 723:../probe_scope.c ****                                  }
 724:../probe_scope.c ****                              }
 725:../probe_scope.c ****                          }
 726:../probe_scope.c ****                      } else {
 727:../probe_scope.c ****                          if (p_sample_prev->Val08U == 0) {
 728:../probe_scope.c ****                              if (p_sample_cur->Val08U != 0) { 
 729:../probe_scope.c ****                                  ProbeScope_TrigFlag = 1;
 730:../probe_scope.c ****                                  ProbeScope_TrigIx   = ProbeScope_SampleIxCur; 
 731:../probe_scope.c ****                              }
 732:../probe_scope.c ****                          }
 733:../probe_scope.c ****                      }
 734:../probe_scope.c ****                      break;
 735:../probe_scope.c ****                      
 736:../probe_scope.c ****                 case PROBE_SCOPE_INT08S:
 737:../probe_scope.c ****                      if (p_ch->BitEn == 0) {
 738:../probe_scope.c ****                          if (p_sample_prev->Val08S < p_sample_cur->Val08S) {
 739:../probe_scope.c ****                              if (p_sample_prev->Val08S <= p_ch->TrigLevel.Val08S) {
 740:../probe_scope.c ****                                  if (p_sample_cur->Val08S >= p_ch->TrigLevel.Val08S) {
 741:../probe_scope.c ****                                      ProbeScope_TrigFlag = 1;
 742:../probe_scope.c ****                                      ProbeScope_TrigIx   = ProbeScope_SampleIxCur; 
 743:../probe_scope.c ****                                  }
 744:../probe_scope.c ****                              }
 745:../probe_scope.c ****                          }
 746:../probe_scope.c ****                      } else {
 747:../probe_scope.c ****                          if (p_sample_prev->Val08S == 0) {
 748:../probe_scope.c ****                              if (p_sample_cur->Val08S != 0) { 
 749:../probe_scope.c ****                                  ProbeScope_TrigFlag = 1;
 750:../probe_scope.c ****                                  ProbeScope_TrigIx   = ProbeScope_SampleIxCur; 
 751:../probe_scope.c ****                              }
 752:../probe_scope.c ****                          }
 753:../probe_scope.c ****                      }
 754:../probe_scope.c ****                      break;
 755:../probe_scope.c **** 
 756:../probe_scope.c **** #if PROBE_SCOPE_16_BIT_EN > 0                                    
 757:../probe_scope.c ****                 case PROBE_SCOPE_INT16U:
 758:../probe_scope.c ****                      if (p_ch->BitEn == 0) {
 759:../probe_scope.c ****                          if (p_sample_prev->Val16U < p_sample_cur->Val16U) {
 760:../probe_scope.c ****                              if (p_sample_prev->Val16U <= p_ch->TrigLevel.Val16U) {
 761:../probe_scope.c ****                                  if (p_sample_cur->Val16U >= p_ch->TrigLevel.Val16U) {
 762:../probe_scope.c ****                                      ProbeScope_TrigFlag = 1;
 763:../probe_scope.c ****                                      ProbeScope_TrigIx   = ProbeScope_SampleIxCur; 
 764:../probe_scope.c ****                                  }
 765:../probe_scope.c ****                              }
 766:../probe_scope.c ****                          }
 767:../probe_scope.c ****                      } else {
 768:../probe_scope.c ****                          if (p_sample_prev->Val16U == 0) {
 769:../probe_scope.c ****                              if (p_sample_cur->Val16U != 0) { 
 770:../probe_scope.c ****                                  ProbeScope_TrigFlag = 1;
 771:../probe_scope.c ****                                  ProbeScope_TrigIx   = ProbeScope_SampleIxCur; 
 772:../probe_scope.c ****                              }
 773:../probe_scope.c ****                          }
 774:../probe_scope.c ****                      }
 775:../probe_scope.c ****                      break;
 776:../probe_scope.c ****                      
 777:../probe_scope.c ****                 case PROBE_SCOPE_INT16S:
 778:../probe_scope.c ****                      if (p_ch->BitEn == 0) {
 779:../probe_scope.c ****                          if (p_sample_prev->Val16S < p_sample_cur->Val16S) {
 780:../probe_scope.c ****                              if (p_sample_prev->Val16S <= p_ch->TrigLevel.Val16S) {
 781:../probe_scope.c ****                                  if (p_sample_cur->Val16S >= p_ch->TrigLevel.Val16S) {
 782:../probe_scope.c ****                                      ProbeScope_TrigFlag = 1;
 783:../probe_scope.c ****                                      ProbeScope_TrigIx   = ProbeScope_SampleIxCur; 
 784:../probe_scope.c ****                                  }
 785:../probe_scope.c ****                              }
 786:../probe_scope.c ****                          }
 787:../probe_scope.c ****                      } else {
 788:../probe_scope.c ****                          if (p_sample_prev->Val16S == 0) {
 789:../probe_scope.c ****                              if (p_sample_cur->Val16S != 0) { 
 790:../probe_scope.c ****                                  ProbeScope_TrigFlag = 1;
 791:../probe_scope.c ****                                  ProbeScope_TrigIx   = ProbeScope_SampleIxCur; 
 792:../probe_scope.c ****                              }
 793:../probe_scope.c ****                          }
 794:../probe_scope.c ****                      }
 795:../probe_scope.c ****                      break;
 796:../probe_scope.c **** #endif
 797:../probe_scope.c **** 
 798:../probe_scope.c **** #if PROBE_SCOPE_32_BIT_EN > 0                                   
 799:../probe_scope.c ****                 case PROBE_SCOPE_INT32U:
 800:../probe_scope.c ****                      if (p_ch->BitEn == 0) {
 801:../probe_scope.c ****                          if (p_sample_prev->Val32U < p_sample_cur->Val32U) {
 802:../probe_scope.c ****                              if (p_sample_prev->Val32U <= p_ch->TrigLevel.Val32U) {
 803:../probe_scope.c ****                                  if (p_sample_cur->Val32U >= p_ch->TrigLevel.Val32U) {
 804:../probe_scope.c ****                                      ProbeScope_TrigFlag = 1;
 805:../probe_scope.c ****                                      ProbeScope_TrigIx   = ProbeScope_SampleIxCur; 
 806:../probe_scope.c ****                                  }
 807:../probe_scope.c ****                              }
 808:../probe_scope.c ****                          }
 809:../probe_scope.c ****                      } else {
 810:../probe_scope.c ****                          if (p_sample_prev->Val32U == 0) {
 811:../probe_scope.c ****                              if (p_sample_cur->Val32U != 0) {
 812:../probe_scope.c ****                                  ProbeScope_TrigFlag = 1;
 813:../probe_scope.c ****                                  ProbeScope_TrigIx   = ProbeScope_SampleIxCur; 
 814:../probe_scope.c ****                              }
 815:../probe_scope.c ****                          }
 816:../probe_scope.c ****                      }
 817:../probe_scope.c ****                      break;
 818:../probe_scope.c ****                      
 819:../probe_scope.c ****                 case PROBE_SCOPE_INT32S:
 820:../probe_scope.c ****                      if (p_ch->BitEn == 0) {
 821:../probe_scope.c ****                          if (p_sample_prev->Val32S < p_sample_cur->Val32S) {
 822:../probe_scope.c ****                              if (p_sample_prev->Val32S <= p_ch->TrigLevel.Val32S) {
 823:../probe_scope.c ****                                  if (p_sample_cur->Val32S >= p_ch->TrigLevel.Val32S) {
 824:../probe_scope.c ****                                      ProbeScope_TrigFlag = 1;
 825:../probe_scope.c ****                                      ProbeScope_TrigIx   = ProbeScope_SampleIxCur; 
 826:../probe_scope.c ****                                  }
 827:../probe_scope.c ****                              }
 828:../probe_scope.c ****                          }
 829:../probe_scope.c ****                      } else {
 830:../probe_scope.c ****                          if (p_sample_prev->Val32S == 0) {
 831:../probe_scope.c ****                              if (p_sample_cur->Val32S != 0) {
 832:../probe_scope.c ****                                  ProbeScope_TrigFlag = 1;
 833:../probe_scope.c ****                                  ProbeScope_TrigIx   = ProbeScope_SampleIxCur; 
 834:../probe_scope.c ****                              }
 835:../probe_scope.c ****                          }
 836:../probe_scope.c ****                      }
 837:../probe_scope.c ****                      break;
 838:../probe_scope.c ****                                     
 839:../probe_scope.c ****                 case PROBE_SCOPE_FP32:
 840:../probe_scope.c ****                      if (p_sample_prev->ValFP32 < p_sample_cur->ValFP32) {
 841:../probe_scope.c ****                          if (p_sample_prev->ValFP32 <= p_ch->TrigLevel.ValFP32) {
 842:../probe_scope.c ****                              if (p_sample_cur->ValFP32 >= p_ch->TrigLevel.ValFP32) {
 843:../probe_scope.c ****                                  ProbeScope_TrigFlag = 1;
 844:../probe_scope.c ****                                  ProbeScope_TrigIx   = ProbeScope_SampleIxCur; 
 845:../probe_scope.c ****                              }
 846:../probe_scope.c ****                          }
 847:../probe_scope.c ****                      }
 848:../probe_scope.c ****                      break;
 849:../probe_scope.c **** #endif
 850:../probe_scope.c ****             }
 851:../probe_scope.c ****         } else {
 852:../probe_scope.c ****             switch (p_ch->DataType) {
 1299              	 .loc 1 852 0
 1300 03a8 062F     	 cmp r7,#6
 1301 03aa 3FF6FBAE 	 bhi .L61
 1302 03ae DFE807F0 	 tbb [pc,r7]
 1303              	.L92:
 1304 03b2 84       	 .byte (.L91-.L92)/2
 1305 03b3 72       	 .byte (.L93-.L92)/2
 1306 03b4 61       	 .byte (.L94-.L92)/2
 1307 03b5 4F       	 .byte (.L95-.L92)/2
 1308 03b6 3A       	 .byte (.L96-.L92)/2
 1309 03b7 25       	 .byte (.L97-.L92)/2
 1310 03b8 04       	 .byte (.L98-.L92)/2
 1311 03b9 00       	 .p2align 1
 1312              	.L98:
 853:../probe_scope.c ****                 case PROBE_SCOPE_INT08U:
 854:../probe_scope.c ****                      if (p_ch->BitEn == 0) {
 855:../probe_scope.c ****                          if (p_sample_prev->Val08U > p_sample_cur->Val08U) {
 856:../probe_scope.c ****                              if (p_sample_prev->Val08U >= p_ch->TrigLevel.Val08U) {
 857:../probe_scope.c ****                                  if (p_sample_cur->Val08U <= p_ch->TrigLevel.Val08U) {
 858:../probe_scope.c ****                                      ProbeScope_TrigFlag = 1;
 859:../probe_scope.c ****                                      ProbeScope_TrigIx   = ProbeScope_SampleIxCur; 
 860:../probe_scope.c ****                                  }
 861:../probe_scope.c ****                              }
 862:../probe_scope.c ****                          }
 863:../probe_scope.c ****                      } else {
 864:../probe_scope.c ****                          if (p_sample_prev->Val08U != 0) {
 865:../probe_scope.c ****                              if (p_sample_cur->Val08U == 0) {
 866:../probe_scope.c ****                                  ProbeScope_TrigFlag = 1;
 867:../probe_scope.c ****                                  ProbeScope_TrigIx   = ProbeScope_SampleIxCur; 
 868:../probe_scope.c ****                              }
 869:../probe_scope.c ****                          }
 870:../probe_scope.c ****                      }
 871:../probe_scope.c ****                      break;
 872:../probe_scope.c ****                      
 873:../probe_scope.c ****                 case PROBE_SCOPE_INT08S:
 874:../probe_scope.c ****                      if (p_ch->BitEn == 0) {
 875:../probe_scope.c ****                          if (p_sample_prev->Val08S > p_sample_cur->Val08S) {
 876:../probe_scope.c ****                              if (p_sample_prev->Val08S >= p_ch->TrigLevel.Val08S) {
 877:../probe_scope.c ****                                  if (p_sample_cur->Val08S <= p_ch->TrigLevel.Val08S) {
 878:../probe_scope.c ****                                      ProbeScope_TrigFlag = 1;
 879:../probe_scope.c ****                                      ProbeScope_TrigIx   = ProbeScope_SampleIxCur; 
 880:../probe_scope.c ****                                  }
 881:../probe_scope.c ****                              }
 882:../probe_scope.c ****                          }
 883:../probe_scope.c ****                      } else {
 884:../probe_scope.c ****                          if (p_sample_prev->Val08S != 0) {
 885:../probe_scope.c ****                              if (p_sample_cur->Val08S == 0) {
 886:../probe_scope.c ****                                  ProbeScope_TrigFlag = 1;
 887:../probe_scope.c ****                                  ProbeScope_TrigIx   = ProbeScope_SampleIxCur; 
 888:../probe_scope.c ****                              }
 889:../probe_scope.c ****                          }
 890:../probe_scope.c ****                      }
 891:../probe_scope.c ****                      break;
 892:../probe_scope.c ****                                     
 893:../probe_scope.c **** #if PROBE_SCOPE_16_BIT_EN > 0                                   
 894:../probe_scope.c ****                 case PROBE_SCOPE_INT16U:
 895:../probe_scope.c ****                      if (p_ch->BitEn == 0) {
 896:../probe_scope.c ****                          if (p_sample_prev->Val16U > p_sample_cur->Val16U) {
 897:../probe_scope.c ****                              if (p_sample_prev->Val16U >= p_ch->TrigLevel.Val16U) {
 898:../probe_scope.c ****                                  if (p_sample_cur->Val16U <= p_ch->TrigLevel.Val16U) {
 899:../probe_scope.c ****                                      ProbeScope_TrigFlag = 1;
 900:../probe_scope.c ****                                      ProbeScope_TrigIx   = ProbeScope_SampleIxCur; 
 901:../probe_scope.c ****                                  }
 902:../probe_scope.c ****                              }
 903:../probe_scope.c ****                          }
 904:../probe_scope.c ****                      } else {
 905:../probe_scope.c ****                          if (p_sample_prev->Val16U != 0) {
 906:../probe_scope.c ****                              if (p_sample_cur->Val16U == 0) {
 907:../probe_scope.c ****                                  ProbeScope_TrigFlag = 1;
 908:../probe_scope.c ****                                  ProbeScope_TrigIx   = ProbeScope_SampleIxCur; 
 909:../probe_scope.c ****                              }
 910:../probe_scope.c ****                          }
 911:../probe_scope.c ****                      }
 912:../probe_scope.c ****                      break;
 913:../probe_scope.c ****                      
 914:../probe_scope.c ****                 case PROBE_SCOPE_INT16S:
 915:../probe_scope.c ****                      if (p_ch->BitEn == 0) {
 916:../probe_scope.c ****                          if (p_sample_prev->Val16S > p_sample_cur->Val16S) {
 917:../probe_scope.c ****                              if (p_sample_prev->Val16S >= p_ch->TrigLevel.Val16S) {
 918:../probe_scope.c ****                                  if (p_sample_cur->Val16S <= p_ch->TrigLevel.Val16S) {
 919:../probe_scope.c ****                                      ProbeScope_TrigFlag = 1;
 920:../probe_scope.c ****                                      ProbeScope_TrigIx   = ProbeScope_SampleIxCur; 
 921:../probe_scope.c ****                                  }
 922:../probe_scope.c ****                              }
 923:../probe_scope.c ****                          }
 924:../probe_scope.c ****                      } else {
 925:../probe_scope.c ****                          if (p_sample_prev->Val16S != 0) {
 926:../probe_scope.c ****                              if (p_sample_cur->Val16S == 0) {
 927:../probe_scope.c ****                                  ProbeScope_TrigFlag = 1;
 928:../probe_scope.c ****                                  ProbeScope_TrigIx   = ProbeScope_SampleIxCur; 
 929:../probe_scope.c ****                              }
 930:../probe_scope.c ****                          }
 931:../probe_scope.c ****                      }
 932:../probe_scope.c ****                      break;
 933:../probe_scope.c **** #endif
 934:../probe_scope.c **** 
 935:../probe_scope.c **** #if PROBE_SCOPE_32_BIT_EN > 0                                                                     
 936:../probe_scope.c ****                 case PROBE_SCOPE_INT32U:
 937:../probe_scope.c ****                      if (p_ch->BitEn == 0) {
 938:../probe_scope.c ****                          if (p_sample_prev->Val32U > p_sample_cur->Val32U) {                  
 939:../probe_scope.c ****                              if (p_sample_prev->Val32U >= p_ch->TrigLevel.Val32U) {
 940:../probe_scope.c ****                                  if (p_sample_cur->Val32U <= p_ch->TrigLevel.Val32U) {
 941:../probe_scope.c ****                                      ProbeScope_TrigFlag = 1;
 942:../probe_scope.c ****                                      ProbeScope_TrigIx   = ProbeScope_SampleIxCur; 
 943:../probe_scope.c ****                                  }
 944:../probe_scope.c ****                              }
 945:../probe_scope.c ****                          }
 946:../probe_scope.c ****                      } else {
 947:../probe_scope.c ****                          if (p_sample_prev->Val32U != 0) {
 948:../probe_scope.c ****                              if (p_sample_cur->Val32U == 0) {
 949:../probe_scope.c ****                                  ProbeScope_TrigFlag = 1;
 950:../probe_scope.c ****                                  ProbeScope_TrigIx   = ProbeScope_SampleIxCur; 
 951:../probe_scope.c ****                              }
 952:../probe_scope.c ****                          }
 953:../probe_scope.c ****                      }
 954:../probe_scope.c ****                      break;
 955:../probe_scope.c ****                      
 956:../probe_scope.c ****                 case PROBE_SCOPE_INT32S:
 957:../probe_scope.c ****                      if (p_ch->BitEn == 0) {
 958:../probe_scope.c ****                          if (p_sample_prev->Val32S > p_sample_cur->Val32S) {
 959:../probe_scope.c ****                              if (p_sample_prev->Val32S >= p_ch->TrigLevel.Val32S) {
 960:../probe_scope.c ****                                  if (p_sample_cur->Val32S <= p_ch->TrigLevel.Val32S) {
 961:../probe_scope.c ****                                      ProbeScope_TrigFlag = 1;
 962:../probe_scope.c ****                                      ProbeScope_TrigIx   = ProbeScope_SampleIxCur; 
 963:../probe_scope.c ****                                  }
 964:../probe_scope.c ****                              }
 965:../probe_scope.c ****                          }
 966:../probe_scope.c ****                      } else {
 967:../probe_scope.c ****                          if (p_sample_prev->Val32S != 0) {
 968:../probe_scope.c ****                              if (p_sample_cur->Val32S == 0) {
 969:../probe_scope.c ****                                  ProbeScope_TrigFlag = 1;
 970:../probe_scope.c ****                                  ProbeScope_TrigIx   = ProbeScope_SampleIxCur; 
 971:../probe_scope.c ****                              }
 972:../probe_scope.c ****                          }
 973:../probe_scope.c ****                      }
 974:../probe_scope.c ****                      break;
 975:../probe_scope.c ****                                     
 976:../probe_scope.c ****                 case PROBE_SCOPE_FP32:
 977:../probe_scope.c ****                      if (p_sample_prev->ValFP32 > p_sample_cur->ValFP32) {
 1313              	 .loc 1 977 0
 1314 03ba 03EB8101 	 add r1,r3,r1,lsl#2
 1315              	.LVL122:
 1316 03be 03EB8207 	 add r7,r3,r2,lsl#2
 1317 03c2 91ED067A 	 flds s14,[r1,#24]
 1318 03c6 D7ED067A 	 flds s15,[r7,#24]
 1319 03ca B4EEE77A 	 fcmpes s14,s15
 1320 03ce F1EE10FA 	 fmstat
 1321 03d2 7FF7E7AE 	 ble .L61
 978:../probe_scope.c ****                          if (p_sample_prev->ValFP32 >= p_ch->TrigLevel.ValFP32) {
 1322              	 .loc 1 978 0
 1323 03d6 D3ED056A 	 flds s13,[r3,#20]
 1324 03da B4EEE67A 	 fcmpes s14,s13
 1325 03de F1EE10FA 	 fmstat
 1326 03e2 FFF6DFAE 	 blt .L61
 979:../probe_scope.c ****                              if (p_sample_cur->ValFP32 <= p_ch->TrigLevel.ValFP32) {
 1327              	 .loc 1 979 0
 1328 03e6 F4EEE67A 	 fcmpes s15,s13
 1329 03ea F1EE10FA 	 fmstat
 1330 03ee 3FF6D9AE 	 bhi .L61
 1331              	.LVL123:
 1332              	.L179:
 980:../probe_scope.c ****                                  ProbeScope_TrigFlag = 1;
 981:../probe_scope.c ****                                  ProbeScope_TrigIx   = ProbeScope_SampleIxCur; 
 1333              	 .loc 1 981 0
 1334 03f2 9F4B     	 ldr r3,.L238+48
 980:../probe_scope.c ****                                  ProbeScope_TrigFlag = 1;
 1335              	 .loc 1 980 0
 1336 03f4 0121     	 movs r1,#1
 1337 03f6 0160     	 str r1,[r0]
 1338              	 .loc 1 981 0
 1339 03f8 1A60     	 str r2,[r3]
 1340 03fa D3E6     	 b .L61
 1341              	.LVL124:
 1342              	.L97:
 957:../probe_scope.c ****                          if (p_sample_prev->Val32S > p_sample_cur->Val32S) {
 1343              	 .loc 1 957 0
 1344 03fc 9F68     	 ldr r7,[r3,#8]
 1345 03fe 002F     	 cmp r7,#0
 1346 0400 40F03881 	 bne .L104
 958:../probe_scope.c ****                              if (p_sample_prev->Val32S >= p_ch->TrigLevel.Val32S) {
 1347              	 .loc 1 958 0
 1348 0404 8F1D     	 adds r7,r1,#6
 1349 0406 911D     	 adds r1,r2,#6
 1350              	.LVL125:
 1351 0408 53F82770 	 ldr r7,[r3,r7,lsl#2]
 1352 040c 53F82110 	 ldr r1,[r3,r1,lsl#2]
 1353 0410 8F42     	 cmp r7,r1
 1354 0412 7FF7C7AE 	 ble .L61
 959:../probe_scope.c ****                                  if (p_sample_cur->Val32S <= p_ch->TrigLevel.Val32S) {
 1355              	 .loc 1 959 0
 1356 0416 5B69     	 ldr r3,[r3,#20]
 1357              	.LVL126:
 1358 0418 9F42     	 cmp r7,r3
 1359 041a FFF6C3AE 	 blt .L61
 1360              	.L187:
 960:../probe_scope.c ****                                      ProbeScope_TrigFlag = 1;
 1361              	 .loc 1 960 0
 1362 041e 9942     	 cmp r1,r3
 1363 0420 3FF7C0AE 	 bgt .L61
 1364 0424 E5E7     	 b .L179
 1365              	.LVL127:
 1366              	.L96:
 937:../probe_scope.c ****                          if (p_sample_prev->Val32U > p_sample_cur->Val32U) {                  
 1367              	 .loc 1 937 0
 1368 0426 9F68     	 ldr r7,[r3,#8]
 1369 0428 002F     	 cmp r7,#0
 1370 042a 40F02381 	 bne .L104
 938:../probe_scope.c ****                              if (p_sample_prev->Val32U >= p_ch->TrigLevel.Val32U) {
 1371              	 .loc 1 938 0
 1372 042e 8F1D     	 adds r7,r1,#6
 1373 0430 911D     	 adds r1,r2,#6
 1374              	.LVL128:
 1375 0432 53F82770 	 ldr r7,[r3,r7,lsl#2]
 1376 0436 53F82110 	 ldr r1,[r3,r1,lsl#2]
 1377 043a 8F42     	 cmp r7,r1
 1378 043c 7FF6B2AE 	 bls .L61
 939:../probe_scope.c ****                                  if (p_sample_cur->Val32U <= p_ch->TrigLevel.Val32U) {
 1379              	 .loc 1 939 0
 1380 0440 5B69     	 ldr r3,[r3,#20]
 1381              	.LVL129:
 1382 0442 9F42     	 cmp r7,r3
 1383 0444 FFF4AEAE 	 bcc .L61
 1384              	.L191:
 940:../probe_scope.c ****                                      ProbeScope_TrigFlag = 1;
 1385              	 .loc 1 940 0
 1386 0448 9942     	 cmp r1,r3
 1387 044a 3FF6ABAE 	 bhi .L61
 1388 044e D0E7     	 b .L179
 1389              	.LVL130:
 1390              	.L95:
 915:../probe_scope.c ****                          if (p_sample_prev->Val16S > p_sample_cur->Val16S) {
 1391              	 .loc 1 915 0
 1392 0450 9F68     	 ldr r7,[r3,#8]
 1393 0452 002F     	 cmp r7,#0
 1394 0454 40F04281 	 bne .L102
 916:../probe_scope.c ****                              if (p_sample_prev->Val16S >= p_ch->TrigLevel.Val16S) {
 1395              	 .loc 1 916 0
 1396 0458 8F1D     	 adds r7,r1,#6
 1397 045a 911D     	 adds r1,r2,#6
 1398              	.LVL131:
 1399 045c 33F92770 	 ldrsh r7,[r3,r7,lsl#2]
 1400 0460 33F92110 	 ldrsh r1,[r3,r1,lsl#2]
 1401 0464 8F42     	 cmp r7,r1
 1402 0466 7FF79DAE 	 ble .L61
 917:../probe_scope.c ****                                  if (p_sample_cur->Val16S <= p_ch->TrigLevel.Val16S) {
 1403              	 .loc 1 917 0
 1404 046a B3F91430 	 ldrsh r3,[r3,#20]
 1405              	.LVL132:
 1406 046e 9F42     	 cmp r7,r3
 1407 0470 D5DA     	 bge .L187
 1408 0472 97E6     	 b .L61
 1409              	.LVL133:
 1410              	.L94:
 895:../probe_scope.c ****                          if (p_sample_prev->Val16U > p_sample_cur->Val16U) {
 1411              	 .loc 1 895 0
 1412 0474 9F68     	 ldr r7,[r3,#8]
 1413 0476 002F     	 cmp r7,#0
 1414 0478 40F01681 	 bne .L101
 896:../probe_scope.c ****                              if (p_sample_prev->Val16U >= p_ch->TrigLevel.Val16U) {
 1415              	 .loc 1 896 0
 1416 047c 8F1D     	 adds r7,r1,#6
 1417 047e 911D     	 adds r1,r2,#6
 1418              	.LVL134:
 1419 0480 33F82770 	 ldrh r7,[r3,r7,lsl#2]
 1420 0484 33F82110 	 ldrh r1,[r3,r1,lsl#2]
 1421 0488 8F42     	 cmp r7,r1
 1422 048a 7FF68BAE 	 bls .L61
 897:../probe_scope.c ****                                  if (p_sample_cur->Val16U <= p_ch->TrigLevel.Val16U) {
 1423              	 .loc 1 897 0
 1424 048e 9B8A     	 ldrh r3,[r3,#20]
 1425              	.LVL135:
 1426 0490 9F42     	 cmp r7,r3
 1427 0492 D9D2     	 bcs .L191
 1428 0494 86E6     	 b .L61
 1429              	.LVL136:
 1430              	.L93:
 874:../probe_scope.c ****                          if (p_sample_prev->Val08S > p_sample_cur->Val08S) {
 1431              	 .loc 1 874 0
 1432 0496 9F68     	 ldr r7,[r3,#8]
 1433 0498 002F     	 cmp r7,#0
 1434 049a 40F01281 	 bne .L100
 875:../probe_scope.c ****                              if (p_sample_prev->Val08S >= p_ch->TrigLevel.Val08S) {
 1435              	 .loc 1 875 0
 1436 049e 8F1D     	 adds r7,r1,#6
 1437 04a0 911D     	 adds r1,r2,#6
 1438              	.LVL137:
 1439 04a2 13F92770 	 ldrsb r7,[r3,r7,lsl#2]
 1440 04a6 13F92110 	 ldrsb r1,[r3,r1,lsl#2]
 1441 04aa 8F42     	 cmp r7,r1
 1442 04ac 7FF77AAE 	 ble .L61
 876:../probe_scope.c ****                                  if (p_sample_cur->Val08S <= p_ch->TrigLevel.Val08S) {
 1443              	 .loc 1 876 0
 1444 04b0 93F91430 	 ldrsb r3,[r3,#20]
 1445              	.LVL138:
 1446 04b4 9F42     	 cmp r7,r3
 1447 04b6 B2DA     	 bge .L187
 1448 04b8 74E6     	 b .L61
 1449              	.LVL139:
 1450              	.L91:
 854:../probe_scope.c ****                          if (p_sample_prev->Val08U > p_sample_cur->Val08U) {
 1451              	 .loc 1 854 0
 1452 04ba 9F68     	 ldr r7,[r3,#8]
 1453 04bc 002F     	 cmp r7,#0
 1454 04be 40F0E680 	 bne .L99
 855:../probe_scope.c ****                              if (p_sample_prev->Val08U >= p_ch->TrigLevel.Val08U) {
 1455              	 .loc 1 855 0
 1456 04c2 8F1D     	 adds r7,r1,#6
 1457 04c4 911D     	 adds r1,r2,#6
 1458              	.LVL140:
 1459 04c6 13F82770 	 ldrb r7,[r3,r7,lsl#2]
 1460 04ca 13F82110 	 ldrb r1,[r3,r1,lsl#2]
 1461 04ce 8F42     	 cmp r7,r1
 1462 04d0 7FF668AE 	 bls .L61
 856:../probe_scope.c ****                                  if (p_sample_cur->Val08U <= p_ch->TrigLevel.Val08U) {
 1463              	 .loc 1 856 0
 1464 04d4 1B7D     	 ldrb r3,[r3,#20]
 1465              	.LVL141:
 1466 04d6 9F42     	 cmp r7,r3
 1467 04d8 B6D2     	 bcs .L191
 1468 04da 63E6     	 b .L61
 1469              	.LVL142:
 1470              	.L209:
 1471              	.LBE309:
 1472              	.LBE325:
 1473              	.LBB326:
 1474              	.LBB167:
 1475              	.LBB156:
 1476              	.LBB155:
 1477 04dc FFF7FEFF 	 bl ProbeScope_SampleCh.part.0
 1478              	.LVL143:
 1479 04e0 DCE5     	 b .L133
 1480              	.LVL144:
 1481              	.L205:
 1482              	.LBE155:
 1483              	.LBE156:
 1484              	.LBB157:
 1485              	.LBB143:
 1486 04e2 FFF7FEFF 	 bl ProbeScope_SampleCh.part.0
 1487              	.LVL145:
 1488 04e6 C5E5     	 b .L129
 1489              	.LVL146:
 1490              	.L204:
 1491              	.LBE143:
 1492              	.LBE157:
 1493              	.LBB158:
 1494              	.LBB140:
 1495 04e8 FFF7FEFF 	 bl ProbeScope_SampleCh.part.0
 1496              	.LVL147:
 1497 04ec BDE5     	 b .L128
 1498              	.LVL148:
 1499              	.L203:
 1500              	.LBE140:
 1501              	.LBE158:
 1502              	.LBB159:
 1503              	.LBB137:
 1504 04ee FFF7FEFF 	 bl ProbeScope_SampleCh.part.0
 1505              	.LVL149:
 1506 04f2 B5E5     	 b .L127
 1507              	.LVL150:
 1508              	.L202:
 1509              	.LBE137:
 1510              	.LBE159:
 1511              	.LBB160:
 1512              	.LBB131:
 1513 04f4 FFF7FEFF 	 bl ProbeScope_SampleCh.part.0
 1514              	.LVL151:
 1515 04f8 ADE5     	 b .L126
 1516              	.LVL152:
 1517              	.L207:
 1518              	.LBE131:
 1519              	.LBE160:
 1520              	.LBB161:
 1521              	.LBB149:
 1522 04fa FFF7FEFF 	 bl ProbeScope_SampleCh.part.0
 1523              	.LVL153:
 1524 04fe C3E5     	 b .L131
 1525              	.LVL154:
 1526              	.L206:
 1527              	.LBE149:
 1528              	.LBE161:
 1529              	.LBB162:
 1530              	.LBB146:
 1531 0500 FFF7FEFF 	 bl ProbeScope_SampleCh.part.0
 1532              	.LVL155:
 1533 0504 BBE5     	 b .L130
 1534              	.LVL156:
 1535              	.L208:
 1536              	.LBE146:
 1537              	.LBE162:
 1538              	.LBB163:
 1539              	.LBB152:
 1540 0506 FFF7FEFF 	 bl ProbeScope_SampleCh.part.0
 1541              	.LVL157:
 1542 050a C2E5     	 b .L132
 1543              	.LVL158:
 1544              	.L62:
 1545              	.LBE152:
 1546              	.LBE163:
 1547              	.LBE167:
 1548              	.LBE326:
 1549              	.LBB327:
 1550              	.LBB310:
 707:../probe_scope.c ****              break;
 1551              	 .loc 1 707 0
 1552 050c 0123     	 movs r3,#1
 1553 050e 1370     	 strb r3,[r2]
 706:../probe_scope.c ****              ProbeScope_TrigChSel = PROBE_SCOPE_CH1;
 1554              	 .loc 1 706 0
 1555 0510 4B4B     	 ldr r3,.L238
 1556 0512 25E7     	 b .L63
 1557              	.LVL159:
 1558              	.L235:
 715:../probe_scope.c ****                 case PROBE_SCOPE_INT08U:
 1559              	 .loc 1 715 0
 1560 0514 062F     	 cmp r7,#6
 1561 0516 3FF645AE 	 bhi .L61
 1562 051a DFE807F0 	 tbb [pc,r7]
 1563              	.L75:
 1564 051e 6E       	 .byte (.L74-.L75)/2
 1565 051f 7F       	 .byte (.L76-.L75)/2
 1566 0520 5D       	 .byte (.L77-.L75)/2
 1567 0521 4B       	 .byte (.L78-.L75)/2
 1568 0522 36       	 .byte (.L79-.L75)/2
 1569 0523 21       	 .byte (.L80-.L75)/2
 1570 0524 04       	 .byte (.L81-.L75)/2
 1571 0525 00       	 .p2align 1
 1572              	.L81:
 840:../probe_scope.c ****                          if (p_sample_prev->ValFP32 <= p_ch->TrigLevel.ValFP32) {
 1573              	 .loc 1 840 0
 1574 0526 03EB8107 	 add r7,r3,r1,lsl#2
 1575 052a 03EB8201 	 add r1,r3,r2,lsl#2
 1576              	.LVL160:
 1577 052e D7ED066A 	 flds s13,[r7,#24]
 1578 0532 91ED067A 	 flds s14,[r1,#24]
 1579 0536 F4EEC76A 	 fcmpes s13,s14
 1580 053a F1EE10FA 	 fmstat
 1581 053e 7FF531AE 	 bpl .L61
 841:../probe_scope.c ****                              if (p_sample_cur->ValFP32 >= p_ch->TrigLevel.ValFP32) {
 1582              	 .loc 1 841 0
 1583 0542 D3ED057A 	 flds s15,[r3,#20]
 1584 0546 F4EEE76A 	 fcmpes s13,s15
 1585 054a F1EE10FA 	 fmstat
 1586 054e 3FF629AE 	 bhi .L61
 842:../probe_scope.c ****                                  ProbeScope_TrigFlag = 1;
 1587              	 .loc 1 842 0
 1588 0552 B4EEE77A 	 fcmpes s14,s15
 1589 0556 F1EE10FA 	 fmstat
 1590 055a FFF623AE 	 blt .L61
 1591 055e 48E7     	 b .L179
 1592              	.LVL161:
 1593              	.L80:
 820:../probe_scope.c ****                          if (p_sample_prev->Val32S < p_sample_cur->Val32S) {
 1594              	 .loc 1 820 0
 1595 0560 9F68     	 ldr r7,[r3,#8]
 1596 0562 002F     	 cmp r7,#0
 1597 0564 40F0C780 	 bne .L87
 821:../probe_scope.c ****                              if (p_sample_prev->Val32S <= p_ch->TrigLevel.Val32S) {
 1598              	 .loc 1 821 0
 1599 0568 8F1D     	 adds r7,r1,#6
 1600 056a 911D     	 adds r1,r2,#6
 1601              	.LVL162:
 1602 056c 53F82770 	 ldr r7,[r3,r7,lsl#2]
 1603 0570 53F82110 	 ldr r1,[r3,r1,lsl#2]
 1604 0574 8F42     	 cmp r7,r1
 1605 0576 BFF615AE 	 bge .L61
 822:../probe_scope.c ****                                  if (p_sample_cur->Val32S >= p_ch->TrigLevel.Val32S) {
 1606              	 .loc 1 822 0
 1607 057a 5B69     	 ldr r3,[r3,#20]
 1608              	.LVL163:
 1609 057c 9F42     	 cmp r7,r3
 1610 057e 3FF711AE 	 bgt .L61
 1611              	.L195:
 823:../probe_scope.c ****                                      ProbeScope_TrigFlag = 1;
 1612              	 .loc 1 823 0
 1613 0582 9942     	 cmp r1,r3
 1614 0584 FFF60EAE 	 blt .L61
 1615 0588 33E7     	 b .L179
 1616              	.LVL164:
 1617              	.L79:
 800:../probe_scope.c ****                          if (p_sample_prev->Val32U < p_sample_cur->Val32U) {
 1618              	 .loc 1 800 0
 1619 058a 9F68     	 ldr r7,[r3,#8]
 1620 058c 002F     	 cmp r7,#0
 1621 058e 40F0B280 	 bne .L87
 801:../probe_scope.c ****                              if (p_sample_prev->Val32U <= p_ch->TrigLevel.Val32U) {
 1622              	 .loc 1 801 0
 1623 0592 8F1D     	 adds r7,r1,#6
 1624 0594 911D     	 adds r1,r2,#6
 1625              	.LVL165:
 1626 0596 53F82770 	 ldr r7,[r3,r7,lsl#2]
 1627 059a 53F82110 	 ldr r1,[r3,r1,lsl#2]
 1628 059e 8F42     	 cmp r7,r1
 1629 05a0 BFF400AE 	 bcs .L61
 802:../probe_scope.c ****                                  if (p_sample_cur->Val32U >= p_ch->TrigLevel.Val32U) {
 1630              	 .loc 1 802 0
 1631 05a4 5B69     	 ldr r3,[r3,#20]
 1632              	.LVL166:
 1633 05a6 9F42     	 cmp r7,r3
 1634 05a8 3FF6FCAD 	 bhi .L61
 1635              	.L189:
 803:../probe_scope.c ****                                      ProbeScope_TrigFlag = 1;
 1636              	 .loc 1 803 0
 1637 05ac 9942     	 cmp r1,r3
 1638 05ae FFF4F9AD 	 bcc .L61
 1639 05b2 1EE7     	 b .L179
 1640              	.LVL167:
 1641              	.L78:
 778:../probe_scope.c ****                          if (p_sample_prev->Val16S < p_sample_cur->Val16S) {
 1642              	 .loc 1 778 0
 1643 05b4 9F68     	 ldr r7,[r3,#8]
 1644 05b6 002F     	 cmp r7,#0
 1645 05b8 40F0C480 	 bne .L85
 779:../probe_scope.c ****                              if (p_sample_prev->Val16S <= p_ch->TrigLevel.Val16S) {
 1646              	 .loc 1 779 0
 1647 05bc 8F1D     	 adds r7,r1,#6
 1648 05be 911D     	 adds r1,r2,#6
 1649              	.LVL168:
 1650 05c0 33F92770 	 ldrsh r7,[r3,r7,lsl#2]
 1651 05c4 33F92110 	 ldrsh r1,[r3,r1,lsl#2]
 1652 05c8 8F42     	 cmp r7,r1
 1653 05ca BFF6EBAD 	 bge .L61
 780:../probe_scope.c ****                                  if (p_sample_cur->Val16S >= p_ch->TrigLevel.Val16S) {
 1654              	 .loc 1 780 0
 1655 05ce B3F91430 	 ldrsh r3,[r3,#20]
 1656              	.LVL169:
 1657 05d2 9F42     	 cmp r7,r3
 1658 05d4 D5DD     	 ble .L195
 1659 05d6 E5E5     	 b .L61
 1660              	.LVL170:
 1661              	.L77:
 758:../probe_scope.c ****                          if (p_sample_prev->Val16U < p_sample_cur->Val16U) {
 1662              	 .loc 1 758 0
 1663 05d8 9F68     	 ldr r7,[r3,#8]
 1664 05da 002F     	 cmp r7,#0
 1665 05dc 40F0A580 	 bne .L84
 759:../probe_scope.c ****                              if (p_sample_prev->Val16U <= p_ch->TrigLevel.Val16U) {
 1666              	 .loc 1 759 0
 1667 05e0 8F1D     	 adds r7,r1,#6
 1668 05e2 911D     	 adds r1,r2,#6
 1669              	.LVL171:
 1670 05e4 33F82770 	 ldrh r7,[r3,r7,lsl#2]
 1671 05e8 33F82110 	 ldrh r1,[r3,r1,lsl#2]
 1672 05ec 8F42     	 cmp r7,r1
 1673 05ee BFF4D9AD 	 bcs .L61
 760:../probe_scope.c ****                                  if (p_sample_cur->Val16U >= p_ch->TrigLevel.Val16U) {
 1674              	 .loc 1 760 0
 1675 05f2 9B8A     	 ldrh r3,[r3,#20]
 1676              	.LVL172:
 1677 05f4 9F42     	 cmp r7,r3
 1678 05f6 D9D9     	 bls .L189
 1679 05f8 D4E5     	 b .L61
 1680              	.LVL173:
 1681              	.L74:
 717:../probe_scope.c ****                          if (p_sample_prev->Val08U < p_sample_cur->Val08U) {
 1682              	 .loc 1 717 0
 1683 05fa 9F68     	 ldr r7,[r3,#8]
 1684 05fc 002F     	 cmp r7,#0
 1685 05fe 40F0AE80 	 bne .L82
 718:../probe_scope.c ****                              if (p_sample_prev->Val08U <= p_ch->TrigLevel.Val08U) {
 1686              	 .loc 1 718 0
 1687 0602 8F1D     	 adds r7,r1,#6
 1688 0604 911D     	 adds r1,r2,#6
 1689              	.LVL174:
 1690 0606 13F82770 	 ldrb r7,[r3,r7,lsl#2]
 1691 060a 13F82110 	 ldrb r1,[r3,r1,lsl#2]
 1692 060e 8F42     	 cmp r7,r1
 1693 0610 BFF4C8AD 	 bcs .L61
 719:../probe_scope.c ****                                  if (p_sample_cur->Val08U >= p_ch->TrigLevel.Val08U) {
 1694              	 .loc 1 719 0
 1695 0614 1B7D     	 ldrb r3,[r3,#20]
 1696              	.LVL175:
 1697 0616 9F42     	 cmp r7,r3
 1698 0618 C8D9     	 bls .L189
 1699 061a C3E5     	 b .L61
 1700              	.LVL176:
 1701              	.L76:
 737:../probe_scope.c ****                          if (p_sample_prev->Val08S < p_sample_cur->Val08S) {
 1702              	 .loc 1 737 0
 1703 061c 9F68     	 ldr r7,[r3,#8]
 1704 061e 002F     	 cmp r7,#0
 1705 0620 76D1     	 bne .L83
 738:../probe_scope.c ****                              if (p_sample_prev->Val08S <= p_ch->TrigLevel.Val08S) {
 1706              	 .loc 1 738 0
 1707 0622 8F1D     	 adds r7,r1,#6
 1708 0624 911D     	 adds r1,r2,#6
 1709              	.LVL177:
 1710 0626 13F92770 	 ldrsb r7,[r3,r7,lsl#2]
 1711 062a 13F92110 	 ldrsb r1,[r3,r1,lsl#2]
 1712 062e 8F42     	 cmp r7,r1
 1713 0630 BFF6B8AD 	 bge .L61
 739:../probe_scope.c ****                                  if (p_sample_cur->Val08S >= p_ch->TrigLevel.Val08S) {
 1714              	 .loc 1 739 0
 1715 0634 93F91430 	 ldrsb r3,[r3,#20]
 1716              	.LVL178:
 1717 0638 9F42     	 cmp r7,r3
 1718 063a A2DD     	 ble .L195
 1719 063c B2E5     	 b .L61
 1720              	.L239:
 1721 063e 00BF     	 .align 2
 1722              	.L238:
 1723 0640 00000000 	 .word .LANCHOR1
 1724 0644 00000000 	 .word ProbeScope_TrigFlag
 1725 0648 00000000 	 .word .LANCHOR0
 1726 064c 00000000 	 .word .LANCHOR12
 1727 0650 00000000 	 .word .LANCHOR2
 1728 0654 00000000 	 .word .LANCHOR8
 1729 0658 00000000 	 .word .LANCHOR7
 1730 065c 00000000 	 .word .LANCHOR6
 1731 0660 00000000 	 .word .LANCHOR5
 1732 0664 00000000 	 .word .LANCHOR4
 1733 0668 00000000 	 .word .LANCHOR3
 1734 066c 00000000 	 .word .LANCHOR17
 1735 0670 00000000 	 .word ProbeScope_TrigIx
 1736              	.LVL179:
 1737              	.L104:
 967:../probe_scope.c ****                              if (p_sample_cur->Val32S == 0) {
 1738              	 .loc 1 967 0
 1739 0674 0631     	 adds r1,r1,#6
 1740              	.LVL180:
 1741 0676 53F82110 	 ldr r1,[r3,r1,lsl#2]
 1742 067a 0029     	 cmp r1,#0
 1743 067c 3FF492AD 	 beq .L61
 968:../probe_scope.c ****                                  ProbeScope_TrigFlag = 1;
 1744              	 .loc 1 968 0
 1745 0680 911D     	 adds r1,r2,#6
 1746 0682 53F82130 	 ldr r3,[r3,r1,lsl#2]
 1747              	.LVL181:
 1748 0686 002B     	 cmp r3,#0
 1749 0688 7FF48CAD 	 bne .L61
 1750 068c B1E6     	 b .L179
 1751              	.LVL182:
 1752              	.L99:
 864:../probe_scope.c ****                              if (p_sample_cur->Val08U == 0) {
 1753              	 .loc 1 864 0
 1754 068e 0631     	 adds r1,r1,#6
 1755              	.LVL183:
 1756 0690 13F82110 	 ldrb r1,[r3,r1,lsl#2]
 1757 0694 0029     	 cmp r1,#0
 1758 0696 3FF485AD 	 beq .L61
 865:../probe_scope.c ****                                  ProbeScope_TrigFlag = 1;
 1759              	 .loc 1 865 0
 1760 069a 911D     	 adds r1,r2,#6
 1761 069c 13F82130 	 ldrb r3,[r3,r1,lsl#2]
 1762              	.LVL184:
 1763 06a0 002B     	 cmp r3,#0
 1764 06a2 7FF47FAD 	 bne .L61
 1765 06a6 A4E6     	 b .L179
 1766              	.LVL185:
 1767              	.L101:
 905:../probe_scope.c ****                              if (p_sample_cur->Val16U == 0) {
 1768              	 .loc 1 905 0
 1769 06a8 0631     	 adds r1,r1,#6
 1770              	.LVL186:
 1771 06aa 33F82110 	 ldrh r1,[r3,r1,lsl#2]
 1772 06ae 0029     	 cmp r1,#0
 1773 06b0 3FF478AD 	 beq .L61
 906:../probe_scope.c ****                                  ProbeScope_TrigFlag = 1;
 1774              	 .loc 1 906 0
 1775 06b4 911D     	 adds r1,r2,#6
 1776 06b6 33F82130 	 ldrh r3,[r3,r1,lsl#2]
 1777              	.LVL187:
 1778 06ba 002B     	 cmp r3,#0
 1779 06bc 7FF472AD 	 bne .L61
 1780 06c0 97E6     	 b .L179
 1781              	.LVL188:
 1782              	.L100:
 884:../probe_scope.c ****                              if (p_sample_cur->Val08S == 0) {
 1783              	 .loc 1 884 0
 1784 06c2 0631     	 adds r1,r1,#6
 1785              	.LVL189:
 1786 06c4 13F92110 	 ldrsb r1,[r3,r1,lsl#2]
 1787 06c8 0029     	 cmp r1,#0
 1788 06ca 3FF46BAD 	 beq .L61
 885:../probe_scope.c ****                                  ProbeScope_TrigFlag = 1;
 1789              	 .loc 1 885 0
 1790 06ce 911D     	 adds r1,r2,#6
 1791 06d0 13F92130 	 ldrsb r3,[r3,r1,lsl#2]
 1792              	.LVL190:
 1793 06d4 002B     	 cmp r3,#0
 1794 06d6 7FF465AD 	 bne .L61
 1795 06da 8AE6     	 b .L179
 1796              	.LVL191:
 1797              	.L102:
 925:../probe_scope.c ****                              if (p_sample_cur->Val16S == 0) {
 1798              	 .loc 1 925 0
 1799 06dc 0631     	 adds r1,r1,#6
 1800              	.LVL192:
 1801 06de 33F92110 	 ldrsh r1,[r3,r1,lsl#2]
 1802 06e2 0029     	 cmp r1,#0
 1803 06e4 3FF45EAD 	 beq .L61
 926:../probe_scope.c ****                                  ProbeScope_TrigFlag = 1;
 1804              	 .loc 1 926 0
 1805 06e8 911D     	 adds r1,r2,#6
 1806 06ea 33F92130 	 ldrsh r3,[r3,r1,lsl#2]
 1807              	.LVL193:
 1808 06ee 002B     	 cmp r3,#0
 1809 06f0 7FF458AD 	 bne .L61
 1810 06f4 7DE6     	 b .L179
 1811              	.LVL194:
 1812              	.L87:
 830:../probe_scope.c ****                              if (p_sample_cur->Val32S != 0) {
 1813              	 .loc 1 830 0
 1814 06f6 0631     	 adds r1,r1,#6
 1815              	.LVL195:
 1816 06f8 53F82110 	 ldr r1,[r3,r1,lsl#2]
 1817 06fc 0029     	 cmp r1,#0
 1818 06fe 7FF451AD 	 bne .L61
 831:../probe_scope.c ****                                  ProbeScope_TrigFlag = 1;
 1819              	 .loc 1 831 0
 1820 0702 911D     	 adds r1,r2,#6
 1821 0704 53F82130 	 ldr r3,[r3,r1,lsl#2]
 1822              	.LVL196:
 1823 0708 002B     	 cmp r3,#0
 1824 070a 3FF44BAD 	 beq .L61
 1825 070e 70E6     	 b .L179
 1826              	.LVL197:
 1827              	.L83:
 747:../probe_scope.c ****                              if (p_sample_cur->Val08S != 0) { 
 1828              	 .loc 1 747 0
 1829 0710 0631     	 adds r1,r1,#6
 1830              	.LVL198:
 1831 0712 13F92110 	 ldrsb r1,[r3,r1,lsl#2]
 1832 0716 0029     	 cmp r1,#0
 1833 0718 7FF444AD 	 bne .L61
 748:../probe_scope.c ****                                  ProbeScope_TrigFlag = 1;
 1834              	 .loc 1 748 0
 1835 071c 911D     	 adds r1,r2,#6
 1836 071e 13F92130 	 ldrsb r3,[r3,r1,lsl#2]
 1837              	.LVL199:
 1838 0722 002B     	 cmp r3,#0
 1839 0724 3FF43EAD 	 beq .L61
 1840 0728 63E6     	 b .L179
 1841              	.LVL200:
 1842              	.L84:
 768:../probe_scope.c ****                              if (p_sample_cur->Val16U != 0) { 
 1843              	 .loc 1 768 0
 1844 072a 0631     	 adds r1,r1,#6
 1845              	.LVL201:
 1846 072c 33F82110 	 ldrh r1,[r3,r1,lsl#2]
 1847 0730 0029     	 cmp r1,#0
 1848 0732 7FF437AD 	 bne .L61
 769:../probe_scope.c ****                                  ProbeScope_TrigFlag = 1;
 1849              	 .loc 1 769 0
 1850 0736 911D     	 adds r1,r2,#6
 1851 0738 33F82130 	 ldrh r3,[r3,r1,lsl#2]
 1852              	.LVL202:
 1853 073c 002B     	 cmp r3,#0
 1854 073e 3FF431AD 	 beq .L61
 1855 0742 56E6     	 b .L179
 1856              	.LVL203:
 1857              	.L85:
 788:../probe_scope.c ****                              if (p_sample_cur->Val16S != 0) { 
 1858              	 .loc 1 788 0
 1859 0744 0631     	 adds r1,r1,#6
 1860              	.LVL204:
 1861 0746 33F92110 	 ldrsh r1,[r3,r1,lsl#2]
 1862 074a 0029     	 cmp r1,#0
 1863 074c 7FF42AAD 	 bne .L61
 789:../probe_scope.c ****                                  ProbeScope_TrigFlag = 1;
 1864              	 .loc 1 789 0
 1865 0750 911D     	 adds r1,r2,#6
 1866 0752 33F92130 	 ldrsh r3,[r3,r1,lsl#2]
 1867              	.LVL205:
 1868 0756 002B     	 cmp r3,#0
 1869 0758 3FF424AD 	 beq .L61
 1870 075c 49E6     	 b .L179
 1871              	.LVL206:
 1872              	.L82:
 727:../probe_scope.c ****                              if (p_sample_cur->Val08U != 0) { 
 1873              	 .loc 1 727 0
 1874 075e 0631     	 adds r1,r1,#6
 1875              	.LVL207:
 1876 0760 13F82110 	 ldrb r1,[r3,r1,lsl#2]
 1877 0764 0029     	 cmp r1,#0
 1878 0766 7FF41DAD 	 bne .L61
 728:../probe_scope.c ****                                  ProbeScope_TrigFlag = 1;
 1879              	 .loc 1 728 0
 1880 076a 911D     	 adds r1,r2,#6
 1881 076c 13F82130 	 ldrb r3,[r3,r1,lsl#2]
 1882              	.LVL208:
 1883 0770 002B     	 cmp r3,#0
 1884 0772 3FF417AD 	 beq .L61
 1885 0776 3CE6     	 b .L179
 1886              	.LBE310:
 1887              	.LBE327:
 1888              	 .cfi_endproc
 1889              	.LFE10:
 1891              	 .section .text.ProbeScope_Init,"ax",%progbits
 1892              	 .align 2
 1893              	 .global ProbeScope_Init
 1894              	 .thumb
 1895              	 .thumb_func
 1897              	ProbeScope_Init:
 1898              	.LFB0:
 242:../probe_scope.c ****     static  CPU_INT32U  temp = 0;
 1899              	 .loc 1 242 0
 1900              	 .cfi_startproc
 1901              	 
 1902              	 
 1903              	.LVL209:
 1904 0000 2DE9F04F 	 push {r4,r5,r6,r7,r8,r9,r10,fp,lr}
 1905              	.LCFI8:
 1906              	 .cfi_def_cfa_offset 36
 1907              	 .cfi_offset 4,-36
 1908              	 .cfi_offset 5,-32
 1909              	 .cfi_offset 6,-28
 1910              	 .cfi_offset 7,-24
 1911              	 .cfi_offset 8,-20
 1912              	 .cfi_offset 9,-16
 1913              	 .cfi_offset 10,-12
 1914              	 .cfi_offset 11,-8
 1915              	 .cfi_offset 14,-4
 275:../probe_scope.c ****     ProbeScope_TrigHoldOff        = 0;
 1916              	 .loc 1 275 0
 1917 0004 324A     	 ldr r2,.L242
 274:../probe_scope.c ****     ProbeScope_TrigDispPos        = 0;
 1918              	 .loc 1 274 0
 1919 0006 DFF808B1 	 ldr fp,.L242+64
 276:../probe_scope.c ****     ProbeScope_TrigHoldOffCtr     = 0;
 1920              	 .loc 1 276 0
 1921 000a DFF80881 	 ldr r8,.L242+68
 278:../probe_scope.c ****     ProbeScope_SamplesPreTrigCtr  = ProbeScope_TrigDispPos;
 1922              	 .loc 1 278 0
 1923 000e DFF808E1 	 ldr lr,.L242+72
 282:../probe_scope.c ****     temp                         += ProbeScopeDbg_MaxCh;
 1924              	 .loc 1 282 0
 1925 0012 304F     	 ldr r7,.L242+4
 283:../probe_scope.c ****     temp                         += ProbeScopeDbg_16BitEn;
 1926              	 .loc 1 283 0
 1927 0014 304D     	 ldr r5,.L242+8
 284:../probe_scope.c ****     temp                         += ProbeScopeDbg_32BitEn;
 1928              	 .loc 1 284 0
 1929 0016 314C     	 ldr r4,.L242+12
 285:../probe_scope.c ****     ProbeScope_SamplingClkDiv     =    1;
 1930              	 .loc 1 285 0
 1931 0018 3149     	 ldr r1,.L242+16
 279:../probe_scope.c ****     ProbeScope_SamplesPostTrigCtr = PROBE_SCOPE_MAX_SAMPLES;
 1932              	 .loc 1 279 0
 1933 001a DFF800C1 	 ldr ip,.L242+76
 246:../probe_scope.c **** #if PROBE_SCOPE_MAX_CH >= 2       
 1934              	 .loc 1 246 0
 1935 001e 314E     	 ldr r6,.L242+20
 288:../probe_scope.c ****     ProbeScope_InitFlag           =    1;
 1936              	 .loc 1 288 0
 1937 0020 DFF8FCA0 	 ldr r10,.L242+80
 285:../probe_scope.c ****     ProbeScope_SamplingClkDiv     =    1;
 1938              	 .loc 1 285 0
 1939 0024 DFF8FC90 	 ldr r9,.L242+84
 246:../probe_scope.c **** #if PROBE_SCOPE_MAX_CH >= 2       
 1940              	 .loc 1 246 0
 1941 0028 0023     	 movs r3,#0
 274:../probe_scope.c ****     ProbeScope_TrigDispPos        = 0;
 1942              	 .loc 1 274 0
 1943 002a CBF80030 	 str r3,[fp]
 275:../probe_scope.c ****     ProbeScope_TrigHoldOff        = 0;
 1944              	 .loc 1 275 0
 1945 002e 1360     	 str r3,[r2]
 276:../probe_scope.c ****     ProbeScope_TrigHoldOffCtr     = 0;
 1946              	 .loc 1 276 0
 1947 0030 C8F80030 	 str r3,[r8]
 278:../probe_scope.c ****     ProbeScope_SamplesPreTrigCtr  = ProbeScope_TrigDispPos;
 1948              	 .loc 1 278 0
 1949 0034 CEF80030 	 str r3,[lr]
 279:../probe_scope.c ****     ProbeScope_SamplesPostTrigCtr = PROBE_SCOPE_MAX_SAMPLES;
 1950              	 .loc 1 279 0
 1951 0038 D2F80080 	 ldr r8,[r2]
 282:../probe_scope.c ****     temp                         += ProbeScopeDbg_MaxCh;
 1952              	 .loc 1 282 0
 1953 003c B7F800E0 	 ldrh lr,[r7]
 283:../probe_scope.c ****     temp                         += ProbeScopeDbg_16BitEn;
 1954              	 .loc 1 283 0
 1955 0040 2A78     	 ldrb r2,[r5]
 284:../probe_scope.c ****     temp                         += ProbeScopeDbg_32BitEn;
 1956              	 .loc 1 284 0
 1957 0042 2768     	 ldr r7,[r4]
 285:../probe_scope.c ****     ProbeScope_SamplingClkDiv     =    1;
 1958              	 .loc 1 285 0
 1959 0044 0968     	 ldr r1,[r1]
 248:../probe_scope.c **** #endif                            
 1960              	 .loc 1 248 0
 1961 0046 284D     	 ldr r5,.L242+24
 251:../probe_scope.c **** #endif                            
 1962              	 .loc 1 251 0
 1963 0048 284C     	 ldr r4,.L242+28
 254:../probe_scope.c **** #endif                            
 1964              	 .loc 1 254 0
 1965 004a DFF8DCB0 	 ldr fp,.L242+88
 279:../probe_scope.c ****     ProbeScope_SamplesPostTrigCtr = PROBE_SCOPE_MAX_SAMPLES;
 1966              	 .loc 1 279 0
 1967 004e CCF80080 	 str r8,[ip]
 1968 0052 3944     	 add r1,r1,r7
 1969 0054 11FA8EF1 	 uxtah r1,r1,lr
 263:../probe_scope.c **** #endif                            
 1970              	 .loc 1 263 0
 1971 0058 DFF8D0E0 	 ldr lr,.L242+92
 246:../probe_scope.c **** #if PROBE_SCOPE_MAX_CH >= 2       
 1972              	 .loc 1 246 0
 1973 005c 3360     	 str r3,[r6]
 248:../probe_scope.c **** #endif                            
 1974              	 .loc 1 248 0
 1975 005e 2B60     	 str r3,[r5]
 251:../probe_scope.c **** #endif                            
 1976              	 .loc 1 251 0
 1977 0060 2360     	 str r3,[r4]
 257:../probe_scope.c **** #endif                            
 1978              	 .loc 1 257 0
 1979 0062 DFF8CC80 	 ldr r8,.L242+96
 260:../probe_scope.c **** #endif                            
 1980              	 .loc 1 260 0
 1981 0066 DFF8CCC0 	 ldr ip,.L242+100
 266:../probe_scope.c **** #endif
 1982              	 .loc 1 266 0
 1983 006a 214F     	 ldr r7,.L242+32
 269:../probe_scope.c ****     ProbeScope_State              = PROBE_SCOPE_STATE_START;
 1984              	 .loc 1 269 0
 1985 006c 214E     	 ldr r6,.L242+36
 270:../probe_scope.c ****     ProbeScope_TrigChSel          = PROBE_SCOPE_CH1;                         // Default trigger cha
 1986              	 .loc 1 270 0
 1987 006e 224D     	 ldr r5,.L242+40
 272:../probe_scope.c ****     ProbeScope_SampleIxCur        = 0;
 1988              	 .loc 1 272 0
 1989 0070 224C     	 ldr r4,.L242+44
 254:../probe_scope.c **** #endif                            
 1990              	 .loc 1 254 0
 1991 0072 CBF80030 	 str r3,[fp]
 263:../probe_scope.c **** #endif                            
 1992              	 .loc 1 263 0
 1993 0076 CEF80030 	 str r3,[lr]
 273:../probe_scope.c ****     ProbeScope_TrigFlag           = 0;
 1994              	 .loc 1 273 0
 1995 007a DFF8BCB0 	 ldr fp,.L242+104
 271:../probe_scope.c ****     ProbeScope_SampleIxPrev       = 0;
 1996              	 .loc 1 271 0
 1997 007e DFF8BCE0 	 ldr lr,.L242+108
 257:../probe_scope.c **** #endif                            
 1998              	 .loc 1 257 0
 1999 0082 C8F80030 	 str r3,[r8]
 260:../probe_scope.c **** #endif                            
 2000              	 .loc 1 260 0
 2001 0086 CCF80030 	 str r3,[ip]
 266:../probe_scope.c **** #endif
 2002              	 .loc 1 266 0
 2003 008a 3B60     	 str r3,[r7]
 269:../probe_scope.c ****     ProbeScope_State              = PROBE_SCOPE_STATE_START;
 2004              	 .loc 1 269 0
 2005 008c 3370     	 strb r3,[r6]
 270:../probe_scope.c ****     ProbeScope_TrigChSel          = PROBE_SCOPE_CH1;                         // Default trigger cha
 2006              	 .loc 1 270 0
 2007 008e 2B70     	 strb r3,[r5]
 272:../probe_scope.c ****     ProbeScope_SampleIxCur        = 0;
 2008              	 .loc 1 272 0
 2009 0090 2360     	 str r3,[r4]
 285:../probe_scope.c ****     ProbeScope_SamplingClkDiv     =    1;
 2010              	 .loc 1 285 0
 2011 0092 1144     	 add r1,r1,r2
 277:../probe_scope.c ****     ProbeScope_DataRdyFlag        = 0;
 2012              	 .loc 1 277 0
 2013 0094 DFF8A880 	 ldr r8,.L242+112
 287:../probe_scope.c ****     ProbeScope_SamplingClkHz      = sampling_clk_hz;
 2014              	 .loc 1 287 0
 2015 0098 DFF8A8C0 	 ldr ip,.L242+116
 281:../probe_scope.c ****     temp                          = ProbeScopeDbg_MaxSamples;
 2016              	 .loc 1 281 0
 2017 009c 184F     	 ldr r7,.L242+48
 286:../probe_scope.c ****     ProbeScope_SamplingClkDivCtr  =    0;
 2018              	 .loc 1 286 0
 2019 009e 194E     	 ldr r6,.L242+52
 289:../probe_scope.c **** }
 2020              	 .loc 1 289 0
 2021 00a0 194D     	 ldr r5,.L242+56
 280:../probe_scope.c ****     ProbeScope_TrigSlope          = PROBE_SCOPE_TRIG_POS;                    // We assume a positiv
 2022              	 .loc 1 280 0
 2023 00a2 1A4C     	 ldr r4,.L242+60
 273:../probe_scope.c ****     ProbeScope_TrigFlag           = 0;
 2024              	 .loc 1 273 0
 2025 00a4 CBF80030 	 str r3,[fp]
 271:../probe_scope.c ****     ProbeScope_SampleIxPrev       = 0;
 2026              	 .loc 1 271 0
 2027 00a8 0122     	 movs r2,#1
 280:../probe_scope.c ****     ProbeScope_TrigSlope          = PROBE_SCOPE_TRIG_POS;                    // We assume a positiv
 2028              	 .loc 1 280 0
 2029 00aa 4FF47A7B 	 mov fp,#1000
 271:../probe_scope.c ****     ProbeScope_SampleIxPrev       = 0;
 2030              	 .loc 1 271 0
 2031 00ae 8EF80020 	 strb r2,[lr]
 288:../probe_scope.c ****     ProbeScope_InitFlag           =    1;
 2032              	 .loc 1 288 0
 2033 00b2 CAF80000 	 str r0,[r10]
 285:../probe_scope.c ****     ProbeScope_SamplingClkDiv     =    1;
 2034              	 .loc 1 285 0
 2035 00b6 C9F80010 	 str r1,[r9]
 277:../probe_scope.c ****     ProbeScope_DataRdyFlag        = 0;
 2036              	 .loc 1 277 0
 2037 00ba C8F80030 	 str r3,[r8]
 287:../probe_scope.c ****     ProbeScope_SamplingClkHz      = sampling_clk_hz;
 2038              	 .loc 1 287 0
 2039 00be ACF80030 	 strh r3,[ip]
 281:../probe_scope.c ****     temp                          = ProbeScopeDbg_MaxSamples;
 2040              	 .loc 1 281 0
 2041 00c2 3A60     	 str r2,[r7]
 286:../probe_scope.c ****     ProbeScope_SamplingClkDivCtr  =    0;
 2042              	 .loc 1 286 0
 2043 00c4 3280     	 strh r2,[r6]
 289:../probe_scope.c **** }
 2044              	 .loc 1 289 0
 2045 00c6 2A60     	 str r2,[r5]
 280:../probe_scope.c ****     ProbeScope_TrigSlope          = PROBE_SCOPE_TRIG_POS;                    // We assume a positiv
 2046              	 .loc 1 280 0
 2047 00c8 C4F800B0 	 str fp,[r4]
 2048 00cc BDE8F08F 	 pop {r4,r5,r6,r7,r8,r9,r10,fp,pc}
 2049              	.L243:
 2050              	 .align 2
 2051              	.L242:
 2052 00d0 00000000 	 .word ProbeScope_TrigDispPos
 2053 00d4 00000000 	 .word .LANCHOR19
 2054 00d8 00000000 	 .word .LANCHOR20
 2055 00dc 00000000 	 .word .LANCHOR21
 2056 00e0 00000000 	 .word .LANCHOR22
 2057 00e4 00000000 	 .word .LANCHOR1
 2058 00e8 00000000 	 .word .LANCHOR2
 2059 00ec 00000000 	 .word .LANCHOR3
 2060 00f0 00000000 	 .word .LANCHOR8
 2061 00f4 00000000 	 .word .LANCHOR18
 2062 00f8 00000000 	 .word .LANCHOR11
 2063 00fc 00000000 	 .word .LANCHOR12
 2064 0100 00000000 	 .word .LANCHOR17
 2065 0104 00000000 	 .word .LANCHOR9
 2066 0108 00000000 	 .word ProbeScope_InitFlag
 2067 010c 00000000 	 .word .LANCHOR14
 2068 0110 00000000 	 .word ProbeScope_TrigFlag
 2069 0114 00000000 	 .word ProbeScope_TrigHoldOff
 2070 0118 00000000 	 .word ProbeScope_DataRdyFlag
 2071 011c 00000000 	 .word .LANCHOR15
 2072 0120 00000000 	 .word ProbeScope_SamplingClkHz
 2073 0124 00000000 	 .word .LANCHOR23
 2074 0128 00000000 	 .word .LANCHOR4
 2075 012c 00000000 	 .word .LANCHOR7
 2076 0130 00000000 	 .word .LANCHOR5
 2077 0134 00000000 	 .word .LANCHOR6
 2078 0138 00000000 	 .word .LANCHOR0
 2079 013c 00000000 	 .word .LANCHOR16
 2080 0140 00000000 	 .word .LANCHOR13
 2081 0144 00000000 	 .word .LANCHOR10
 2082              	 .cfi_endproc
 2083              	.LFE0:
 2085              	 .section .text.ProbeScope_Sampling,"ax",%progbits
 2086              	 .align 2
 2087              	 .global ProbeScope_Sampling
 2088              	 .thumb
 2089              	 .thumb_func
 2091              	ProbeScope_Sampling:
 2092              	.LFB1:
 304:../probe_scope.c ****     switch (ProbeScope_Mode) {
 2093              	 .loc 1 304 0
 2094              	 .cfi_startproc
 2095              	 
 2096              	 
 2097 0000 38B5     	 push {r3,r4,r5,lr}
 2098              	.LCFI9:
 2099              	 .cfi_def_cfa_offset 16
 2100              	 .cfi_offset 3,-16
 2101              	 .cfi_offset 4,-12
 2102              	 .cfi_offset 5,-8
 2103              	 .cfi_offset 14,-4
 305:../probe_scope.c ****         case PROBE_SCOPE_MODE_OFF:
 2104              	 .loc 1 305 0
 2105 0002 3E4B     	 ldr r3,.L278
 2106 0004 1B78     	 ldrb r3,[r3]
 2107 0006 032B     	 cmp r3,#3
 2108 0008 09D8     	 bhi .L244
 2109 000a DFE803F0 	 tbb [pc,r3]
 2110              	.L247:
 2111 000e 09       	 .byte (.L246-.L247)/2
 2112 000f 02       	 .byte (.L250-.L247)/2
 2113 0010 13       	 .byte (.L249-.L247)/2
 2114 0011 02       	 .byte (.L250-.L247)/2
 2115              	 .p2align 1
 2116              	.L250:
 2117              	.LBB356:
 2118              	.LBB357:
 390:../probe_scope.c ****         ProbeScope_SamplingClkDivCtr--;
 2119              	 .loc 1 390 0
 2120 0012 3B4A     	 ldr r2,.L278+4
 2121 0014 1388     	 ldrh r3,[r2]
 2122 0016 012B     	 cmp r3,#1
 2123 0018 1BD9     	 bls .L251
 391:../probe_scope.c ****     } else { 
 2124              	 .loc 1 391 0
 2125 001a 013B     	 subs r3,r3,#1
 2126 001c 1380     	 strh r3,[r2]
 2127              	.L244:
 2128 001e 38BD     	 pop {r3,r4,r5,pc}
 2129              	.L246:
 2130              	.LBE357:
 2131              	.LBE356:
 2132              	.LBB358:
 2133              	.LBB359:
 339:../probe_scope.c ****         ProbeScope_SamplingClkDiv =  1;
 2134              	 .loc 1 339 0
 2135 0020 384B     	 ldr r3,.L278+8
 338:../probe_scope.c ****     if (ProbeScope_SamplingClkDiv == 0) {
 2136              	 .loc 1 338 0
 2137 0022 3949     	 ldr r1,.L278+12
 339:../probe_scope.c ****         ProbeScope_SamplingClkDiv =  1;
 2138              	 .loc 1 339 0
 2139 0024 1A88     	 ldrh r2,[r3]
 338:../probe_scope.c ****     if (ProbeScope_SamplingClkDiv == 0) {
 2140              	 .loc 1 338 0
 2141 0026 0020     	 movs r0,#0
 2142 0028 0870     	 strb r0,[r1]
 339:../probe_scope.c ****         ProbeScope_SamplingClkDiv =  1;
 2143              	 .loc 1 339 0
 2144 002a 002A     	 cmp r2,#0
 2145 002c F7D1     	 bne .L244
 340:../probe_scope.c ****     }
 2146              	 .loc 1 340 0
 2147 002e 0122     	 movs r2,#1
 2148 0030 1A80     	 strh r2,[r3]
 2149 0032 38BD     	 pop {r3,r4,r5,pc}
 2150              	.L249:
 2151              	.LBE359:
 2152              	.LBE358:
 2153              	.LBB360:
 2154              	.LBB361:
 357:../probe_scope.c ****         ProbeScope_TrigFlag = 0;
 2155              	 .loc 1 357 0
 2156 0034 354C     	 ldr r4,.L278+16
 2157 0036 2368     	 ldr r3,[r4]
 2158 0038 3BB9     	 cbnz r3,.L253
 359:../probe_scope.c ****             ProbeScope_SamplingClkDivCtr--;
 2159              	 .loc 1 359 0
 2160 003a 3149     	 ldr r1,.L278+4
 358:../probe_scope.c ****         if (ProbeScope_SamplingClkDivCtr > 1) {
 2161              	 .loc 1 358 0
 2162 003c 344D     	 ldr r5,.L278+20
 359:../probe_scope.c ****             ProbeScope_SamplingClkDivCtr--;
 2163              	 .loc 1 359 0
 2164 003e 0A88     	 ldrh r2,[r1]
 358:../probe_scope.c ****         if (ProbeScope_SamplingClkDivCtr > 1) {
 2165              	 .loc 1 358 0
 2166 0040 2B60     	 str r3,[r5]
 359:../probe_scope.c ****             ProbeScope_SamplingClkDivCtr--;
 2167              	 .loc 1 359 0
 2168 0042 012A     	 cmp r2,#1
 2169 0044 09D9     	 bls .L254
 360:../probe_scope.c ****         } else {
 2170              	 .loc 1 360 0
 2171 0046 013A     	 subs r2,r2,#1
 2172 0048 0A80     	 strh r2,[r1]
 2173              	.L253:
 374:../probe_scope.c **** }
 2174              	 .loc 1 374 0
 2175 004a 2F4B     	 ldr r3,.L278+12
 2176 004c 0022     	 movs r2,#0
 2177 004e 1A70     	 strb r2,[r3]
 2178 0050 38BD     	 pop {r3,r4,r5,pc}
 2179              	.L251:
 2180              	.LBE361:
 2181              	.LBE360:
 322:../probe_scope.c ****     
 2182              	 .loc 1 322 0
 2183 0052 BDE83840 	 pop {r3,r4,r5,lr}
 2184              	.LCFI10:
 2185              	 .cfi_remember_state
 2186              	 .cfi_restore 14
 2187              	 .cfi_restore 5
 2188              	 .cfi_restore 4
 2189              	 .cfi_restore 3
 2190              	 .cfi_def_cfa_offset 0
 2191              	.LBB405:
 2192              	.LBB406:
 2193 0056 FFF7FEBF 	 b ProbeScope_ModeTrig.part.1
 2194              	.LVL210:
 2195              	.L254:
 2196              	.LCFI11:
 2197              	 .cfi_restore_state
 2198              	.LBE406:
 2199              	.LBE405:
 2200              	.LBB407:
 2201              	.LBB404:
 362:../probe_scope.c ****                 ProbeScope_SamplingClkDiv =  1;
 2202              	 .loc 1 362 0
 2203 005a 2A4A     	 ldr r2,.L278+8
 2204 005c 1388     	 ldrh r3,[r2]
 2205 005e 0BB9     	 cbnz r3,.L255
 363:../probe_scope.c ****             }
 2206              	 .loc 1 363 0
 2207 0060 0123     	 movs r3,#1
 2208 0062 1380     	 strh r3,[r2]
 2209              	.L255:
 2210              	.LBB362:
 2211              	.LBB363:
 2212              	.LBB364:
 2213              	.LBB365:
 524:../probe_scope.c ****         p_sample = &p_ch->Samples[ProbeScope_SampleIxCur];          // Point to current position in
 2214              	 .loc 1 524 0
 2215 0064 2B48     	 ldr r0,.L278+24
 2216              	.LBE365:
 2217              	.LBE364:
 2218              	.LBE363:
 2219              	.LBE362:
 365:../probe_scope.c ****             ProbeScope_SampleChAll();                                           // Get the first sa
 2220              	 .loc 1 365 0
 2221 0066 0B80     	 strh r3,[r1]
 2222              	.LVL211:
 2223              	.LBB400:
 2224              	.LBB398:
 2225              	.LBB368:
 2226              	.LBB366:
 524:../probe_scope.c ****         p_sample = &p_ch->Samples[ProbeScope_SampleIxCur];          // Point to current position in
 2227              	 .loc 1 524 0
 2228 0068 0368     	 ldr r3,[r0]
 2229 006a 012B     	 cmp r3,#1
 2230 006c 42D0     	 beq .L270
 2231              	.L256:
 2232              	.LVL212:
 2233              	.LBE366:
 2234              	.LBE368:
 2235              	.LBB369:
 2236              	.LBB370:
 2237 006e 2A48     	 ldr r0,.L278+28
 2238 0070 0368     	 ldr r3,[r0]
 2239 0072 012B     	 cmp r3,#1
 2240 0074 3BD0     	 beq .L271
 2241              	.L257:
 2242              	.LVL213:
 2243              	.LBE370:
 2244              	.LBE369:
 2245              	.LBB372:
 2246              	.LBB373:
 2247 0076 2948     	 ldr r0,.L278+32
 2248 0078 0368     	 ldr r3,[r0]
 2249 007a 012B     	 cmp r3,#1
 2250 007c 34D0     	 beq .L272
 2251              	.L258:
 2252              	.LVL214:
 2253              	.LBE373:
 2254              	.LBE372:
 2255              	.LBB375:
 2256              	.LBB376:
 2257 007e 2848     	 ldr r0,.L278+36
 2258 0080 0368     	 ldr r3,[r0]
 2259 0082 012B     	 cmp r3,#1
 2260 0084 2DD0     	 beq .L273
 2261              	.L259:
 2262              	.LVL215:
 2263              	.LBE376:
 2264              	.LBE375:
 2265              	.LBB378:
 2266              	.LBB379:
 2267 0086 2748     	 ldr r0,.L278+40
 2268 0088 0368     	 ldr r3,[r0]
 2269 008a 012B     	 cmp r3,#1
 2270 008c 26D0     	 beq .L274
 2271              	.L260:
 2272              	.LVL216:
 2273              	.LBE379:
 2274              	.LBE378:
 2275              	.LBB381:
 2276              	.LBB382:
 2277 008e 2648     	 ldr r0,.L278+44
 2278 0090 0368     	 ldr r3,[r0]
 2279 0092 012B     	 cmp r3,#1
 2280 0094 1FD0     	 beq .L275
 2281              	.L261:
 2282              	.LVL217:
 2283              	.LBE382:
 2284              	.LBE381:
 2285              	.LBB384:
 2286              	.LBB385:
 2287 0096 2548     	 ldr r0,.L278+48
 2288 0098 0368     	 ldr r3,[r0]
 2289 009a 012B     	 cmp r3,#1
 2290 009c 18D0     	 beq .L276
 2291              	.L262:
 2292              	.LVL218:
 2293              	.LBE385:
 2294              	.LBE384:
 2295              	.LBB387:
 2296              	.LBB388:
 2297 009e 2448     	 ldr r0,.L278+52
 2298 00a0 0368     	 ldr r3,[r0]
 2299 00a2 012B     	 cmp r3,#1
 2300 00a4 11D0     	 beq .L277
 2301              	.L263:
 2302              	.LBE388:
 2303              	.LBE387:
 2304              	.LBE398:
 2305              	.LBE400:
 2306              	.LBB401:
 2307              	.LBB402:
 630:../probe_scope.c ****     ProbeScope_SampleIxCur++;                                      // Position to where next sample
 2308              	 .loc 1 630 0
 2309 00a6 234A     	 ldr r2,.L278+56
 2310 00a8 2349     	 ldr r1,.L278+60
 2311 00aa 1368     	 ldr r3,[r2]
 2312 00ac 0B60     	 str r3,[r1]
 631:../probe_scope.c ****     if (ProbeScope_SampleIxCur >= PROBE_SCOPE_MAX_SAMPLES) {       // See if we need to wrap around
 2313              	 .loc 1 631 0
 2314 00ae 0133     	 adds r3,r3,#1
 632:../probe_scope.c ****         ProbeScope_SampleIxCur = 0;                                // yes
 2315              	 .loc 1 632 0
 2316 00b0 B3F57A7F 	 cmp r3,#1000
 631:../probe_scope.c ****     if (ProbeScope_SampleIxCur >= PROBE_SCOPE_MAX_SAMPLES) {       // See if we need to wrap around
 2317              	 .loc 1 631 0
 2318 00b4 1360     	 str r3,[r2]
 632:../probe_scope.c ****         ProbeScope_SampleIxCur = 0;                                // yes
 2319              	 .loc 1 632 0
 2320 00b6 05D3     	 bcc .L264
 633:../probe_scope.c ****     }
 2321              	 .loc 1 633 0
 2322 00b8 0023     	 movs r3,#0
 2323 00ba 1360     	 str r3,[r2]
 2324              	.L265:
 2325              	.LBE402:
 2326              	.LBE401:
 369:../probe_scope.c ****                 ProbeScope_TrigFlag    = 1;
 2327              	 .loc 1 369 0
 2328 00bc 0123     	 movs r3,#1
 2329 00be 2360     	 str r3,[r4]
 370:../probe_scope.c ****             }
 2330              	 .loc 1 370 0
 2331 00c0 2B60     	 str r3,[r5]
 2332 00c2 C2E7     	 b .L253
 2333              	.L264:
 368:../probe_scope.c ****                 ProbeScope_DataRdyFlag = 1;   
 2334              	 .loc 1 368 0
 2335 00c4 002B     	 cmp r3,#0
 2336 00c6 C0D1     	 bne .L253
 2337 00c8 F8E7     	 b .L265
 2338              	.L277:
 2339              	.LBB403:
 2340              	.LBB399:
 2341              	.LBB390:
 2342              	.LBB389:
 2343 00ca FFF7FEFF 	 bl ProbeScope_SampleCh.part.0
 2344              	.LVL219:
 2345 00ce EAE7     	 b .L263
 2346              	.LVL220:
 2347              	.L276:
 2348              	.LBE389:
 2349              	.LBE390:
 2350              	.LBB391:
 2351              	.LBB386:
 2352 00d0 FFF7FEFF 	 bl ProbeScope_SampleCh.part.0
 2353              	.LVL221:
 2354 00d4 E3E7     	 b .L262
 2355              	.LVL222:
 2356              	.L275:
 2357              	.LBE386:
 2358              	.LBE391:
 2359              	.LBB392:
 2360              	.LBB383:
 2361 00d6 FFF7FEFF 	 bl ProbeScope_SampleCh.part.0
 2362              	.LVL223:
 2363 00da DCE7     	 b .L261
 2364              	.LVL224:
 2365              	.L274:
 2366              	.LBE383:
 2367              	.LBE392:
 2368              	.LBB393:
 2369              	.LBB380:
 2370 00dc FFF7FEFF 	 bl ProbeScope_SampleCh.part.0
 2371              	.LVL225:
 2372 00e0 D5E7     	 b .L260
 2373              	.LVL226:
 2374              	.L273:
 2375              	.LBE380:
 2376              	.LBE393:
 2377              	.LBB394:
 2378              	.LBB377:
 2379 00e2 FFF7FEFF 	 bl ProbeScope_SampleCh.part.0
 2380              	.LVL227:
 2381 00e6 CEE7     	 b .L259
 2382              	.LVL228:
 2383              	.L272:
 2384              	.LBE377:
 2385              	.LBE394:
 2386              	.LBB395:
 2387              	.LBB374:
 2388 00e8 FFF7FEFF 	 bl ProbeScope_SampleCh.part.0
 2389              	.LVL229:
 2390 00ec C7E7     	 b .L258
 2391              	.LVL230:
 2392              	.L271:
 2393              	.LBE374:
 2394              	.LBE395:
 2395              	.LBB396:
 2396              	.LBB371:
 2397 00ee FFF7FEFF 	 bl ProbeScope_SampleCh.part.0
 2398              	.LVL231:
 2399 00f2 C0E7     	 b .L257
 2400              	.LVL232:
 2401              	.L270:
 2402              	.LBE371:
 2403              	.LBE396:
 2404              	.LBB397:
 2405              	.LBB367:
 2406 00f4 FFF7FEFF 	 bl ProbeScope_SampleCh.part.0
 2407              	.LVL233:
 2408 00f8 B9E7     	 b .L256
 2409              	.L279:
 2410 00fa 00BF     	 .align 2
 2411              	.L278:
 2412 00fc 00000000 	 .word .LANCHOR18
 2413 0100 00000000 	 .word .LANCHOR10
 2414 0104 00000000 	 .word .LANCHOR9
 2415 0108 00000000 	 .word .LANCHOR11
 2416 010c 00000000 	 .word ProbeScope_DataRdyFlag
 2417 0110 00000000 	 .word ProbeScope_TrigFlag
 2418 0114 00000000 	 .word .LANCHOR1
 2419 0118 00000000 	 .word .LANCHOR2
 2420 011c 00000000 	 .word .LANCHOR3
 2421 0120 00000000 	 .word .LANCHOR4
 2422 0124 00000000 	 .word .LANCHOR5
 2423 0128 00000000 	 .word .LANCHOR6
 2424 012c 00000000 	 .word .LANCHOR7
 2425 0130 00000000 	 .word .LANCHOR8
 2426 0134 00000000 	 .word .LANCHOR0
 2427 0138 00000000 	 .word .LANCHOR12
 2428              	.LBE367:
 2429              	.LBE397:
 2430              	.LBE399:
 2431              	.LBE403:
 2432              	.LBE404:
 2433              	.LBE407:
 2434              	 .cfi_endproc
 2435              	.LFE1:
 2437              	 .comm ProbeScope_SamplingClkHz,4,4
 2438              	 .comm ProbeScope_TrigIx,4,4
 2439              	 .comm ProbeScope_TrigHoldOff,4,4
 2440              	 .comm ProbeScope_TrigFlag,4,4
 2441              	 .comm ProbeScope_TrigDispPos,4,4
 2442              	 .comm ProbeScope_InitFlag,4,4
 2443              	 .comm ProbeScope_DataRdyFlag,4,4
 2444              	 .section .bss.ProbeScope_SamplingClkDiv,"aw",%nobits
 2445              	 .align 1
 2446              	 .set .LANCHOR9,.+0
 2449              	ProbeScope_SamplingClkDiv:
 2450 0000 0000     	 .space 2
 2451              	 .section .bss.ProbeScope_SamplesPreTrigCtr,"aw",%nobits
 2452              	 .align 2
 2453              	 .set .LANCHOR15,.+0
 2456              	ProbeScope_SamplesPreTrigCtr:
 2457 0000 00000000 	 .space 4
 2458              	 .section .bss.ProbeScope_SampleIxPrev,"aw",%nobits
 2459              	 .align 2
 2460              	 .set .LANCHOR12,.+0
 2463              	ProbeScope_SampleIxPrev:
 2464 0000 00000000 	 .space 4
 2465              	 .section .data.ProbeScopeDbg_MaxCh,"aw",%progbits
 2466              	 .set .LANCHOR20,.+0
 2469              	ProbeScopeDbg_MaxCh:
 2470 0000 08       	 .byte 8
 2471              	 .section .bss.ProbeScope_State,"aw",%nobits
 2472              	 .set .LANCHOR11,.+0
 2475              	ProbeScope_State:
 2476 0000 00       	 .space 1
 2477              	 .section .bss.ProbeScope_SamplingClkDivCtr,"aw",%nobits
 2478              	 .align 1
 2479              	 .set .LANCHOR10,.+0
 2482              	ProbeScope_SamplingClkDivCtr:
 2483 0000 0000     	 .space 2
 2484              	 .section .bss.ProbeScope_Ch1,"aw",%nobits
 2485              	 .align 2
 2486              	 .set .LANCHOR1,.+0
 2489              	ProbeScope_Ch1:
 2490 0000 00000000 	 .space 4024
 2490      00000000 
 2490      00000000 
 2490      00000000 
 2490      00000000 
 2491              	 .section .bss.ProbeScope_Ch2,"aw",%nobits
 2492              	 .align 2
 2493              	 .set .LANCHOR2,.+0
 2496              	ProbeScope_Ch2:
 2497 0000 00000000 	 .space 4024
 2497      00000000 
 2497      00000000 
 2497      00000000 
 2497      00000000 
 2498              	 .section .bss.ProbeScope_Ch3,"aw",%nobits
 2499              	 .align 2
 2500              	 .set .LANCHOR3,.+0
 2503              	ProbeScope_Ch3:
 2504 0000 00000000 	 .space 4024
 2504      00000000 
 2504      00000000 
 2504      00000000 
 2504      00000000 
 2505              	 .section .bss.ProbeScope_Ch4,"aw",%nobits
 2506              	 .align 2
 2507              	 .set .LANCHOR4,.+0
 2510              	ProbeScope_Ch4:
 2511 0000 00000000 	 .space 4024
 2511      00000000 
 2511      00000000 
 2511      00000000 
 2511      00000000 
 2512              	 .section .bss.ProbeScope_Ch5,"aw",%nobits
 2513              	 .align 2
 2514              	 .set .LANCHOR5,.+0
 2517              	ProbeScope_Ch5:
 2518 0000 00000000 	 .space 4024
 2518      00000000 
 2518      00000000 
 2518      00000000 
 2518      00000000 
 2519              	 .section .bss.ProbeScope_Ch6,"aw",%nobits
 2520              	 .align 2
 2521              	 .set .LANCHOR6,.+0
 2524              	ProbeScope_Ch6:
 2525 0000 00000000 	 .space 4024
 2525      00000000 
 2525      00000000 
 2525      00000000 
 2525      00000000 
 2526              	 .section .bss.ProbeScope_Ch7,"aw",%nobits
 2527              	 .align 2
 2528              	 .set .LANCHOR7,.+0
 2531              	ProbeScope_Ch7:
 2532 0000 00000000 	 .space 4024
 2532      00000000 
 2532      00000000 
 2532      00000000 
 2532      00000000 
 2533              	 .section .bss.ProbeScope_Ch8,"aw",%nobits
 2534              	 .align 2
 2535              	 .set .LANCHOR8,.+0
 2538              	ProbeScope_Ch8:
 2539 0000 00000000 	 .space 4024
 2539      00000000 
 2539      00000000 
 2539      00000000 
 2539      00000000 
 2540              	 .section .bss.temp.4203,"aw",%nobits
 2541              	 .align 2
 2542              	 .set .LANCHOR23,.+0
 2545              	temp.4203:
 2546 0000 00000000 	 .space 4
 2547              	 .section .bss.ProbeScope_TrigChSel,"aw",%nobits
 2548              	 .set .LANCHOR16,.+0
 2551              	ProbeScope_TrigChSel:
 2552 0000 00       	 .space 1
 2553              	 .section .bss.ProbeScope_Mode,"aw",%nobits
 2554              	 .set .LANCHOR18,.+0
 2557              	ProbeScope_Mode:
 2558 0000 00       	 .space 1
 2559              	 .section .bss.ProbeScope_TrigHoldOffCtr,"aw",%nobits
 2560              	 .align 2
 2561              	 .set .LANCHOR13,.+0
 2564              	ProbeScope_TrigHoldOffCtr:
 2565 0000 00000000 	 .space 4
 2566              	 .section .data.ProbeScopeDbg_32BitEn,"aw",%progbits
 2567              	 .align 2
 2568              	 .set .LANCHOR22,.+0
 2571              	ProbeScopeDbg_32BitEn:
 2572 0000 01000000 	 .word 1
 2573              	 .section .bss.ProbeScope_SamplesPostTrigCtr,"aw",%nobits
 2574              	 .align 2
 2575              	 .set .LANCHOR14,.+0
 2578              	ProbeScope_SamplesPostTrigCtr:
 2579 0000 00000000 	 .space 4
 2580              	 .section .data.ProbeScopeDbg_MaxSamples,"aw",%progbits
 2581              	 .align 1
 2582              	 .set .LANCHOR19,.+0
 2585              	ProbeScopeDbg_MaxSamples:
 2586 0000 E803     	 .short 1000
 2587              	 .section .data.ProbeScopeDbg_16BitEn,"aw",%progbits
 2588              	 .align 2
 2589              	 .set .LANCHOR21,.+0
 2592              	ProbeScopeDbg_16BitEn:
 2593 0000 01000000 	 .word 1
 2594              	 .section .bss.ProbeScope_TrigSlope,"aw",%nobits
 2595              	 .align 2
 2596              	 .set .LANCHOR17,.+0
 2599              	ProbeScope_TrigSlope:
 2600 0000 00000000 	 .space 4
 2601              	 .section .bss.ProbeScope_SampleIxCur,"aw",%nobits
 2602              	 .align 2
 2603              	 .set .LANCHOR0,.+0
 2606              	ProbeScope_SampleIxCur:
 2607 0000 00000000 	 .space 4
 2608              	 .text
 2609              	.Letext0:
 2610              	 .file 2 "c:\\dave 4\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 2611              	 .file 3 "c:\\dave 4\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
DEFINED SYMBOLS
                            *ABS*:00000000 probe_scope.c
    {standard input}:20     .text.ProbeScope_SampleCh.part.0:00000000 $t
    {standard input}:24     .text.ProbeScope_SampleCh.part.0:00000000 ProbeScope_SampleCh.part.0
    {standard input}:49     .text.ProbeScope_SampleCh.part.0:00000010 $d
    {standard input}:258    .text.ProbeScope_SampleCh.part.0:000000f8 $d
    {standard input}:263    .text.ProbeScope_ModeTrig.part.1:00000000 $t
    {standard input}:267    .text.ProbeScope_ModeTrig.part.1:00000000 ProbeScope_ModeTrig.part.1
    {standard input}:307    .text.ProbeScope_ModeTrig.part.1:00000020 $d
    {standard input}:311    .text.ProbeScope_ModeTrig.part.1:00000028 $t
    {standard input}:906    .text.ProbeScope_ModeTrig.part.1:0000026e $d
    {standard input}:915    .text.ProbeScope_ModeTrig.part.1:00000276 $t
    {standard input}:981    .text.ProbeScope_ModeTrig.part.1:00000294 $d
                            *COM*:00000004 ProbeScope_DataRdyFlag
                            *COM*:00000004 ProbeScope_TrigFlag
                            *COM*:00000004 ProbeScope_TrigDispPos
                            *COM*:00000004 ProbeScope_TrigHoldOff
    {standard input}:1013   .text.ProbeScope_ModeTrig.part.1:000002ec $t
    {standard input}:1304   .text.ProbeScope_ModeTrig.part.1:000003b2 $d
    {standard input}:1564   .text.ProbeScope_ModeTrig.part.1:0000051e $d
    {standard input}:1723   .text.ProbeScope_ModeTrig.part.1:00000640 $d
                            *COM*:00000004 ProbeScope_TrigIx
    {standard input}:1739   .text.ProbeScope_ModeTrig.part.1:00000674 $t
    {standard input}:1892   .text.ProbeScope_Init:00000000 $t
    {standard input}:1897   .text.ProbeScope_Init:00000000 ProbeScope_Init
    {standard input}:2052   .text.ProbeScope_Init:000000d0 $d
                            *COM*:00000004 ProbeScope_InitFlag
                            *COM*:00000004 ProbeScope_SamplingClkHz
    {standard input}:2086   .text.ProbeScope_Sampling:00000000 $t
    {standard input}:2091   .text.ProbeScope_Sampling:00000000 ProbeScope_Sampling
    {standard input}:2111   .text.ProbeScope_Sampling:0000000e $d
    {standard input}:2115   .text.ProbeScope_Sampling:00000012 $t
    {standard input}:2412   .text.ProbeScope_Sampling:000000fc $d
    {standard input}:2445   .bss.ProbeScope_SamplingClkDiv:00000000 $d
    {standard input}:2449   .bss.ProbeScope_SamplingClkDiv:00000000 ProbeScope_SamplingClkDiv
    {standard input}:2452   .bss.ProbeScope_SamplesPreTrigCtr:00000000 $d
    {standard input}:2456   .bss.ProbeScope_SamplesPreTrigCtr:00000000 ProbeScope_SamplesPreTrigCtr
    {standard input}:2459   .bss.ProbeScope_SampleIxPrev:00000000 $d
    {standard input}:2463   .bss.ProbeScope_SampleIxPrev:00000000 ProbeScope_SampleIxPrev
    {standard input}:2469   .data.ProbeScopeDbg_MaxCh:00000000 ProbeScopeDbg_MaxCh
    {standard input}:2475   .bss.ProbeScope_State:00000000 ProbeScope_State
    {standard input}:2476   .bss.ProbeScope_State:00000000 $d
    {standard input}:2478   .bss.ProbeScope_SamplingClkDivCtr:00000000 $d
    {standard input}:2482   .bss.ProbeScope_SamplingClkDivCtr:00000000 ProbeScope_SamplingClkDivCtr
    {standard input}:2485   .bss.ProbeScope_Ch1:00000000 $d
    {standard input}:2489   .bss.ProbeScope_Ch1:00000000 ProbeScope_Ch1
    {standard input}:2492   .bss.ProbeScope_Ch2:00000000 $d
    {standard input}:2496   .bss.ProbeScope_Ch2:00000000 ProbeScope_Ch2
    {standard input}:2499   .bss.ProbeScope_Ch3:00000000 $d
    {standard input}:2503   .bss.ProbeScope_Ch3:00000000 ProbeScope_Ch3
    {standard input}:2506   .bss.ProbeScope_Ch4:00000000 $d
    {standard input}:2510   .bss.ProbeScope_Ch4:00000000 ProbeScope_Ch4
    {standard input}:2513   .bss.ProbeScope_Ch5:00000000 $d
    {standard input}:2517   .bss.ProbeScope_Ch5:00000000 ProbeScope_Ch5
    {standard input}:2520   .bss.ProbeScope_Ch6:00000000 $d
    {standard input}:2524   .bss.ProbeScope_Ch6:00000000 ProbeScope_Ch6
    {standard input}:2527   .bss.ProbeScope_Ch7:00000000 $d
    {standard input}:2531   .bss.ProbeScope_Ch7:00000000 ProbeScope_Ch7
    {standard input}:2534   .bss.ProbeScope_Ch8:00000000 $d
    {standard input}:2538   .bss.ProbeScope_Ch8:00000000 ProbeScope_Ch8
    {standard input}:2541   .bss.temp.4203:00000000 $d
    {standard input}:2545   .bss.temp.4203:00000000 temp.4203
    {standard input}:2551   .bss.ProbeScope_TrigChSel:00000000 ProbeScope_TrigChSel
    {standard input}:2552   .bss.ProbeScope_TrigChSel:00000000 $d
    {standard input}:2557   .bss.ProbeScope_Mode:00000000 ProbeScope_Mode
    {standard input}:2558   .bss.ProbeScope_Mode:00000000 $d
    {standard input}:2560   .bss.ProbeScope_TrigHoldOffCtr:00000000 $d
    {standard input}:2564   .bss.ProbeScope_TrigHoldOffCtr:00000000 ProbeScope_TrigHoldOffCtr
    {standard input}:2567   .data.ProbeScopeDbg_32BitEn:00000000 $d
    {standard input}:2571   .data.ProbeScopeDbg_32BitEn:00000000 ProbeScopeDbg_32BitEn
    {standard input}:2574   .bss.ProbeScope_SamplesPostTrigCtr:00000000 $d
    {standard input}:2578   .bss.ProbeScope_SamplesPostTrigCtr:00000000 ProbeScope_SamplesPostTrigCtr
    {standard input}:2581   .data.ProbeScopeDbg_MaxSamples:00000000 $d
    {standard input}:2585   .data.ProbeScopeDbg_MaxSamples:00000000 ProbeScopeDbg_MaxSamples
    {standard input}:2588   .data.ProbeScopeDbg_16BitEn:00000000 $d
    {standard input}:2592   .data.ProbeScopeDbg_16BitEn:00000000 ProbeScopeDbg_16BitEn
    {standard input}:2595   .bss.ProbeScope_TrigSlope:00000000 $d
    {standard input}:2599   .bss.ProbeScope_TrigSlope:00000000 ProbeScope_TrigSlope
    {standard input}:2602   .bss.ProbeScope_SampleIxCur:00000000 $d
    {standard input}:2606   .bss.ProbeScope_SampleIxCur:00000000 ProbeScope_SampleIxCur
                     .debug_frame:00000010 $d
    {standard input}:56     .text.ProbeScope_SampleCh.part.0:00000017 $d
    {standard input}:56     .text.ProbeScope_SampleCh.part.0:00000018 $t
    {standard input}:1311   .text.ProbeScope_ModeTrig.part.1:000003b9 $d
    {standard input}:1311   .text.ProbeScope_ModeTrig.part.1:000003ba $t
    {standard input}:1571   .text.ProbeScope_ModeTrig.part.1:00000525 $d
    {standard input}:1571   .text.ProbeScope_ModeTrig.part.1:00000526 $t

NO UNDEFINED SYMBOLS
