   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,2
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "UserTasks.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.lcdTask,"ax",%progbits
  20              	 .align 2
  21              	 .thumb
  22              	 .thumb_func
  24              	lcdTask:
  25              	.LFB402:
  26              	 .file 1 "../UserTasks.c"
   1:../UserTasks.c **** #include <DAVE.h>
   2:../UserTasks.c **** 
   3:../UserTasks.c **** #include <stdio.h>
   4:../UserTasks.c **** 
   5:../UserTasks.c **** #include "FuzzyController.h"
   6:../UserTasks.c **** #include "UserTasks.h"
   7:../UserTasks.c **** #include "Encoder.h"
   8:../UserTasks.c **** #include "SharedData.h"
   9:../UserTasks.c **** #include "FREERTOS/FreeRTOS.h"
  10:../UserTasks.c **** #include "FREERTOS/task.h"
  11:../UserTasks.c **** 
  12:../UserTasks.c **** 
  13:../UserTasks.c **** // File-scope task functions
  14:../UserTasks.c **** static void controlTask(void);
  15:../UserTasks.c **** static void lcdTask(void);
  16:../UserTasks.c **** 
  17:../UserTasks.c **** // Enumerators for all tasks, plus the number of existing tasks
  18:../UserTasks.c **** enum taskenum{
  19:../UserTasks.c **** 	controlTaskEnum,
  20:../UserTasks.c **** 	lcdTaskEnum,
  21:../UserTasks.c **** 	NumberOfTasks
  22:../UserTasks.c **** };
  23:../UserTasks.c **** 
  24:../UserTasks.c **** // Stack values assigned to each task
  25:../UserTasks.c **** unsigned short task_stacks[NumberOfTasks]={
  26:../UserTasks.c **** 	configMINIMAL_STACK_SIZE,    // Control task
  27:../UserTasks.c **** 	configMINIMAL_STACK_SIZE+100 // LCD task
  28:../UserTasks.c **** };
  29:../UserTasks.c **** 
  30:../UserTasks.c **** // Task priorities
  31:../UserTasks.c **** UBaseType_t task_priorities[NumberOfTasks]={
  32:../UserTasks.c **** 	tskIDLE_PRIORITY+2,
  33:../UserTasks.c **** 	tskIDLE_PRIORITY+1
  34:../UserTasks.c **** };
  35:../UserTasks.c **** 
  36:../UserTasks.c **** TaskHandle_t task_handlers[NumberOfTasks];
  37:../UserTasks.c **** 
  38:../UserTasks.c **** void startTasks(void){
  39:../UserTasks.c **** 
  40:../UserTasks.c **** 	xTaskCreate((void*) controlTask, "Control Task", task_stacks[controlTaskEnum], NULL, task_prioriti
  41:../UserTasks.c **** 	xTaskCreate((void*) lcdTask, 	 "LCD Task", 	 task_stacks[lcdTaskEnum], 	   NULL, task_priorities[l
  42:../UserTasks.c **** 
  43:../UserTasks.c **** }
  44:../UserTasks.c **** 
  45:../UserTasks.c **** // A task for the fuzzy controller
  46:../UserTasks.c **** static void controlTask(void){
  47:../UserTasks.c **** 	static TickType_t prev_wake_time;
  48:../UserTasks.c **** 
  49:../UserTasks.c **** 	// Control frequency in Hz
  50:../UserTasks.c **** 	static const float control_freq = 200.0F;
  51:../UserTasks.c **** 
  52:../UserTasks.c **** 	// Motor parameters
  53:../UserTasks.c **** 	// Full rotation counts = counts/rotation * 4 encoder signal edges (quadrature encoder) * gearbox 
  54:../UserTasks.c **** 	static const int32_t full_rotation_counts = 5000;
  55:../UserTasks.c **** 	static const float max_rpm = 270.0F;
  56:../UserTasks.c **** 
  57:../UserTasks.c **** 	// Encoder variables
  58:../UserTasks.c **** 	static uint32_t encoder_value=0, prev_encoder_value = 0;
  59:../UserTasks.c **** 	static int64_t encoder_value_diff = 0;
  60:../UserTasks.c **** 
  61:../UserTasks.c **** 	// Motor speed measurement variables
  62:../UserTasks.c **** 	static float motor_speed = 0;
  63:../UserTasks.c **** 	static float prev_motor_speed = 0;
  64:../UserTasks.c **** 
  65:../UserTasks.c **** 	// Motor position measurement variables
  66:../UserTasks.c **** 	static int32_t motor_position = 0;
  67:../UserTasks.c **** 	static float motor_position_normalized = 0.0F;
  68:../UserTasks.c **** 
  69:../UserTasks.c **** 	// Controller inputs
  70:../UserTasks.c **** 	static float speed_error = 0;
  71:../UserTasks.c **** 	static float accel = 0;
  72:../UserTasks.c **** 	static float position_error = 0;
  73:../UserTasks.c **** 
  74:../UserTasks.c **** 	// Fuzzy controller output variables
  75:../UserTasks.c **** 	static float fuzzy_out_pwm_increment = 0;
  76:../UserTasks.c **** 	static float fuzzy_out_speed_reference = 0;
  77:../UserTasks.c **** 	static float fuzzy_sum = 0;
  78:../UserTasks.c **** 	static float fuzzy_pwm = 0;
  79:../UserTasks.c **** 
  80:../UserTasks.c **** 	// Current control parameters to follow
  81:../UserTasks.c **** 	struct control_params_struct current_control_params;
  82:../UserTasks.c **** 
  83:../UserTasks.c **** 	// Initialize the fuzzy controller
  84:../UserTasks.c **** 	setupFuzzyController();
  85:../UserTasks.c **** 
  86:../UserTasks.c **** 	// Turn on H-bridge
  87:../UserTasks.c **** 	DIGITAL_IO_SetOutputHigh(&INH_1);
  88:../UserTasks.c **** 	DIGITAL_IO_SetOutputHigh(&INH_2);
  89:../UserTasks.c **** 
  90:../UserTasks.c **** 	// Start H-bridge PWM at 50% Duty Cycle (i.e. brake motor)
  91:../UserTasks.c **** 	PWM_CCU8_Start(&PWM_CCU8_0);
  92:../UserTasks.c **** 	PWM_CCU8_SetDutyCycleSymmetric(&PWM_CCU8_0,XMC_CCU8_SLICE_COMPARE_CHANNEL_1, 50*100);
  93:../UserTasks.c **** 
  94:../UserTasks.c **** 	// Get current "wake" time to execute properly the very first task wait
  95:../UserTasks.c **** 	prev_wake_time=xTaskGetTickCount();
  96:../UserTasks.c **** 
  97:../UserTasks.c **** 	while(1){
  98:../UserTasks.c **** 		DIGITAL_IO_SetOutputHigh(&TEST_PIN);
  99:../UserTasks.c **** 
 100:../UserTasks.c **** 		current_control_params = getControlParams();
 101:../UserTasks.c **** 
 102:../UserTasks.c **** 		encoder_value = getEncoderValue();
 103:../UserTasks.c **** 
 104:../UserTasks.c **** 		// Handle overflow or underflow
 105:../UserTasks.c **** 		if((prev_encoder_value > ((UINT32_MAX/4)*3)) && (encoder_value < (UINT32_MAX/4))){
 106:../UserTasks.c **** 			// Overflow
 107:../UserTasks.c **** 			encoder_value_diff = ((int64_t) UINT32_MAX - prev_encoder_value + encoder_value + 1);
 108:../UserTasks.c **** 		} else if((prev_encoder_value < (UINT32_MAX/4)) && (encoder_value > ((UINT32_MAX/4)*3))){
 109:../UserTasks.c **** 			// Underflow
 110:../UserTasks.c **** 			encoder_value_diff = -((int64_t)UINT32_MAX - encoder_value + prev_encoder_value + 1);
 111:../UserTasks.c **** 		} else {
 112:../UserTasks.c **** 			// Normal difference
 113:../UserTasks.c **** 			encoder_value_diff = ((int64_t)encoder_value) - ((int64_t)prev_encoder_value);
 114:../UserTasks.c **** 		}
 115:../UserTasks.c **** 
 116:../UserTasks.c **** 		// Compute motor speed in RPMs
 117:../UserTasks.c **** 		motor_speed = ((float)encoder_value_diff) * control_freq;
 118:../UserTasks.c **** 		motor_speed = (motor_speed / ((float)full_rotation_counts)) * 60.0F;
 119:../UserTasks.c **** 
 120:../UserTasks.c **** 		// Compute motor position (in encoder counts)
 121:../UserTasks.c **** 		motor_position += encoder_value_diff;
 122:../UserTasks.c **** 
 123:../UserTasks.c **** 		/*
 124:../UserTasks.c **** 		// Check if motor_position needs re-adjustment to fit between 0 and full_rotation counts (0deg to
 125:../UserTasks.c **** 		// If so, adjust (normalized) position reference as well
 126:../UserTasks.c **** 		while(motor_position > full_rotation_counts){
 127:../UserTasks.c **** 			motor_position -= full_rotation_counts;
 128:../UserTasks.c **** 			current_control_params.position_ref -= 1.0F;
 129:../UserTasks.c **** 			setControlParams(current_control_params);
 130:../UserTasks.c **** 		}
 131:../UserTasks.c **** 
 132:../UserTasks.c **** 		while(motor_position < 0){
 133:../UserTasks.c **** 			motor_position += full_rotation_counts;
 134:../UserTasks.c **** 			current_control_params.position_ref += 1.0F;
 135:../UserTasks.c **** 			setControlParams(current_control_params);
 136:../UserTasks.c **** 		}
 137:../UserTasks.c **** 		*/
 138:../UserTasks.c **** 
 139:../UserTasks.c **** 		// If position control is activated, then use last cycle's speed reference
 140:../UserTasks.c **** 		if(current_control_params.control_position == true){
 141:../UserTasks.c **** 			current_control_params.speed_ref = fuzzy_out_speed_reference * max_rpm;
 142:../UserTasks.c **** 			// Force speed setting so that the user can read it back
 143:../UserTasks.c **** 			setControlParams(current_control_params);
 144:../UserTasks.c **** 		}
 145:../UserTasks.c **** 
 146:../UserTasks.c **** 		// Compute normalized error
 147:../UserTasks.c **** 		speed_error = (current_control_params.speed_ref - motor_speed) / max_rpm;
 148:../UserTasks.c **** 
 149:../UserTasks.c **** 		// Compute normalized acceleration
 150:../UserTasks.c **** 		accel = ((motor_speed/max_rpm) - (prev_motor_speed/max_rpm)) * control_freq;
 151:../UserTasks.c **** 
 152:../UserTasks.c **** 		// Compute normalized position
 153:../UserTasks.c **** 		motor_position_normalized = (((float)motor_position) / ((float)full_rotation_counts));
 154:../UserTasks.c **** 		position_error = current_control_params.position_ref - motor_position_normalized;
 155:../UserTasks.c **** 
 156:../UserTasks.c **** 		computeFuzzy(speed_error, accel, position_error, &fuzzy_out_pwm_increment, &fuzzy_out_speed_refer
 157:../UserTasks.c **** 
 158:../UserTasks.c **** 		fuzzy_sum += fuzzy_out_pwm_increment;
 159:../UserTasks.c **** 
 160:../UserTasks.c **** 		if(fuzzy_sum > 1){
 161:../UserTasks.c **** 			fuzzy_sum = 1;
 162:../UserTasks.c **** 		} else if(fuzzy_sum < -1){
 163:../UserTasks.c **** 			fuzzy_sum = -1;
 164:../UserTasks.c **** 		}
 165:../UserTasks.c **** 
 166:../UserTasks.c **** 		fuzzy_pwm = ((fuzzy_sum/2) + 0.5)*100;
 167:../UserTasks.c **** 
 168:../UserTasks.c **** 		PWM_CCU8_SetDutyCycleSymmetric(&PWM_CCU8_0,XMC_CCU8_SLICE_COMPARE_CHANNEL_1, fuzzy_pwm*100);
 169:../UserTasks.c **** 
 170:../UserTasks.c **** 		// Prepare motor speed for next iteration
 171:../UserTasks.c **** 		prev_motor_speed = motor_speed;
 172:../UserTasks.c **** 
 173:../UserTasks.c **** 		// Prepare encoder value for next iteration
 174:../UserTasks.c **** 		prev_encoder_value = encoder_value;
 175:../UserTasks.c **** 
 176:../UserTasks.c **** 		//Save motor data
 177:../UserTasks.c **** 		struct motor_data_struct motor_data = {motor_position_normalized, motor_speed, fuzzy_pwm};
 178:../UserTasks.c **** 		setMotorData(motor_data);
 179:../UserTasks.c **** 
 180:../UserTasks.c **** 		DIGITAL_IO_SetOutputLow(&TEST_PIN);
 181:../UserTasks.c **** 		vTaskDelayUntil(&prev_wake_time, ((1.0F/control_freq) * 1000.0F)/portTICK_PERIOD_MS);
 182:../UserTasks.c **** 	}
 183:../UserTasks.c **** }
 184:../UserTasks.c **** 
 185:../UserTasks.c **** /*
 186:../UserTasks.c **** static void lcdTask(void){
 187:../UserTasks.c **** 	static TickType_t prev_wake_time;
 188:../UserTasks.c **** 	static struct motor_data_struct motor_data;
 189:../UserTasks.c **** 
 190:../UserTasks.c **** 	prev_wake_time=xTaskGetTickCount();
 191:../UserTasks.c **** 
 192:../UserTasks.c **** 
 193:../UserTasks.c **** 	char buffer1[30], buffer2[30], buffer3[30];
 194:../UserTasks.c **** 
 195:../UserTasks.c **** 	GUI_Clear();
 196:../UserTasks.c **** 	GUI_SetFont(&GUI_Font16B_1);  // Set the font-type
 197:../UserTasks.c **** 	GUI_SetColor(GUI_WHITE);
 198:../UserTasks.c **** 
 199:../UserTasks.c **** 	while(1){
 200:../UserTasks.c **** 
 201:../UserTasks.c **** 		motor_data = getMotorData();
 202:../UserTasks.c **** 
 203:../UserTasks.c **** 		GUI_SetColor(GUI_BLACK);
 204:../UserTasks.c **** 		GUI_DispStringAt(buffer1, 18, 18);
 205:../UserTasks.c **** 		GUI_DispStringAt(buffer2, 18, 38);
 206:../UserTasks.c **** 		GUI_DispStringAt(buffer3, 18, 58);
 207:../UserTasks.c **** 
 208:../UserTasks.c **** 		sprintf(buffer1,"Position: %"PRId32, (int32_t) motor_data.position);
 209:../UserTasks.c **** 		sprintf(buffer2,"Speed (RPM): %"PRId32, (int32_t) motor_data.speed);
 210:../UserTasks.c **** 		sprintf(buffer3,"PWM: %"PRId32,  (int32_t) motor_data.current_pwm);
 211:../UserTasks.c **** 
 212:../UserTasks.c **** 		GUI_SetColor(GUI_WHITE);
 213:../UserTasks.c **** 		GUI_DispStringAt(buffer1, 18, 18);
 214:../UserTasks.c **** 		GUI_DispStringAt(buffer2, 18, 38);
 215:../UserTasks.c **** 		GUI_DispStringAt(buffer3, 18, 58);
 216:../UserTasks.c **** 
 217:../UserTasks.c **** 		vTaskDelayUntil(&prev_wake_time, 500/portTICK_PERIOD_MS);
 218:../UserTasks.c **** 	}
 219:../UserTasks.c **** }
 220:../UserTasks.c **** */
 221:../UserTasks.c **** 
 222:../UserTasks.c **** static void lcdTask(void){
  27              	 .loc 1 222 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31 0000 F0B5     	 push {r4,r5,r6,r7,lr}
  32              	.LCFI0:
  33              	 .cfi_def_cfa_offset 20
  34              	 .cfi_offset 4,-20
  35              	 .cfi_offset 5,-16
  36              	 .cfi_offset 6,-12
  37              	 .cfi_offset 7,-8
  38              	 .cfi_offset 14,-4
  39 0002 2DED028B 	 fstmfdd sp!,{d8}
  40              	.LCFI1:
  41              	 .cfi_def_cfa_offset 28
  42              	 .cfi_offset 80,-28
  43              	 .cfi_offset 81,-24
  44 0006 8DB0     	 sub sp,sp,#52
  45              	.LCFI2:
  46              	 .cfi_def_cfa_offset 80
 223:../UserTasks.c **** 	static TickType_t prev_wake_time;
 224:../UserTasks.c **** 	static struct motor_data_struct motor_data;
 225:../UserTasks.c **** 
 226:../UserTasks.c **** 	prev_wake_time=xTaskGetTickCount();
  47              	 .loc 1 226 0
  48 0008 FFF7FEFF 	 bl xTaskGetTickCount
  49              	.LVL0:
  50 000c 444B     	 ldr r3,.L5
  51 000e 454D     	 ldr r5,.L5+4
  52 0010 1860     	 str r0,[r3]
 227:../UserTasks.c **** 
 228:../UserTasks.c **** 
 229:../UserTasks.c **** 	char buffer[30];
 230:../UserTasks.c **** 
 231:../UserTasks.c **** 	GUI_Clear();
  53              	 .loc 1 231 0
  54 0012 FFF7FEFF 	 bl GUI_Clear
  55              	.LVL1:
 232:../UserTasks.c **** 	GUI_SetFont(&GUI_Font16B_1);  // Set the font-type
  56              	 .loc 1 232 0
  57 0016 4448     	 ldr r0,.L5+8
  58 0018 FFF7FEFF 	 bl GUI_SetFont
  59              	.LVL2:
  60 001c 6E46     	 mov r6,sp
  61              	.L2:
 233:../UserTasks.c **** 
 234:../UserTasks.c **** 	while(1){
 235:../UserTasks.c **** 
 236:../UserTasks.c **** 		motor_data = getMotorData();
  62              	 .loc 1 236 0 discriminator 1
  63 001e 3046     	 mov r0,r6
  64 0020 FFF7FEFF 	 bl getMotorData
  65              	.LVL3:
  66 0024 96E80700 	 ldmia r6,{r0,r1,r2}
  67 0028 85E80700 	 stmia r5,{r0,r1,r2}
 237:../UserTasks.c **** 
 238:../UserTasks.c **** 
 239:../UserTasks.c **** 
 240:../UserTasks.c **** 		GUI_SetColor(GUI_LIGHTCYAN);
  68              	 .loc 1 240 0 discriminator 1
  69 002c 3F48     	 ldr r0,.L5+12
 241:../UserTasks.c **** 
 242:../UserTasks.c **** 		GUI_DispStringAt("Position:", 0, 18);
 243:../UserTasks.c **** 		GUI_DispStringAt("Speed:", 0, 38);
 244:../UserTasks.c **** 		GUI_DispStringAt("PWM:", 0, 58);
 245:../UserTasks.c **** 
 246:../UserTasks.c **** 		GUI_SetColor(GUI_WHITE);
 247:../UserTasks.c **** 
 248:../UserTasks.c **** 		sprintf(buffer, "%"PRId32".%"PRId32"    ", (int32_t) motor_data.position, ((int32_t)(motor_data.p
  70              	 .loc 1 248 0 discriminator 1
  71 002e 404F     	 ldr r7,.L5+16
 240:../UserTasks.c **** 
  72              	 .loc 1 240 0 discriminator 1
  73 0030 FFF7FEFF 	 bl GUI_SetColor
  74              	.LVL4:
 242:../UserTasks.c **** 		GUI_DispStringAt("Speed:", 0, 38);
  75              	 .loc 1 242 0 discriminator 1
  76 0034 3F48     	 ldr r0,.L5+20
  77 0036 0021     	 movs r1,#0
  78 0038 1222     	 movs r2,#18
  79 003a FFF7FEFF 	 bl GUI_DispStringAt
  80              	.LVL5:
 243:../UserTasks.c **** 		GUI_DispStringAt("PWM:", 0, 58);
  81              	 .loc 1 243 0 discriminator 1
  82 003e 3E48     	 ldr r0,.L5+24
  83 0040 0021     	 movs r1,#0
  84 0042 2622     	 movs r2,#38
  85 0044 FFF7FEFF 	 bl GUI_DispStringAt
  86              	.LVL6:
 244:../UserTasks.c **** 
  87              	 .loc 1 244 0 discriminator 1
  88 0048 0021     	 movs r1,#0
  89 004a 3A22     	 movs r2,#58
  90 004c 3B48     	 ldr r0,.L5+28
  91 004e FFF7FEFF 	 bl GUI_DispStringAt
  92              	.LVL7:
 246:../UserTasks.c **** 
  93              	 .loc 1 246 0 discriminator 1
  94 0052 6FF07F40 	 mvn r0,#-16777216
  95 0056 FFF7FEFF 	 bl GUI_SetColor
  96              	.LVL8:
  97              	 .loc 1 248 0 discriminator 1
  98 005a 95ED007A 	 flds s14,[r5]
  99 005e 3849     	 ldr r1,.L5+32
 100 0060 B2EE048A 	 fconsts s16,#36
 101 0064 67EE087A 	 fmuls s15,s14,s16
 102 0068 BDEEC77A 	 ftosizs s14,s14
 103 006c FDEEE77A 	 ftosizs s15,s15
 104 0070 17EE102A 	 fmrs r2,s14
 105 0074 17EE903A 	 fmrs r3,s15
 106 0078 87FB034E 	 smull r4,lr,r7,r3
 107 007c DC17     	 asrs r4,r3,#31
 108 007e C4EBAE04 	 rsb r4,r4,lr,asr#2
 109 0082 04EB8404 	 add r4,r4,r4,lsl#2
 110 0086 A3EB4403 	 sub r3,r3,r4,lsl#1
 111 008a 04A8     	 add r0,sp,#16
 112 008c FFF7FEFF 	 bl sprintf
 113              	.LVL9:
 249:../UserTasks.c **** 		GUI_DispStringAt(buffer, 60, 18);
 114              	 .loc 1 249 0 discriminator 1
 115 0090 04A8     	 add r0,sp,#16
 116 0092 3C21     	 movs r1,#60
 117 0094 1222     	 movs r2,#18
 118 0096 FFF7FEFF 	 bl GUI_DispStringAt
 119              	.LVL10:
 250:../UserTasks.c **** 
 251:../UserTasks.c **** 		sprintf(buffer, "%"PRId32".%"PRId32"    ", (int32_t) motor_data.speed, ((int32_t)(motor_data.spee
 120              	 .loc 1 251 0 discriminator 1
 121 009a 95ED017A 	 flds s14,[r5,#4]
 122 009e 2849     	 ldr r1,.L5+32
 123 00a0 67EE087A 	 fmuls s15,s14,s16
 124 00a4 BDEEC77A 	 ftosizs s14,s14
 125 00a8 FDEEE77A 	 ftosizs s15,s15
 126 00ac 17EE102A 	 fmrs r2,s14
 127 00b0 17EE903A 	 fmrs r3,s15
 128 00b4 87FB034E 	 smull r4,lr,r7,r3
 129 00b8 DC17     	 asrs r4,r3,#31
 130 00ba C4EBAE04 	 rsb r4,r4,lr,asr#2
 131 00be 04EB8404 	 add r4,r4,r4,lsl#2
 132 00c2 A3EB4403 	 sub r3,r3,r4,lsl#1
 133 00c6 04A8     	 add r0,sp,#16
 134 00c8 FFF7FEFF 	 bl sprintf
 135              	.LVL11:
 252:../UserTasks.c **** 		GUI_DispStringAt(buffer, 60, 38);
 136              	 .loc 1 252 0 discriminator 1
 137 00cc 04A8     	 add r0,sp,#16
 138 00ce 3C21     	 movs r1,#60
 139 00d0 2622     	 movs r2,#38
 140 00d2 FFF7FEFF 	 bl GUI_DispStringAt
 141              	.LVL12:
 253:../UserTasks.c **** 
 254:../UserTasks.c **** 		sprintf(buffer, "%"PRId32".%"PRId32"    ", (int32_t) motor_data.current_pwm, ((int32_t)(motor_dat
 142              	 .loc 1 254 0 discriminator 1
 143 00d6 D5ED027A 	 flds s15,[r5,#8]
 144 00da 1949     	 ldr r1,.L5+32
 145 00dc 27EE888A 	 fmuls s16,s15,s16
 146 00e0 FDEEE77A 	 ftosizs s15,s15
 147 00e4 04A8     	 add r0,sp,#16
 148 00e6 17EE902A 	 fmrs r2,s15
 149 00ea FDEEC87A 	 ftosizs s15,s16
 150 00ee 17EE904A 	 fmrs r4,s15
 151 00f2 87FB0437 	 smull r3,r7,r7,r4
 152 00f6 E317     	 asrs r3,r4,#31
 153 00f8 C3EBA703 	 rsb r3,r3,r7,asr#2
 154 00fc 03EB8303 	 add r3,r3,r3,lsl#2
 155 0100 A4EB4303 	 sub r3,r4,r3,lsl#1
 156 0104 FFF7FEFF 	 bl sprintf
 157              	.LVL13:
 255:../UserTasks.c **** 		GUI_DispStringAt(buffer, 60, 58);
 158              	 .loc 1 255 0 discriminator 1
 159 0108 04A8     	 add r0,sp,#16
 160 010a 3C21     	 movs r1,#60
 161 010c 3A22     	 movs r2,#58
 162 010e FFF7FEFF 	 bl GUI_DispStringAt
 163              	.LVL14:
 256:../UserTasks.c **** 
 257:../UserTasks.c **** 		vTaskDelayUntil(&prev_wake_time, 500/portTICK_PERIOD_MS);
 164              	 .loc 1 257 0 discriminator 1
 165 0112 0348     	 ldr r0,.L5
 166 0114 4FF4FA71 	 mov r1,#500
 167 0118 FFF7FEFF 	 bl vTaskDelayUntil
 168              	.LVL15:
 258:../UserTasks.c **** 	}
 169              	 .loc 1 258 0 discriminator 1
 170 011c 7FE7     	 b .L2
 171              	.L6:
 172 011e 00BF     	 .align 2
 173              	.L5:
 174 0120 00000000 	 .word .LANCHOR0
 175 0124 00000000 	 .word .LANCHOR1
 176 0128 00000000 	 .word GUI_Font16B_1
 177 012c 80FFFF00 	 .word 16777088
 178 0130 67666666 	 .word 1717986919
 179 0134 00000000 	 .word .LC0
 180 0138 0C000000 	 .word .LC1
 181 013c 14000000 	 .word .LC2
 182 0140 1C000000 	 .word .LC3
 183              	 .cfi_endproc
 184              	.LFE402:
 186              	 .global __aeabi_l2f
 187              	 .global __aeabi_f2d
 188              	 .global __aeabi_dadd
 189              	 .global __aeabi_dmul
 190              	 .global __aeabi_d2f
 191              	 .section .text.controlTask,"ax",%progbits
 192              	 .align 2
 193              	 .thumb
 194              	 .thumb_func
 196              	controlTask:
 197              	.LFB401:
  46:../UserTasks.c **** 	static TickType_t prev_wake_time;
 198              	 .loc 1 46 0
 199              	 .cfi_startproc
 200              	 
 201              	 
 202 0000 2DE9F04F 	 push {r4,r5,r6,r7,r8,r9,r10,fp,lr}
 203              	.LCFI3:
 204              	 .cfi_def_cfa_offset 36
 205              	 .cfi_offset 4,-36
 206              	 .cfi_offset 5,-32
 207              	 .cfi_offset 6,-28
 208              	 .cfi_offset 7,-24
 209              	 .cfi_offset 8,-20
 210              	 .cfi_offset 9,-16
 211              	 .cfi_offset 10,-12
 212              	 .cfi_offset 11,-8
 213              	 .cfi_offset 14,-4
 214 0004 2DED068B 	 fstmfdd sp!,{d8,d9,d10}
 215              	.LCFI4:
 216              	 .cfi_def_cfa_offset 60
 217              	 .cfi_offset 80,-60
 218              	 .cfi_offset 81,-56
 219              	 .cfi_offset 82,-52
 220              	 .cfi_offset 83,-48
 221              	 .cfi_offset 84,-44
 222              	 .cfi_offset 85,-40
 223 0008 8FB0     	 sub sp,sp,#60
 224              	.LCFI5:
 225              	 .cfi_def_cfa_offset 120
  84:../UserTasks.c **** 
 226              	 .loc 1 84 0
 227 000a FFF7FEFF 	 bl setupFuzzyController
 228              	.LVL16:
 229 000e A44B     	 ldr r3,.L25
 230 0010 A44A     	 ldr r2,.L25+4
 231              	.LBB27:
 232              	.LBB28:
 233              	.LBB29:
 234              	 .file 2 "C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc/xmc_gpio.h"
   1:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** /**
   2:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @file xmc_gpio.h
   3:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @date 2015-06-20
   4:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
   5:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @cond
   6:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
   7:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * XMClib v2.1.16 - XMC Peripheral Driver Library 
   8:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
   9:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * Copyright (c) 2015-2017, Infineon Technologies AG
  10:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * All rights reserved.                        
  11:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *                                             
  12:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * following conditions are met:   
  14:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *                                                                              
  15:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * disclaimer.                        
  17:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * 
  18:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * 
  21:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * products derived from this software without specific prior written permission.                  
  23:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *                                                                              
  24:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *                                                                              
  32:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
  35:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  36:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * Change History
  37:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * --------------
  38:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  39:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * 2015-02-20:
  40:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Initial draft<br>
  41:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Documentation improved <br>
  42:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *      
  43:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * 2015-06-20:
  44:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  45:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  46:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @endcond
  47:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  48:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  49:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** 
  50:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** #ifndef XMC_GPIO_H
  51:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_H
  52:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** 
  53:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
  54:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * HEADER FILES
  55:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
  56:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** 
  57:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc_common.h"
  58:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** 
  59:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** /**
  60:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @addtogroup XMClib XMC Peripheral Library
  61:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @{
  62:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  63:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** 
  64:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** /**
  65:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @addtogroup GPIO
  66:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @brief General Purpose Input Output (GPIO) driver for the XMC microcontroller family.
  67:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  68:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * GPIO driver provide a generic and very flexible software interface for all standard digital I/O 
  69:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * Each port slice has individual interfaces for the operation as General Purpose I/O and it furthe
  70:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * connectivity to the on-chip periphery and the control for the pad characteristics. 
  71:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  72:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * The driver is divided into Input and Output mode.
  73:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  74:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * Input mode features:
  75:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Configuration structure XMC_GPIO_CONFIG_t and initialization function XMC_GPIO_Init()
  76:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of weak pull-up or pull-down device. Configuration structure XMC_GPIO_MO
  77:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC1
  78:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of input hysteresis. XMC_GPIO_SetInputHysteresis()
  79:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
  80:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  81:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * 
  82:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * Output mode features:
  83:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of push pull/open drain and Alternate output. Configuration structure XM
  84:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC4
  85:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of pad driver strength. Configuration structure XMC_GPIO_OUTPUT_STRENGTH
  86:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
  87:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  88:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of initial output level. Configuration structure XMC_GPIO_OUTPUT_LEVEL_t
  89:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  90:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *@{
  91:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  92:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  
  93:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
  94:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * MACROS
  95:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
  96:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** 
  97:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Pos PORT0_IOCR0_PC0_Pos
  98:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Msk PORT0_IOCR0_PC0_Msk
  99:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 100:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Size 				(8U)
 101:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** 											
 102:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 103:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_CHECK_OUTPUT_LEVEL(level) ((level == XMC_GPIO_OUTPUT_LEVEL_LOW) || \
 104:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****                                             (level == XMC_GPIO_OUTPUT_LEVEL_HIGH))
 105:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****                                             
 106:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_CHECK_HWCTRL(hwctrl) ((hwctrl == XMC_GPIO_HWCTRL_DISABLED) || \
 107:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****                                        (hwctrl == XMC_GPIO_HWCTRL_PERIPHERAL1) || \
 108:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****                                        (hwctrl == XMC_GPIO_HWCTRL_PERIPHERAL2))                    
 109:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****                                             
 110:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 111:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * ENUMS
 112:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 113:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 114:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 115:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 116:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * Defines output level of a pin. Use type \a XMC_GPIO_OUTPUT_LEVEL_t for this enum.
 117:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 118:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** typedef enum XMC_GPIO_OUTPUT_LEVEL
 119:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** {
 120:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_OUTPUT_LEVEL_LOW  = 0x10000U, /**<  Reset bit */
 121:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_OUTPUT_LEVEL_HIGH = 0x1U, 	/**< Set bit  */
 122:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** } XMC_GPIO_OUTPUT_LEVEL_t;
 123:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 124:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 125:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * Defines direct hardware control characteristics of the pin . Use type \a XMC_GPIO_HWCTRL_t for t
 126:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 127:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** typedef enum XMC_GPIO_HWCTRL
 128:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** {
 129:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_DISABLED     = 0x0U, /**<  Software control only */
 130:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_PERIPHERAL1  = 0x1U, /**<  HWI0/HWO0 control path can override the software confi
 131:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_PERIPHERAL2  = 0x2U  /**<  HWI1/HWO1 control path can override the software confi
 132:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** } XMC_GPIO_HWCTRL_t;
 133:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 134:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 135:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * DEVICE FAMILY EXTENSIONS
 136:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 137:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 138:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  #if UC_FAMILY == XMC1
 139:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc1_gpio.h"
 140:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** #elif UC_FAMILY == XMC4
 141:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc4_gpio.h"
 142:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** #else
 143:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** #error "xmc_gpio.h: family device not supported"
 144:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** #endif
 145:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 146:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 147:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * API PROTOTYPES
 148:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 149:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 150:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** #ifdef __cplusplus
 151:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** extern "C" {
 152:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** #endif
 153:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 154:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 155:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 156:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	  Constant pointer pointing to GPIO port, to access port registers like Pn_OUT,Pn_O
 157:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	  Port pin number.
 158:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  config GPIO configuration data structure. Refer data structure @ref XMC_GPIO_CONFIG_t fo
 159:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 160:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 161:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 162:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 163:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC1
 164:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * Initializes input / output mode settings like, pull up / pull down devices,hysteresis, push pull
 165:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * Also configures alternate function outputs and clears hardware port control for a selected \a po
 166:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * \a config provides selected I/O settings. It configures hardware registers Pn_IOCR,Pn_OUT, Pn_OM
 167:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
 168:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC4
 169:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * Initializes input / output mode settings like, pull up / pull down devices,push pull /open drain
 170:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * Also configures alternate function outputs and clears hardware port control for selected \a port
 171:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * It configures hardware registers Pn_IOCR,Pn_OUT,Pn_OMR,Pn_PDISC and Pn_PDR.\n
 172:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
 173:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 174:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 175:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *  None
 176:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 177:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 178:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * This API is called in definition of DAVE_init by code generation and therefore should not be exp
 179:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * for the normal operation. Use other APIs only after DAVE_init is called successfully (returns DA
 180:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 181:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 182:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 183:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 184:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  
 185:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** void XMC_GPIO_Init(XMC_GPIO_PORT_t *const port, const uint8_t pin, const XMC_GPIO_CONFIG_t *const c
 186:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  
 187:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 188:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 189:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	Constant pointer pointing to GPIO port, to access hardware register Pn_IOCR.
 190:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	Port pin number.
 191:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  mode input / output functionality selection. Refer @ref XMC_GPIO_MODE_t for valid values
 192:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 193:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 194:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 195:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 196:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * Sets digital input and output driver functionality and characteristics of a GPIO port pin. It co
 197:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * registers Pn_IOCR. \a mode is initially configured during initialization in XMC_GPIO_Init(). Cal
 198:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * the port direction functionality as needed later in the program.
 199:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 200:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 201:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *  None
 202:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 203:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 204:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 205:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** void XMC_GPIO_SetMode(XMC_GPIO_PORT_t *const port, const uint8_t pin, const XMC_GPIO_MODE_t mode);
 206:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 207:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 208:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 209:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 210:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	 Constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 211:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	 Port pin number.
 212:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  level output level selection. Refer @ref XMC_GPIO_OUTPUT_LEVEL_t for valid values.
 213:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 214:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 215:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 216:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 217:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * Set port pin output level to high or low.It configures hardware registers Pn_OMR.\a level is ini
 218:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * configured during initialization in XMC_GPIO_Init(). Call this API to alter output level as need
 219:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 220:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 221:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *  XMC_GPIO_SetOutputHigh(), XMC_GPIO_SetOutputLow().
 222:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 223:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 224:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().
 225:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 226:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 227:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 228:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 229:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputLevel(XMC_GPIO_PORT_t *const port, const uint8_t pin, const 
 230:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** {
 231:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLevel: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 232:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLevel: Invalid output level", XMC_GPIO_CHECK_OUTPUT_LEVEL(level));
 233:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****   
 234:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = (uint32_t)level << pin;
 235:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** }
 236:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 237:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 238:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 239:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 240:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	Port pin number.
 241:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 242:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 243:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 244:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 245:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *  Sets port pin output to high. It configures hardware registers Pn_OMR.
 246:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 247:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *  \par<b>Related APIs:</b><BR>
 248:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *  XMC_GPIO_SetOutputLow()
 249:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 250:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 251:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().\n
 252:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * Register Pn_OMR is virtual and does not contain any flip-flop. A read action delivers the value 
 253:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 254:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 255:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 256:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputHigh(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 257:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** {
 258:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputHigh: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 259:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 260:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = (uint32_t)0x1U << pin;
 235              	 .loc 2 260 0
 236 0012 1C7C     	 ldrb r4,[r3,#16]
 237 0014 1B68     	 ldr r3,[r3]
 238              	.LBE29:
 239              	.LBE28:
 240              	.LBE27:
 241              	.LBB34:
 242              	.LBB35:
 243              	.LBB36:
 244 0016 92F810E0 	 ldrb lr,[r2,#16]
 245 001a 1168     	 ldr r1,[r2]
 246              	.LVL17:
 247              	.LBE36:
 248              	.LBE35:
 249              	.LBE34:
  91:../UserTasks.c **** 	PWM_CCU8_SetDutyCycleSymmetric(&PWM_CCU8_0,XMC_CCU8_SLICE_COMPARE_CHANNEL_1, 50*100);
 250              	 .loc 1 91 0
 251 001c A248     	 ldr r0,.L25+8
 252 001e DFF8ECA2 	 ldr r10,.L25+108
 253 0022 DFF8AC92 	 ldr r9,.L25+48
 254 0026 DFF8E882 	 ldr r8,.L25+112
 255 002a A04F     	 ldr r7,.L25+12
 256 002c A04E     	 ldr r6,.L25+16
 257 002e DFF8B8B2 	 ldr fp,.L25+72
 258              	.LBB41:
 117:../UserTasks.c **** 		motor_speed = (motor_speed / ((float)full_rotation_counts)) * 60.0F;
 259              	 .loc 1 117 0
 260 0032 DFEDA09A 	 flds s19,.L25+20
 118:../UserTasks.c **** 
 261              	 .loc 1 118 0
 262 0036 9FEDA09A 	 flds s18,.L25+24
 263 003a 9FEDA0AA 	 flds s20,.L25+28
 141:../UserTasks.c **** 			// Force speed setting so that the user can read it back
 264              	 .loc 1 141 0
 265 003e DFEDA08A 	 flds s17,.L25+32
 266 0042 1D46     	 mov r5,r3
 267              	.LVL18:
 268              	.LBE41:
 269              	.LBB48:
 270              	.LBB39:
 271              	.LBB37:
 272              	 .loc 2 260 0
 273 0044 0123     	 movs r3,#1
 274              	.LVL19:
 275 0046 03FA0EF2 	 lsl r2,r3,lr
 276              	.LBE37:
 277              	.LBE39:
 278              	.LBE48:
 279              	.LBB49:
 280              	.LBB32:
 281              	.LBB30:
 282 004a 03FA04F4 	 lsl r4,r3,r4
 283              	.LBE30:
 284              	.LBE32:
 285              	.LBE49:
 286              	.LBB50:
 287              	.LBB40:
 288              	.LBB38:
 289 004e 4A60     	 str r2,[r1,#4]
 290              	.LBE38:
 291              	.LBE40:
 292              	.LBE50:
 293              	.LBB51:
 294              	.LBB33:
 295              	.LBB31:
 296 0050 6C60     	 str r4,[r5,#4]
 297 0052 0493     	 str r3,[sp,#16]
 298              	.LBE31:
 299              	.LBE33:
 300              	.LBE51:
  91:../UserTasks.c **** 	PWM_CCU8_SetDutyCycleSymmetric(&PWM_CCU8_0,XMC_CCU8_SLICE_COMPARE_CHANNEL_1, 50*100);
 301              	 .loc 1 91 0
 302 0054 FFF7FEFF 	 bl PWM_CCU8_Start
 303              	.LVL20:
  92:../UserTasks.c **** 
 304              	 .loc 1 92 0
 305 0058 0021     	 movs r1,#0
 306 005a 41F28832 	 movw r2,#5000
 307 005e 9248     	 ldr r0,.L25+8
 308 0060 FFF7FEFF 	 bl PWM_CCU8_SetDutyCycleSymmetric
 309              	.LVL21:
  95:../UserTasks.c **** 
 310              	 .loc 1 95 0
 311 0064 FFF7FEFF 	 bl xTaskGetTickCount
 312              	.LVL22:
 313 0068 9649     	 ldr r1,.L25+36
 314 006a 049B     	 ldr r3,[sp,#16]
 315 006c 0A7C     	 ldrb r2,[r1,#16]
 316 006e 0C68     	 ldr r4,[r1]
 317 0070 DFF884E2 	 ldr lr,.L25+88
 318 0074 0494     	 str r4,[sp,#16]
 319 0076 9340     	 lsls r3,r3,r2
 320 0078 4FF48031 	 mov r1,#65536
 321 007c 0593     	 str r3,[sp,#20]
 322 007e 01FA02F3 	 lsl r3,r1,r2
 323 0082 CEF80000 	 str r0,[lr]
 324 0086 0693     	 str r3,[sp,#24]
 325 0088 2246     	 mov r2,r4
 326 008a 98E0     	 b .L16
 327              	.LVL23:
 328              	.L24:
 329              	.LBB52:
 105:../UserTasks.c **** 			// Overflow
 330              	 .loc 1 105 0 discriminator 1
 331 008c 8E4B     	 ldr r3,.L25+40
 332 008e 9842     	 cmp r0,r3
 333 0090 00F2BB80 	 bhi .L9
 107:../UserTasks.c **** 		} else if((prev_encoder_value < (UINT32_MAX/4)) && (encoder_value > ((UINT32_MAX/4)*3))){
 334              	 .loc 1 107 0
 335 0094 4FF0FF34 	 mov r4,#-1
 336 0098 A41A     	 subs r4,r4,r2
 337 009a 4FF00005 	 mov r5,#0
 338 009e 65F10005 	 sbc r5,r5,#0
 339 00a2 2218     	 adds r2,r4,r0
 340 00a4 45F10003 	 adc r3,r5,#0
 341 00a8 541C     	 adds r4,r2,#1
 342 00aa 43F10005 	 adc r5,r3,#0
 343 00ae 874B     	 ldr r3,.L25+44
 344 00b0 C3E90045 	 strd r4,[r3]
 345              	.L10:
 117:../UserTasks.c **** 		motor_speed = (motor_speed / ((float)full_rotation_counts)) * 60.0F;
 346              	 .loc 1 117 0
 347 00b4 2946     	 mov r1,r5
 348 00b6 2046     	 mov r0,r4
 349 00b8 CDE90245 	 strd r4,[sp,#8]
 350 00bc FFF7FEFF 	 bl __aeabi_l2f
 351              	.LVL24:
 352 00c0 07EE900A 	 fmsr s15,r0
 353 00c4 67EEA97A 	 fmuls s15,s15,s19
 121:../UserTasks.c **** 
 354              	 .loc 1 121 0
 355 00c8 DDE90245 	 ldrd r4,[sp,#8]
 118:../UserTasks.c **** 
 356              	 .loc 1 118 0
 357 00cc C7EE897A 	 fdivs s15,s15,s18
 121:../UserTasks.c **** 
 358              	 .loc 1 121 0
 359 00d0 D8F80000 	 ldr r0,[r8]
 140:../UserTasks.c **** 			current_control_params.speed_ref = fuzzy_out_speed_reference * max_rpm;
 360              	 .loc 1 140 0
 361 00d4 9DF82010 	 ldrb r1,[sp,#32]
 118:../UserTasks.c **** 
 362              	 .loc 1 118 0
 363 00d8 7D4B     	 ldr r3,.L25+48
 121:../UserTasks.c **** 
 364              	 .loc 1 121 0
 365 00da DFF834C2 	 ldr ip,.L25+112
 366 00de 2218     	 adds r2,r4,r0
 367 00e0 C8F80020 	 str r2,[r8]
 118:../UserTasks.c **** 
 368              	 .loc 1 118 0
 369 00e4 67EE8A7A 	 fmuls s15,s15,s20
 370 00e8 C9ED007A 	 fsts s15,[r9]
 140:../UserTasks.c **** 			current_control_params.speed_ref = fuzzy_out_speed_reference * max_rpm;
 371              	 .loc 1 140 0
 372 00ec 0029     	 cmp r1,#0
 373 00ee 40F09380 	 bne .L23
 374              	.L11:
 150:../UserTasks.c **** 
 375              	 .loc 1 150 0
 376 00f2 D7ED006A 	 flds s13,[r7]
 147:../UserTasks.c **** 
 377              	 .loc 1 147 0
 378 00f6 774D     	 ldr r5,.L25+52
 156:../UserTasks.c **** 
 379              	 .loc 1 156 0
 380 00f8 774B     	 ldr r3,.L25+56
 381 00fa 0093     	 str r3,[sp]
 150:../UserTasks.c **** 
 382              	 .loc 1 150 0
 383 00fc 87EEA86A 	 fdivs s12,s15,s17
 156:../UserTasks.c **** 
 384              	 .loc 1 156 0
 385 0100 764B     	 ldr r3,.L25+60
 153:../UserTasks.c **** 		position_error = current_control_params.position_ref - motor_position_normalized;
 386              	 .loc 1 153 0
 387 0102 07EE102A 	 fmsr s14,r2
 150:../UserTasks.c **** 
 388              	 .loc 1 150 0
 389 0106 C6EEA86A 	 fdivs s13,s13,s17
 147:../UserTasks.c **** 
 390              	 .loc 1 147 0
 391 010a 78EE677A 	 fsubs s15,s16,s15
 153:../UserTasks.c **** 		position_error = current_control_params.position_ref - motor_position_normalized;
 392              	 .loc 1 153 0
 393 010e B8EEC77A 	 fsitos s14,s14
 147:../UserTasks.c **** 
 394              	 .loc 1 147 0
 395 0112 C7EEA87A 	 fdivs s15,s15,s17
 153:../UserTasks.c **** 		position_error = current_control_params.position_ref - motor_position_normalized;
 396              	 .loc 1 153 0
 397 0116 87EE097A 	 fdivs s14,s14,s18
 150:../UserTasks.c **** 
 398              	 .loc 1 150 0
 399 011a 76EE666A 	 fsubs s13,s12,s13
 147:../UserTasks.c **** 
 400              	 .loc 1 147 0
 401 011e C5ED007A 	 fsts s15,[r5]
 150:../UserTasks.c **** 
 402              	 .loc 1 150 0
 403 0122 66EEA96A 	 fmuls s13,s13,s19
 154:../UserTasks.c **** 
 404              	 .loc 1 154 0
 405 0126 DDED095A 	 flds s11,[sp,#36]
 150:../UserTasks.c **** 
 406              	 .loc 1 150 0
 407 012a 6D4D     	 ldr r5,.L25+64
 153:../UserTasks.c **** 		position_error = current_control_params.position_ref - motor_position_normalized;
 408              	 .loc 1 153 0
 409 012c 86ED007A 	 fsts s14,[r6]
 154:../UserTasks.c **** 
 410              	 .loc 1 154 0
 411 0130 35EEC76A 	 fsubs s12,s11,s14
 150:../UserTasks.c **** 
 412              	 .loc 1 150 0
 413 0134 C5ED006A 	 fsts s13,[r5]
 154:../UserTasks.c **** 
 414              	 .loc 1 154 0
 415 0138 6A4D     	 ldr r5,.L25+68
 156:../UserTasks.c **** 
 416              	 .loc 1 156 0
 417 013a 17EE900A 	 fmrs r0,s15
 418 013e 16EE102A 	 fmrs r2,s12
 419 0142 16EE901A 	 fmrs r1,s13
 154:../UserTasks.c **** 
 420              	 .loc 1 154 0
 421 0146 85ED006A 	 fsts s12,[r5]
 156:../UserTasks.c **** 
 422              	 .loc 1 156 0
 423 014a FFF7FEFF 	 bl computeFuzzy
 424              	.LVL25:
 158:../UserTasks.c **** 
 425              	 .loc 1 158 0
 426 014e 634B     	 ldr r3,.L25+60
 427 0150 9BED007A 	 flds s14,[fp]
 428 0154 D3ED007A 	 flds s15,[r3]
 429 0158 634B     	 ldr r3,.L25+72
 430 015a 77EE277A 	 fadds s15,s14,s15
 160:../UserTasks.c **** 			fuzzy_sum = 1;
 431              	 .loc 1 160 0
 432 015e B7EE007A 	 fconsts s14,#112
 433 0162 F4EEC77A 	 fcmpes s15,s14
 434 0166 F1EE10FA 	 fmstat
 435 016a 6CDD     	 ble .L21
 161:../UserTasks.c **** 		} else if(fuzzy_sum < -1){
 436              	 .loc 1 161 0
 437 016c 83ED007A 	 fsts s14,[r3]
 438 0170 9FED5E7A 	 flds s14,.L25+76
 439 0174 42F21072 	 movw r2,#10000
 440              	.L14:
 166:../UserTasks.c **** 
 441              	 .loc 1 166 0
 442 0178 5D4B     	 ldr r3,.L25+80
 168:../UserTasks.c **** 
 443              	 .loc 1 168 0
 444 017a 4B48     	 ldr r0,.L25+8
 166:../UserTasks.c **** 
 445              	 .loc 1 166 0
 446 017c 83ED007A 	 fsts s14,[r3]
 168:../UserTasks.c **** 
 447              	 .loc 1 168 0
 448 0180 0021     	 movs r1,#0
 449 0182 FFF7FEFF 	 bl PWM_CCU8_SetDutyCycleSymmetric
 450              	.LVL26:
 177:../UserTasks.c **** 		setMotorData(motor_data);
 451              	 .loc 1 177 0
 452 0186 5A4B     	 ldr r3,.L25+80
 171:../UserTasks.c **** 
 453              	 .loc 1 171 0
 454 0188 D9F800E0 	 ldr lr,[r9]
 177:../UserTasks.c **** 		setMotorData(motor_data);
 455              	 .loc 1 177 0
 456 018c 3268     	 ldr r2,[r6]
 457 018e 1B68     	 ldr r3,[r3]
 458 0190 CDF830E0 	 str lr,[sp,#48]
 459 0194 0D93     	 str r3,[sp,#52]
 460 0196 0B92     	 str r2,[sp,#44]
 178:../UserTasks.c **** 
 461              	 .loc 1 178 0
 462 0198 0BAB     	 add r3,sp,#44
 174:../UserTasks.c **** 
 463              	 .loc 1 174 0
 464 019a 564D     	 ldr r5,.L25+84
 171:../UserTasks.c **** 
 465              	 .loc 1 171 0
 466 019c C7F800E0 	 str lr,[r7]
 178:../UserTasks.c **** 
 467              	 .loc 1 178 0
 468 01a0 93E80700 	 ldmia r3,{r0,r1,r2}
 174:../UserTasks.c **** 
 469              	 .loc 1 174 0
 470 01a4 DAF80030 	 ldr r3,[r10]
 471 01a8 2B60     	 str r3,[r5]
 178:../UserTasks.c **** 
 472              	 .loc 1 178 0
 473 01aa FFF7FEFF 	 bl setMotorData
 474              	.LVL27:
 475              	.LBB42:
 476              	.LBB43:
 477              	.LBB44:
 261:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** }
 262:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 263:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 264:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 265:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 266:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	port pin number.
 267:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 268:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return  None
 269:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 270:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *\par<b>Description:</b><br>
 271:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * Sets port pin output to low. It configures hardware registers Pn_OMR.\n
 272:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 273:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>>
 274:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * XMC_GPIO_SetOutputHigh()
 275:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 276:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *\par<b>Note:</b><br>
 277:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().
 278:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * Register Pn_OMR is virtual and does not contain any flip-flop. A read action delivers the value 
 279:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 280:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 281:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 282:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputLow(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 283:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** {
 284:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLow: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 285:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 286:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = 0x10000U << pin;
 478              	 .loc 2 286 0
 479 01ae 049A     	 ldr r2,[sp,#16]
 480 01b0 069B     	 ldr r3,[sp,#24]
 481 01b2 5360     	 str r3,[r2,#4]
 482              	.LBE44:
 483              	.LBE43:
 484              	.LBE42:
 181:../UserTasks.c **** 	}
 485              	 .loc 1 181 0
 486 01b4 5048     	 ldr r0,.L25+88
 487 01b6 0521     	 movs r1,#5
 488 01b8 FFF7FEFF 	 bl vTaskDelayUntil
 489              	.LVL28:
 490 01bc 049A     	 ldr r2,[sp,#16]
 491              	.LVL29:
 492              	.L16:
 493              	.LBB45:
 494              	.LBB46:
 495              	.LBB47:
 260:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** }
 496              	 .loc 2 260 0
 497 01be 059B     	 ldr r3,[sp,#20]
 498 01c0 5360     	 str r3,[r2,#4]
 499              	.LBE47:
 500              	.LBE46:
 501              	.LBE45:
 100:../UserTasks.c **** 
 502              	 .loc 1 100 0
 503 01c2 08A8     	 add r0,sp,#32
 504 01c4 FFF7FEFF 	 bl getControlParams
 505              	.LVL30:
 506 01c8 9DED0A8A 	 flds s16,[sp,#40]
 507              	.LVL31:
 102:../UserTasks.c **** 
 508              	 .loc 1 102 0
 509 01cc FFF7FEFF 	 bl getEncoderValue
 510              	.LVL32:
 105:../UserTasks.c **** 			// Overflow
 511              	 .loc 1 105 0
 512 01d0 484B     	 ldr r3,.L25+84
 102:../UserTasks.c **** 
 513              	 .loc 1 102 0
 514 01d2 CAF80000 	 str r0,[r10]
 105:../UserTasks.c **** 			// Overflow
 515              	 .loc 1 105 0
 516 01d6 1A68     	 ldr r2,[r3]
 517 01d8 484B     	 ldr r3,.L25+92
 518 01da 9A42     	 cmp r2,r3
 519 01dc 3FF656AF 	 bhi .L24
 108:../UserTasks.c **** 			// Underflow
 520              	 .loc 1 108 0
 521 01e0 3949     	 ldr r1,.L25+40
 522 01e2 8A42     	 cmp r2,r1
 523 01e4 11D8     	 bhi .L9
 108:../UserTasks.c **** 			// Underflow
 524              	 .loc 1 108 0 is_stmt 0 discriminator 1
 525 01e6 9842     	 cmp r0,r3
 526 01e8 0FD9     	 bls .L9
 110:../UserTasks.c **** 		} else {
 527              	 .loc 1 110 0 is_stmt 1
 528 01ea 4FF0FF34 	 mov r4,#-1
 529 01ee 241A     	 subs r4,r4,r0
 530 01f0 4FF00005 	 mov r5,#0
 531 01f4 65F10005 	 sbc r5,r5,#0
 532 01f8 A018     	 adds r0,r4,r2
 533 01fa 45F10001 	 adc r1,r5,#0
 534 01fe 334B     	 ldr r3,.L25+44
 535 0200 C443     	 mvns r4,r0
 536 0202 CD43     	 mvns r5,r1
 537 0204 C3E90045 	 strd r4,[r3]
 538 0208 54E7     	 b .L10
 539              	.L9:
 113:../UserTasks.c **** 		}
 540              	 .loc 1 113 0
 541 020a 841A     	 subs r4,r0,r2
 542 020c 2F4B     	 ldr r3,.L25+44
 543 020e 60EB0005 	 sbc r5,r0,r0
 544 0212 C3E90045 	 strd r4,[r3]
 545 0216 4DE7     	 b .L10
 546              	.L23:
 547 0218 0293     	 str r3,[sp,#8]
 141:../UserTasks.c **** 			// Force speed setting so that the user can read it back
 548              	 .loc 1 141 0
 549 021a 2F4B     	 ldr r3,.L25+56
 550 021c CDF81CC0 	 str ip,[sp,#28]
 551 0220 93ED008A 	 flds s16,[r3]
 552              	.LVL33:
 553 0224 28EE288A 	 fmuls s16,s16,s17
 554              	.LVL34:
 143:../UserTasks.c **** 		}
 555              	 .loc 1 143 0
 556 0228 08AB     	 add r3,sp,#32
 557 022a 8DED0A8A 	 fsts s16,[sp,#40]
 558 022e 93E80700 	 ldmia r3,{r0,r1,r2}
 559 0232 FFF7FEFF 	 bl setControlParams
 560              	.LVL35:
 561 0236 DDF81CC0 	 ldr ip,[sp,#28]
 562 023a 029B     	 ldr r3,[sp,#8]
 563 023c DCF80020 	 ldr r2,[ip]
 564 0240 D3ED007A 	 flds s15,[r3]
 565 0244 55E7     	 b .L11
 566              	.L21:
 162:../UserTasks.c **** 			fuzzy_sum = -1;
 567              	 .loc 1 162 0
 568 0246 FFEE006A 	 fconsts s13,#240
 569 024a F4EEE67A 	 fcmpes s15,s13
 570 024e F1EE10FA 	 fmstat
 571 0252 1ED4     	 bmi .L15
 572 0254 B6EE007A 	 fconsts s14,#96
 573 0258 27EE877A 	 fmuls s14,s15,s14
 158:../UserTasks.c **** 
 574              	 .loc 1 158 0
 575 025c C3ED007A 	 fsts s15,[r3]
 576 0260 17EE100A 	 fmrs r0,s14
 577 0264 FFF7FEFF 	 bl __aeabi_f2d
 578              	.LVL36:
 579 0268 0022     	 movs r2,#0
 580 026a 254B     	 ldr r3,.L25+96
 581 026c FFF7FEFF 	 bl __aeabi_dadd
 582              	.LVL37:
 583 0270 0022     	 movs r2,#0
 584 0272 244B     	 ldr r3,.L25+100
 585 0274 FFF7FEFF 	 bl __aeabi_dmul
 586              	.LVL38:
 587 0278 FFF7FEFF 	 bl __aeabi_d2f
 588              	.LVL39:
 589 027c DFED1B7A 	 flds s15,.L25+76
 590 0280 07EE100A 	 fmsr s14,r0
 591 0284 67EE277A 	 fmuls s15,s14,s15
 592 0288 FCEEE77A 	 ftouizs s15,s15
 593 028c 17EE902A 	 fmrs r2,s15
 594 0290 72E7     	 b .L14
 595              	.L15:
 163:../UserTasks.c **** 		}
 596              	 .loc 1 163 0
 597 0292 9FED1D7A 	 flds s14,.L25+104
 598 0296 C3ED006A 	 fsts s13,[r3]
 599 029a 0022     	 movs r2,#0
 600 029c 6CE7     	 b .L14
 601              	.L26:
 602 029e 00BF     	 .align 2
 603              	.L25:
 604 02a0 00000000 	 .word INH_2
 605 02a4 00000000 	 .word INH_1
 606 02a8 00000000 	 .word PWM_CCU8_0
 607 02ac 00000000 	 .word .LANCHOR10
 608 02b0 00000000 	 .word .LANCHOR12
 609 02b4 00004843 	 .word 1128792064
 610 02b8 00409C45 	 .word 1167867904
 611 02bc 00007042 	 .word 1114636288
 612 02c0 00008743 	 .word 1132920832
 613 02c4 00000000 	 .word TEST_PIN
 614 02c8 FEFFFF3F 	 .word 1073741822
 615 02cc 00000000 	 .word .LANCHOR5
 616 02d0 00000000 	 .word .LANCHOR6
 617 02d4 00000000 	 .word .LANCHOR9
 618 02d8 00000000 	 .word .LANCHOR8
 619 02dc 00000000 	 .word .LANCHOR14
 620 02e0 00000000 	 .word .LANCHOR11
 621 02e4 00000000 	 .word .LANCHOR13
 622 02e8 00000000 	 .word .LANCHOR15
 623 02ec 0000C842 	 .word 1120403456
 624 02f0 00000000 	 .word .LANCHOR16
 625 02f4 00000000 	 .word .LANCHOR4
 626 02f8 00000000 	 .word .LANCHOR2
 627 02fc FDFFFFBF 	 .word -1073741827
 628 0300 0000E03F 	 .word 1071644672
 629 0304 00005940 	 .word 1079574528
 630 0308 00000000 	 .word 0
 631 030c 00000000 	 .word .LANCHOR3
 632 0310 00000000 	 .word .LANCHOR7
 633              	.LBE52:
 634              	 .cfi_endproc
 635              	.LFE401:
 637              	 .section .text.startTasks,"ax",%progbits
 638              	 .align 2
 639              	 .global startTasks
 640              	 .thumb
 641              	 .thumb_func
 643              	startTasks:
 644              	.LFB400:
  38:../UserTasks.c **** 
 645              	 .loc 1 38 0
 646              	 .cfi_startproc
 647              	 
 648              	 
 649 0000 70B5     	 push {r4,r5,r6,lr}
 650              	.LCFI6:
 651              	 .cfi_def_cfa_offset 16
 652              	 .cfi_offset 4,-16
 653              	 .cfi_offset 5,-12
 654              	 .cfi_offset 6,-8
 655              	 .cfi_offset 14,-4
  40:../UserTasks.c **** 	xTaskCreate((void*) lcdTask, 	 "LCD Task", 	 task_stacks[lcdTaskEnum], 	   NULL, task_priorities[l
 656              	 .loc 1 40 0
 657 0002 0C4D     	 ldr r5,.L29
 658 0004 0C4E     	 ldr r6,.L29+4
 659 0006 2B68     	 ldr r3,[r5]
 660 0008 0C4C     	 ldr r4,.L29+8
 661 000a 3288     	 ldrh r2,[r6]
 662 000c 0C49     	 ldr r1,.L29+12
 663 000e 0D48     	 ldr r0,.L29+16
  38:../UserTasks.c **** 
 664              	 .loc 1 38 0
 665 0010 82B0     	 sub sp,sp,#8
 666              	.LCFI7:
 667              	 .cfi_def_cfa_offset 24
  40:../UserTasks.c **** 	xTaskCreate((void*) lcdTask, 	 "LCD Task", 	 task_stacks[lcdTaskEnum], 	   NULL, task_priorities[l
 668              	 .loc 1 40 0
 669 0012 8DE81800 	 stmia sp,{r3,r4}
 670 0016 0023     	 movs r3,#0
 671 0018 FFF7FEFF 	 bl xTaskCreate
 672              	.LVL40:
  41:../UserTasks.c **** 
 673              	 .loc 1 41 0
 674 001c 0434     	 adds r4,r4,#4
 675 001e 6B68     	 ldr r3,[r5,#4]
 676 0020 0093     	 str r3,[sp]
 677 0022 7288     	 ldrh r2,[r6,#2]
 678 0024 0194     	 str r4,[sp,#4]
 679 0026 0849     	 ldr r1,.L29+20
 680 0028 0848     	 ldr r0,.L29+24
 681 002a 0023     	 movs r3,#0
 682 002c FFF7FEFF 	 bl xTaskCreate
 683              	.LVL41:
  43:../UserTasks.c **** 
 684              	 .loc 1 43 0
 685 0030 02B0     	 add sp,sp,#8
 686              	.LCFI8:
 687              	 .cfi_def_cfa_offset 16
 688              	 
 689 0032 70BD     	 pop {r4,r5,r6,pc}
 690              	.L30:
 691              	 .align 2
 692              	.L29:
 693 0034 00000000 	 .word .LANCHOR18
 694 0038 00000000 	 .word .LANCHOR17
 695 003c 00000000 	 .word task_handlers
 696 0040 28000000 	 .word .LC4
 697 0044 00000000 	 .word controlTask
 698 0048 38000000 	 .word .LC5
 699 004c 00000000 	 .word lcdTask
 700              	 .cfi_endproc
 701              	.LFE400:
 703              	 .comm task_handlers,8,4
 704              	 .global task_priorities
 705              	 .global task_stacks
 706              	 .section .bss.prev_encoder_value.15193,"aw",%nobits
 707              	 .align 2
 708              	 .set .LANCHOR4,.+0
 711              	prev_encoder_value.15193:
 712 0000 00000000 	 .space 4
 713              	 .section .bss.fuzzy_out_pwm_increment.15202,"aw",%nobits
 714              	 .align 2
 715              	 .set .LANCHOR14,.+0
 718              	fuzzy_out_pwm_increment.15202:
 719 0000 00000000 	 .space 4
 720              	 .section .bss.motor_position.15197,"aw",%nobits
 721              	 .align 2
 722              	 .set .LANCHOR7,.+0
 725              	motor_position.15197:
 726 0000 00000000 	 .space 4
 727              	 .section .bss.motor_speed.15195,"aw",%nobits
 728              	 .align 2
 729              	 .set .LANCHOR6,.+0
 732              	motor_speed.15195:
 733 0000 00000000 	 .space 4
 734              	 .section .bss.prev_motor_speed.15196,"aw",%nobits
 735              	 .align 2
 736              	 .set .LANCHOR10,.+0
 739              	prev_motor_speed.15196:
 740 0000 00000000 	 .space 4
 741              	 .section .data.task_priorities,"aw",%progbits
 742              	 .align 2
 743              	 .set .LANCHOR18,.+0
 746              	task_priorities:
 747 0000 02000000 	 .word 2
 748 0004 01000000 	 .word 1
 749              	 .section .bss.fuzzy_sum.15204,"aw",%nobits
 750              	 .align 2
 751              	 .set .LANCHOR15,.+0
 754              	fuzzy_sum.15204:
 755 0000 00000000 	 .space 4
 756              	 .section .bss.fuzzy_out_speed_reference.15203,"aw",%nobits
 757              	 .align 2
 758              	 .set .LANCHOR8,.+0
 761              	fuzzy_out_speed_reference.15203:
 762 0000 00000000 	 .space 4
 763              	 .section .bss.encoder_value_diff.15194,"aw",%nobits
 764              	 .align 3
 765              	 .set .LANCHOR5,.+0
 768              	encoder_value_diff.15194:
 769 0000 00000000 	 .space 8
 769      00000000 
 770              	 .section .bss.prev_wake_time.15212,"aw",%nobits
 771              	 .align 2
 772              	 .set .LANCHOR0,.+0
 775              	prev_wake_time.15212:
 776 0000 00000000 	 .space 4
 777              	 .section .bss.encoder_value.15192,"aw",%nobits
 778              	 .align 2
 779              	 .set .LANCHOR3,.+0
 782              	encoder_value.15192:
 783 0000 00000000 	 .space 4
 784              	 .section .data.task_stacks,"aw",%progbits
 785              	 .align 2
 786              	 .set .LANCHOR17,.+0
 789              	task_stacks:
 790 0000 8200     	 .short 130
 791 0002 E600     	 .short 230
 792              	 .section .bss.fuzzy_pwm.15205,"aw",%nobits
 793              	 .align 2
 794              	 .set .LANCHOR16,.+0
 797              	fuzzy_pwm.15205:
 798 0000 00000000 	 .space 4
 799              	 .section .rodata.str1.4,"aMS",%progbits,1
 800              	 .align 2
 801              	.LC0:
 802 0000 506F7369 	 .ascii "Position:\000"
 802      74696F6E 
 802      3A00
 803 000a 0000     	 .space 2
 804              	.LC1:
 805 000c 53706565 	 .ascii "Speed:\000"
 805      643A00
 806 0013 00       	 .space 1
 807              	.LC2:
 808 0014 50574D3A 	 .ascii "PWM:\000"
 808      00
 809 0019 000000   	 .space 3
 810              	.LC3:
 811 001c 256C642E 	 .ascii "%ld.%ld    \000"
 811      256C6420 
 811      20202000 
 812              	.LC4:
 813 0028 436F6E74 	 .ascii "Control Task\000"
 813      726F6C20 
 813      5461736B 
 813      00
 814 0035 000000   	 .space 3
 815              	.LC5:
 816 0038 4C434420 	 .ascii "LCD Task\000"
 816      5461736B 
 816      00
 817 0041 000000   	 .section .bss.motor_position_normalized.15198,"aw",%nobits
 818              	 .align 2
 819              	 .set .LANCHOR12,.+0
 822              	motor_position_normalized.15198:
 823 0000 00000000 	 .space 4
 824              	 .section .bss.position_error.15201,"aw",%nobits
 825              	 .align 2
 826              	 .set .LANCHOR13,.+0
 829              	position_error.15201:
 830 0000 00000000 	 .space 4
 831              	 .section .bss.motor_data.15213,"aw",%nobits
 832              	 .align 2
 833              	 .set .LANCHOR1,.+0
 836              	motor_data.15213:
 837 0000 00000000 	 .space 12
 837      00000000 
 837      00000000 
 838              	 .section .bss.speed_error.15199,"aw",%nobits
 839              	 .align 2
 840              	 .set .LANCHOR9,.+0
 843              	speed_error.15199:
 844 0000 00000000 	 .space 4
 845              	 .section .bss.accel.15200,"aw",%nobits
 846              	 .align 2
 847              	 .set .LANCHOR11,.+0
 850              	accel.15200:
 851 0000 00000000 	 .space 4
 852              	 .section .bss.prev_wake_time.15188,"aw",%nobits
 853              	 .align 2
 854              	 .set .LANCHOR2,.+0
 857              	prev_wake_time.15188:
 858 0000 00000000 	 .space 4
 859              	 .text
 860              	.Letext0:
 861              	 .file 3 "c:\\dave 4\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 862              	 .file 4 "c:\\dave 4\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 863              	 .file 5 "C:/Workspaces/Dave 4/CTPOT_test1/Libraries/CMSIS/Infineon/XMC4700_series/Include/XMC4700.h"
 864              	 .file 6 "C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc/xmc4_gpio.h"
 865              	 .file 7 "C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/DIGITAL_IO/digital_io.h"
 866              	 .file 8 "C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc/xmc4_scu.h"
 867              	 .file 9 "C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc/xmc_usic.h"
 868              	 .file 10 "C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/FREERTOS/projdefs.h"
 869              	 .file 11 "C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/FREERTOS/portmacro.h"
 870              	 .file 12 "C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/FREERTOS/task.h"
 871              	 .file 13 "c:\\dave 4\\eclipse\\emwin\\start\\gui\\inc\\LCD.h"
 872              	 .file 14 "c:\\dave 4\\eclipse\\emwin\\start\\gui\\inc\\GUI_Type.h"
 873              	 .file 15 "C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc/xmc_ccu8.h"
 874              	 .file 16 "C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/GLOBAL_CCU8/global_ccu8.h"
 875              	 .file 17 "C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/PWM_CCU8/pwm_ccu8.h"
 876              	 .file 18 "../SharedData.h"
 877              	 .file 19 "C:/Workspaces/Dave 4/CTPOT_test1/Libraries/CMSIS/Include/core_cm4.h"
 878              	 .file 20 "C:/Workspaces/Dave 4/CTPOT_test1/Libraries/CMSIS/Infineon/XMC4700_series/Include/system_XMC4700.h"
 879              	 .file 21 "C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/DIGITAL_IO/digital_io_extern.h"
 880              	 .file 22 "c:\\dave 4\\eclipse\\emwin\\start\\gui\\inc\\gui.h"
 881              	 .file 23 "C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/PWM_CCU8/pwm_ccu8_extern.h"
 882              	 .file 24 "c:\\dave 4\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdio.h"
 883              	 .file 25 "../FuzzyController.h"
 884              	 .file 26 "../Encoder.h"
DEFINED SYMBOLS
                            *ABS*:00000000 UserTasks.c
    {standard input}:20     .text.lcdTask:00000000 $t
    {standard input}:24     .text.lcdTask:00000000 lcdTask
    {standard input}:174    .text.lcdTask:00000120 $d
    {standard input}:192    .text.controlTask:00000000 $t
    {standard input}:196    .text.controlTask:00000000 controlTask
    {standard input}:604    .text.controlTask:000002a0 $d
    {standard input}:638    .text.startTasks:00000000 $t
    {standard input}:643    .text.startTasks:00000000 startTasks
    {standard input}:693    .text.startTasks:00000034 $d
                            *COM*:00000008 task_handlers
    {standard input}:746    .data.task_priorities:00000000 task_priorities
    {standard input}:789    .data.task_stacks:00000000 task_stacks
    {standard input}:707    .bss.prev_encoder_value.15193:00000000 $d
    {standard input}:711    .bss.prev_encoder_value.15193:00000000 prev_encoder_value.15193
    {standard input}:714    .bss.fuzzy_out_pwm_increment.15202:00000000 $d
    {standard input}:718    .bss.fuzzy_out_pwm_increment.15202:00000000 fuzzy_out_pwm_increment.15202
    {standard input}:721    .bss.motor_position.15197:00000000 $d
    {standard input}:725    .bss.motor_position.15197:00000000 motor_position.15197
    {standard input}:728    .bss.motor_speed.15195:00000000 $d
    {standard input}:732    .bss.motor_speed.15195:00000000 motor_speed.15195
    {standard input}:735    .bss.prev_motor_speed.15196:00000000 $d
    {standard input}:739    .bss.prev_motor_speed.15196:00000000 prev_motor_speed.15196
    {standard input}:742    .data.task_priorities:00000000 $d
    {standard input}:750    .bss.fuzzy_sum.15204:00000000 $d
    {standard input}:754    .bss.fuzzy_sum.15204:00000000 fuzzy_sum.15204
    {standard input}:757    .bss.fuzzy_out_speed_reference.15203:00000000 $d
    {standard input}:761    .bss.fuzzy_out_speed_reference.15203:00000000 fuzzy_out_speed_reference.15203
    {standard input}:764    .bss.encoder_value_diff.15194:00000000 $d
    {standard input}:768    .bss.encoder_value_diff.15194:00000000 encoder_value_diff.15194
    {standard input}:771    .bss.prev_wake_time.15212:00000000 $d
    {standard input}:775    .bss.prev_wake_time.15212:00000000 prev_wake_time.15212
    {standard input}:778    .bss.encoder_value.15192:00000000 $d
    {standard input}:782    .bss.encoder_value.15192:00000000 encoder_value.15192
    {standard input}:785    .data.task_stacks:00000000 $d
    {standard input}:793    .bss.fuzzy_pwm.15205:00000000 $d
    {standard input}:797    .bss.fuzzy_pwm.15205:00000000 fuzzy_pwm.15205
    {standard input}:800    .rodata.str1.4:00000000 $d
    {standard input}:818    .bss.motor_position_normalized.15198:00000000 $d
    {standard input}:822    .bss.motor_position_normalized.15198:00000000 motor_position_normalized.15198
    {standard input}:825    .bss.position_error.15201:00000000 $d
    {standard input}:829    .bss.position_error.15201:00000000 position_error.15201
    {standard input}:832    .bss.motor_data.15213:00000000 $d
    {standard input}:836    .bss.motor_data.15213:00000000 motor_data.15213
    {standard input}:839    .bss.speed_error.15199:00000000 $d
    {standard input}:843    .bss.speed_error.15199:00000000 speed_error.15199
    {standard input}:846    .bss.accel.15200:00000000 $d
    {standard input}:850    .bss.accel.15200:00000000 accel.15200
    {standard input}:853    .bss.prev_wake_time.15188:00000000 $d
    {standard input}:857    .bss.prev_wake_time.15188:00000000 prev_wake_time.15188
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
xTaskGetTickCount
GUI_Clear
GUI_SetFont
getMotorData
GUI_SetColor
GUI_DispStringAt
sprintf
vTaskDelayUntil
GUI_Font16B_1
__aeabi_l2f
__aeabi_f2d
__aeabi_dadd
__aeabi_dmul
__aeabi_d2f
setupFuzzyController
PWM_CCU8_Start
PWM_CCU8_SetDutyCycleSymmetric
computeFuzzy
setMotorData
getControlParams
getEncoderValue
setControlParams
INH_2
INH_1
PWM_CCU8_0
TEST_PIN
xTaskCreate
