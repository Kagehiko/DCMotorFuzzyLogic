   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,2
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "gui_seggerlibrary.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.GUI_SEGGERLIBRARY_GetAppVersion,"ax",%progbits
  20              	 .align 2
  21              	 .global GUI_SEGGERLIBRARY_GetAppVersion
  22              	 .thumb
  23              	 .thumb_func
  25              	GUI_SEGGERLIBRARY_GetAppVersion:
  26              	.LFB293:
  27              	 .file 1 "../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c"
   1:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** /**
   2:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****  * @file gui_seggerlibrary.c
   3:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****  * @date 2015-10-09
   4:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****  *
   5:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****  * NOTE:
   6:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****  * This file is generated by DAVE. Any manual modification done to this file will be lost when the 
   7:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****  */
   8:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** /**
   9:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****  * @cond
  10:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****  **************************************************************************************************
  11:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****  * GUI_SEGGERLIBRARY v4.1.10 - Displays the text or graphics on OLED/LCD
  12:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****  *
  13:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****  * Copyright (c) 2015, Infineon Technologies AG
  14:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****  * All rights reserved.
  15:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****  *
  16:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  17:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****  * following conditions are met:
  18:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****  *
  19:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****  *   Redistributions of source code must retain the above copyright notice, this list of conditions
  20:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****  *   disclaimer.
  21:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****  *
  22:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****  *   Redistributions in binary form must reproduce the above copyright notice, this list of conditi
  23:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****  *   following disclaimer in the documentation and/or other materials provided with the distributio
  24:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****  *
  25:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****  *   Neither the name of the copyright holders nor the names of its contributors may be used to end
  26:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****  *   products derived from this software without specific prior written permission.
  27:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****  *
  28:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  29:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  30:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  31:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  32:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  33:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  34:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  35:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****  *
  36:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  37:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****  * with Infineon Technologies AG (dave@infineon.com).
  38:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****  **************************************************************************************************
  39:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****  *
  40:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****  * Change History
  41:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****  * --------------
  42:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****  *
  43:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****  * 2015-02-16:
  44:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****  *     - Initial version<br>
  45:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****  *
  46:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****  * 2015-03-20:
  47:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****  *     - LCD APP routines are added <br>
  48:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****  *
  49:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****  * 2015-10-09:
  50:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****  *     - CMSIS_RTOS_RTX support added
  51:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****  * @endcond
  52:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****  *
  53:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****  */
  54:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** 
  55:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** /**************************************************************************************************
  56:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****  * HEADER FILES
  57:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****  **************************************************************************************************
  58:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** #include <xmc_common.h>
  59:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** #include "gui_seggerlibrary.h"
  60:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** #if (CMSIS_RTOS_RTX_PRESENT == 1)
  61:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** #include "CMSIS_RTOS_RTX/cmsis_rtos_rtx.h"
  62:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** #endif
  63:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** /**************************************************************************************************
  64:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****  * MACROS
  65:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****  **************************************************************************************************
  66:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** 
  67:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** /**************************************************************************************************
  68:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****  * LOCAL DATA
  69:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****  **************************************************************************************************
  70:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** 
  71:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** /**************************************************************************************************
  72:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****  * LOCAL ROUTINES
  73:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****  **************************************************************************************************
  74:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** #if (SPI_INTERFACE == 1)
  75:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** void GUI_SEGGERLIBRARY_SendByte(uint8_t data);
  76:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** uint8_t GUI_SEGGERLIBRARY_ReadByte(void);
  77:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** #endif
  78:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** /**************************************************************************************************
  79:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** * API IMPLEMENTATION
  80:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** ***************************************************************************************************
  81:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** 
  82:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** /*
  83:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****  * API to retrieve the version of the GUI_SEGGERLIBRARY APP
  84:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****  */
  85:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** DAVE_APP_VERSION_t GUI_SEGGERLIBRARY_GetAppVersion(void)
  86:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** {
  28              	 .loc 1 86 0
  29              	 .cfi_startproc
  30              	 
  31              	 
  32              	 
  33              	.LVL0:
  87:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****   DAVE_APP_VERSION_t version;
  88:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** 
  89:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****   version.major = GUI_SEGGERLIBRARY_MAJOR_VERSION;
  90:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****   version.minor = GUI_SEGGERLIBRARY_MINOR_VERSION;
  91:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****   version.patch = GUI_SEGGERLIBRARY_PATCH_VERSION;
  92:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** 
  93:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****   return (version);
  34              	 .loc 1 93 0
  35 0000 0423     	 movs r3,#4
  36 0002 0020     	 movs r0,#0
  37 0004 63F30700 	 bfi r0,r3,#0,#8
  38 0008 0123     	 movs r3,#1
  39 000a 63F30F20 	 bfi r0,r3,#8,#8
  40 000e 0A23     	 movs r3,#10
  41 0010 63F31740 	 bfi r0,r3,#16,#8
  86:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****   DAVE_APP_VERSION_t version;
  42              	 .loc 1 86 0
  43 0014 82B0     	 sub sp,sp,#8
  44              	.LCFI0:
  45              	 .cfi_def_cfa_offset 8
  94:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** }
  46              	 .loc 1 94 0
  47 0016 02B0     	 add sp,sp,#8
  48              	.LCFI1:
  49              	 .cfi_def_cfa_offset 0
  50              	 
  51 0018 7047     	 bx lr
  52              	 .cfi_endproc
  53              	.LFE293:
  55 001a 00BF     	 .section .text.GUI_SEGGERLIBRARY_Init,"ax",%progbits
  56              	 .align 2
  57              	 .global GUI_SEGGERLIBRARY_Init
  58              	 .thumb
  59              	 .thumb_func
  61              	GUI_SEGGERLIBRARY_Init:
  62              	.LFB294:
  95:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** 
  96:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** 
  97:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** /* API initializes the Segger library */
  98:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** GUI_SEGGERLIBRARY_STATUS_t GUI_SEGGERLIBRARY_Init(GUI_SEGGERLIBRARY_t *handle)
  99:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** {
  63              	 .loc 1 99 0
  64              	 .cfi_startproc
  65              	 
  66              	 
  67              	.LVL1:
  68 0000 38B5     	 push {r3,r4,r5,lr}
  69              	.LCFI2:
  70              	 .cfi_def_cfa_offset 16
  71              	 .cfi_offset 3,-16
  72              	 .cfi_offset 4,-12
  73              	 .cfi_offset 5,-8
  74              	 .cfi_offset 14,-4
  75              	 .loc 1 99 0
  76 0002 0546     	 mov r5,r0
 100:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****   GUI_SEGGERLIBRARY_STATUS_t status;
 101:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** 
 102:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****   status = GUI_SEGGERLIBRARY_STATUS_SUCCESS;
 103:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** 
 104:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** #if (GUI_SEGGERLIBRARY_RTOS_PRESENT == 0)
 105:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****   status = (GUI_SEGGERLIBRARY_STATUS_t)SYSTIMER_Init(handle->systimer_handler);
 106:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** #endif
 107:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** 
 108:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** #if (CMSIS_RTOS_RTX_PRESENT == 1)
 109:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****   status = (GUI_SEGGERLIBRARY_STATUS_t)CMSIS_RTOS_RTX_Init(&CMSIS_RTOS_RTX_0);
 110:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** #endif
 111:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** 
 112:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****   if (status == GUI_SEGGERLIBRARY_STATUS_SUCCESS)
 113:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****   {
 114:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****     /* Initialize SPI as well as the port and pin for GPIO */
 115:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****     #if (SPI_INTERFACE == 1)
 116:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****       status = (GUI_SEGGERLIBRARY_STATUS_t)SPI_MASTER_Init(handle->spi_master_handler);
  77              	 .loc 1 116 0
  78 0004 0068     	 ldr r0,[r0]
  79              	.LVL2:
  80 0006 FFF7FEFF 	 bl SPI_MASTER_Init
  81              	.LVL3:
 117:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** 
 118:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****       #if !USER_DEFINED_LCD
 119:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** 		if (status == GUI_SEGGERLIBRARY_STATUS_SUCCESS)
  82              	 .loc 1 119 0
  83 000a 0446     	 mov r4,r0
  84 000c 30B1     	 cbz r0,.L12
 120:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** 		{
 121:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** 		  XMC_GPIO_Init(handle->config->portNo, handle->config->pinNo, handle->config->gpio);
 122:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** 
 123:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** 		  status = GUI_SEGGERLIBRARY_STATUS_SUCCESS;
 124:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** 		}
 125:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** 		else
 126:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** 		{
 127:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** 		  status = GUI_SEGGERLIBRARY_STATUS_FAILURE;
  85              	 .loc 1 127 0
  86 000e 0124     	 movs r4,#1
  87              	.LVL4:
  88              	.L4:
 128:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** 		}
 129:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****       #endif
 130:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****     #endif
 131:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** 
 132:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****     if (handle->enable_at_init == true)
  89              	 .loc 1 132 0
  90 0010 2B7A     	 ldrb r3,[r5,#8]
  91 0012 0BB1     	 cbz r3,.L5
 133:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****     {
 134:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****       GUI_Init();
  92              	 .loc 1 134 0
  93 0014 FFF7FEFF 	 bl GUI_Init
  94              	.LVL5:
  95              	.L5:
 135:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****     }
 136:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****   }
 137:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****   else
 138:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****   {
 139:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****     status = GUI_SEGGERLIBRARY_STATUS_FAILURE;
 140:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****   }
 141:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** 
 142:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****   return (status);
 143:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** }
  96              	 .loc 1 143 0
  97 0018 2046     	 mov r0,r4
  98 001a 38BD     	 pop {r3,r4,r5,pc}
  99              	.LVL6:
 100              	.L12:
 121:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** 
 101              	 .loc 1 121 0
 102 001c 6B68     	 ldr r3,[r5,#4]
 103 001e 5868     	 ldr r0,[r3,#4]
 104              	.LVL7:
 105 0020 197A     	 ldrb r1,[r3,#8]
 106 0022 1A68     	 ldr r2,[r3]
 107 0024 FFF7FEFF 	 bl XMC_GPIO_Init
 108              	.LVL8:
 109 0028 F2E7     	 b .L4
 110              	 .cfi_endproc
 111              	.LFE294:
 113 002a 00BF     	 .section .text.GUI_SEGGERLIBRARY_SendByte,"ax",%progbits
 114              	 .align 2
 115              	 .global GUI_SEGGERLIBRARY_SendByte
 116              	 .thumb
 117              	 .thumb_func
 119              	GUI_SEGGERLIBRARY_SendByte:
 120              	.LFB295:
 144:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** 
 145:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** #if (SPI_INTERFACE == 1)
 146:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** 
 147:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** /* Sends one byte of data to the OLED through SPI */
 148:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** void GUI_SEGGERLIBRARY_SendByte(uint8_t data)
 149:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** {
 121              	 .loc 1 149 0
 122              	 .cfi_startproc
 123              	 
 124              	 
 125              	.LVL9:
 126 0000 10B5     	 push {r4,lr}
 127              	.LCFI3:
 128              	 .cfi_def_cfa_offset 8
 129              	 .cfi_offset 4,-8
 130              	 .cfi_offset 14,-4
 131 0002 084C     	 ldr r4,.L17
 132 0004 2368     	 ldr r3,[r4]
 133              	.LVL10:
 134              	.LBB43:
 135              	.LBB44:
 136              	.LBB45:
 137              	 .file 2 "C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc/xmc_spi.h"
   1:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** /**
   2:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * @file xmc_spi.h
   3:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * @date 2016-05-20
   4:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  *
   5:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * @cond
   6:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  **************************************************************************************************
   7:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * XMClib v2.1.16 - XMC Peripheral Driver Library 
   8:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  *
   9:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * Copyright (c) 2015-2017, Infineon Technologies AG
  10:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * All rights reserved.                        
  11:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  *                                             
  12:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * following conditions are met:   
  14:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  *                                                                              
  15:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * disclaimer.                        
  17:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * 
  18:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * 
  21:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * products derived from this software without specific prior written permission.                  
  23:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  *                                                                              
  24:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  *                                                                              
  32:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  **************************************************************************************************
  35:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  *
  36:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * Change History
  37:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * --------------
  38:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  *
  39:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * 2015-02-20:
  40:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  *     - Initial
  41:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  *   
  42:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * 2015-05-20:
  43:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  *     - Documentation improved <br>
  44:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  *     - Added XMC_SPI_CH_SetSlaveSelectDelay(), XMC_SPI_CH_TriggerServiceRequest() and 
  45:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  *       XMC_SPI_CH_SelectInterruptNodePointer() <br>
  46:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  *     - Added XMC_SPI_CH_SetInterwordDelaySCLK() <br>
  47:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  *
  48:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * 2015-06-20:
  49:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  *     - Removed version macros and declaration of GetDriverVersion API <br>
  50:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  *
  51:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * 2015-08-24:
  52:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  *     - Added APIs for enabling/disabling delay compensation XMC_SPI_CH_DisableDelayCompensation()
  53:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  *       XMC_SPI_CH_EnableDelayCompensation() <br>
  54:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  *
  55:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * 2015-08-27:
  56:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  *     - Added APIs for external input for BRG configuration:XMC_SPI_CH_ConfigExternalInputSignalTo
  57:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  *
  58:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * 2015-09-01:
  59:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  *     - Modified XMC_SPI_CH_SetInputSource() for avoiding complete DXCR register overwriting. <br>
  60:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  *     - Modified XMC_SPI_CH_EVENT_t enum for supporting XMC_SPI_CH_EnableEvent() and XMC_SPI_CH_Di
  61:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  *       for supporting multiple events configuration <br>
  62:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  *
  63:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * 2015-09-08:
  64:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  *     - Adding API for configuring the receiving clock phase in the slave:XMC_SPI_CH_DataLatchedIn
  65:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  *
  66:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * 2016-04-10:
  67:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  *     - Added an API for configuring the transmit mode:XMC_SPI_CH_SetTransmitMode() <br>
  68:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  *
  69:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * 2016-05-20:
  70:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  *     - Added XMC_SPI_CH_EnableDataTransmission() and XMC_SPI_CH_DisableDataTransmission()
  71:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * 
  72:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * @endcond 
  73:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  *
  74:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  */
  75:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** 
  76:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** #ifndef XMC_SPI_H
  77:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** #define XMC_SPI_H
  78:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** 
  79:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** /**************************************************************************************************
  80:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * HEADER FILES
  81:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  **************************************************************************************************
  82:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** #include "xmc_usic.h"
  83:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** 
  84:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** /**
  85:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * @addtogroup XMClib XMC Peripheral Library
  86:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * @{
  87:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  */
  88:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** 
  89:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** /**
  90:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * @addtogroup SPI
  91:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * @brief Synchronous serial channel driver for SPI-like communication.
  92:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * 
  93:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * The SPI driver uses Universal Serial Interface Channel(USIC) module. 
  94:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * The USIC module supports multiple data lines for SPI communication. \n
  95:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * -# Full duplex communication with 2 separate lines for transmission and reception.
  96:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * -# Half duplex communication with 1 common line shared for transmission and reception.
  97:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * -# Dual mode communication with 2 common lines shared for transmission and reception.
  98:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * -# Quad mode communication with 4 common lines shared for transmission and reception.<br><br>
  99:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * 
 100:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * SPI driver provides structures, enumerations and APIs for configuring the USIC channel for SPI c
 101:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * and also for data transaction.<br>
 102:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * SPI driver features:
 103:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * -# Configuration structure XMC_SPI_CH_CONFIG_t and SPI initialization function XMC_SPI_CH_Init()
 104:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * -# Allows configuration of protocol word and frame length using XMC_SPI_CH_SetWordLength(), XMC_
 105:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * -# Allows manipulation of data frame at runtime using XMC_SPI_CH_EnableSOF(), XMC_SPI_CH_EnableE
 106:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  XMC_SPI_CH_EnableSlaveSelect(), XMC_SPI_CH_DisableSlaveSelect()
 107:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * -# Provides APIs for transmitting data and receiving data using XMC_SPI_CH_Transmit(), XMC_SPI_C
 108:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * -# Allows configuration of shift clock using XMC_SPI_CH_ConfigureShiftClockOutput()
 109:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * -# Provides enumeration of SPI protocol events using @ref XMC_SPI_CH_STATUS_FLAG_t
 110:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * @{
 111:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  */
 112:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** 
 113:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** /**************************************************************************************************
 114:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * MACROS
 115:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  **************************************************************************************************
 116:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** 
 117:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** #if defined(USIC0)
 118:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** #define XMC_SPI0_CH0 XMC_USIC0_CH0 /**< SPI0 channel 0 base address */
 119:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** #define XMC_SPI0_CH1 XMC_USIC0_CH1 /**< SPI0 channel 1 base address */
 120:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** #endif
 121:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** 
 122:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** #if defined(USIC1)
 123:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** #define XMC_SPI1_CH0 XMC_USIC1_CH0 /**< SPI1 channel 0 base address */
 124:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** #define XMC_SPI1_CH1 XMC_USIC1_CH1 /**< SPI1 channel 1 base address */
 125:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** #endif
 126:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** 
 127:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** #if defined(USIC2)
 128:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** #define XMC_SPI2_CH0 XMC_USIC2_CH0 /**< SPI2 channel 0 base address */
 129:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** #define XMC_SPI2_CH1 XMC_USIC2_CH1 /**< SPI2 channel 1 base address */
 130:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** #endif
 131:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** 
 132:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** /**************************************************************************************************
 133:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * ENUMS
 134:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  **************************************************************************************************
 135:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** 
 136:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** /**
 137:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * Defines return status of SPI driver APIs
 138:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  */
 139:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** typedef enum XMC_SPI_CH_STATUS
 140:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** {
 141:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_STATUS_OK,    /**< Status of the Module: OK */
 142:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_STATUS_ERROR, /**< Status of the Module: ERROR */
 143:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_STATUS_BUSY   /**< The Module is busy */
 144:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** } XMC_SPI_CH_STATUS_t;
 145:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** /**
 146:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * Defines the SPI bus mode
 147:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  */
 148:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** typedef enum XMC_SPI_CH_BUS_MODE
 149:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** {
 150:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_BUS_MODE_MASTER, /**< SPI Master */
 151:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_BUS_MODE_SLAVE   /**< SPI Slave */
 152:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** } XMC_SPI_CH_BUS_MODE_t;
 153:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** 
 154:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** /**
 155:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * Defines the Polarity of the slave select signals SELO[7:0] in relation to the master slave selec
 156:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  */
 157:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** typedef enum XMC_SPI_CH_SLAVE_SEL_MSLS_INV
 158:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** {
 159:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_SLAVE_SEL_SAME_AS_MSLS = 0x0UL, /**< The SELO outputs have the same polarity as the MS
 160:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****                                                   (active high) */
 161:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_SLAVE_SEL_INV_TO_MSLS = 0x1UL << USIC_CH_PCR_SSCMode_SELINV_Pos /**< The SELO outputs 
 162:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****                                                                                   polarity to the M
 163:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****                                                                                   (active low)*/
 164:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** } XMC_SPI_CH_SLAVE_SEL_MSLS_INV_t;
 165:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** 
 166:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** /**
 167:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * Defines the Polarity of the data inputs.
 168:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  */
 169:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** typedef enum XMC_SPI_CH_DATA_POLARITY
 170:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** {
 171:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_DATA_POLARITY_DIRECT = 0x0UL, /**< The polarity of the data line is not inverted */
 172:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_DATA_POLARITY_INVERT = 0x1UL << USIC_CH_DX2CR_DPOL_Pos /**< The polarity of the data l
 173:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** } XMC_SPI_CH_DATA_POLARITY_t;
 174:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** 
 175:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** /**
 176:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * Defines Slave Select lines
 177:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  */
 178:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** typedef enum XMC_SPI_CH_SLAVE_SELECT
 179:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** {
 180:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_SLAVE_SELECT_0 = 1UL << USIC_CH_PCR_SSCMode_SELO_Pos,  /**< Slave Select line 0 */
 181:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_SLAVE_SELECT_1 = 2UL << USIC_CH_PCR_SSCMode_SELO_Pos,  /**< Slave Select line 1 */
 182:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_SLAVE_SELECT_2 = 4UL << USIC_CH_PCR_SSCMode_SELO_Pos,  /**< Slave Select line 2 */
 183:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_SLAVE_SELECT_3 = 8UL << USIC_CH_PCR_SSCMode_SELO_Pos,  /**< Slave Select line 3 */
 184:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_SLAVE_SELECT_4 = 16UL << USIC_CH_PCR_SSCMode_SELO_Pos, /**< Slave Select line 4 */
 185:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_SLAVE_SELECT_5 = 32UL << USIC_CH_PCR_SSCMode_SELO_Pos, /**< Slave Select line 5 */
 186:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_SLAVE_SELECT_6 = 64UL << USIC_CH_PCR_SSCMode_SELO_Pos, /**< Slave Select line 6 */
 187:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_SLAVE_SELECT_7 = 128UL << USIC_CH_PCR_SSCMode_SELO_Pos /**< Slave Select line 7 */
 188:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** } XMC_SPI_CH_SLAVE_SELECT_t;
 189:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** 
 190:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** /**
 191:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * Defines SPI specific events
 192:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  */
 193:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** typedef enum XMC_SPI_CH_EVENT
 194:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** {
 195:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_EVENT_RECEIVE_START       = USIC_CH_CCR_RSIEN_Msk, /**< Receive start event */
 196:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_EVENT_DATA_LOST           = USIC_CH_CCR_DLIEN_Msk, /**< Data lost event */
 197:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_EVENT_TRANSMIT_SHIFT      = USIC_CH_CCR_TSIEN_Msk, /**< Transmit shift event */
 198:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_EVENT_TRANSMIT_BUFFER     = USIC_CH_CCR_TBIEN_Msk, /**< Transmit buffer event */
 199:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_EVENT_STANDARD_RECEIVE    = USIC_CH_CCR_RIEN_Msk,  /**< Receive event */
 200:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_EVENT_ALTERNATIVE_RECEIVE = USIC_CH_CCR_AIEN_Msk,  /**< Alternate receive event */
 201:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_EVENT_BAUD_RATE_GENERATOR = USIC_CH_CCR_BRGIEN_Msk, /**< Baudrate generator event */
 202:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** 
 203:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_EVENT_PARITY_ERROR = USIC_CH_PCR_SSCMode_PARIEN_Msk >> 13U,       /**< Parity error ev
 204:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_EVENT_MSLS_CHANGE =  USIC_CH_PCR_SSCMode_MSLSIEN_Msk >> 13U,      /**< Master slave se
 205:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_EVENT_DX2TIEN_ACTIVATED = USIC_CH_PCR_SSCMode_DX2TIEN_Msk >> 13U  /**< Slave select in
 206:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** } XMC_SPI_CH_EVENT_t;
 207:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** 
 208:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** /**
 209:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * Defines SPI event status
 210:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  */
 211:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** typedef enum XMC_SPI_CH_STATUS_FLAG
 212:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** {
 213:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_STATUS_FLAG_MSLS = USIC_CH_PSR_SSCMode_MSLS_Msk,                          /**< Status 
 214:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****                                                                                             select(
 215:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_STATUS_FLAG_DX2S = USIC_CH_PSR_SSCMode_DX2S_Msk,                          /**< Status 
 216:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****                                                                                             input(D
 217:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_STATUS_FLAG_MSLS_EVENT_DETECTED = USIC_CH_PSR_SSCMode_MSLSEV_Msk,         /**< Status 
 218:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****                                                                                             output 
 219:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_STATUS_FLAG_DX2T_EVENT_DETECTED = USIC_CH_PSR_SSCMode_DX2TEV_Msk,         /**< Status 
 220:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****                                                                                             input s
 221:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_STATUS_FLAG_PARITY_ERROR_EVENT_DETECTED = USIC_CH_PSR_SSCMode_PARERR_Msk, /**< Indicat
 222:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****                                                                                             parity 
 223:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_STATUS_FLAG_RECEIVER_START_INDICATION = USIC_CH_PSR_SSCMode_RSIF_Msk,     /**< Status 
 224:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****                                                                                             event *
 225:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_STATUS_FLAG_DATA_LOST_INDICATION = USIC_CH_PSR_SSCMode_DLIF_Msk,          /**< Status 
 226:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_STATUS_FLAG_TRANSMIT_SHIFT_INDICATION = USIC_CH_PSR_SSCMode_TSIF_Msk,      /**< Status
 227:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****                                                                                             event *
 228:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_STATUS_FLAG_TRANSMIT_BUFFER_INDICATION = USIC_CH_PSR_SSCMode_TBIF_Msk,    /**< Status 
 229:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****                                                                                             event *
 230:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_STATUS_FLAG_RECEIVE_INDICATION = USIC_CH_PSR_SSCMode_RIF_Msk,             /**< Status 
 231:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_STATUS_FLAG_ALTERNATIVE_RECEIVE_INDICATION = USIC_CH_PSR_SSCMode_AIF_Msk, /**< Status 
 232:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****                                                                                             receive
 233:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_STATUS_FLAG_BAUD_RATE_GENERATOR_INDICATION = USIC_CH_PSR_SSCMode_BRGIF_Msk/**< Status 
 234:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****                                                                                             generat
 235:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** } XMC_SPI_CH_STATUS_FLAG_t;
 236:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** 
 237:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** /**
 238:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * Defines input frequency sources for slave select signal delay configuration.
 239:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  */
 240:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** typedef enum XMC_SPI_CH_INPUT_FREQ_SLAVE_SELECT_DELAY
 241:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** {
 242:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_INPUT_FREQ_SLAVE_SELECT_DELAY_FPDIV = 0x0UL, /**< Output of PDIV divider: FPDIV */
 243:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_INPUT_FREQ_SLAVE_SELECT_DELAY_FPPP  = 0x1UL << USIC_CH_PCR_SSCMode_CTQSEL1_Pos, /**< P
 244:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_INPUT_FREQ_SLAVE_SELECT_DELAY_FSCLK = 0x2UL << USIC_CH_PCR_SSCMode_CTQSEL1_Pos, /**< S
 245:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_INPUT_FREQ_SLAVE_SELECT_DELAY_FMCLK = 0x3UL << USIC_CH_PCR_SSCMode_CTQSEL1_Pos  /**< M
 246:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** } XMC_SPI_CH_INPUT_FREQ_SLAVE_SELECT_DELAY_t;
 247:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** 
 248:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** /**
 249:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * Define data and clock input stages
 250:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  */
 251:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** typedef enum XMC_SPI_CH_INPUT
 252:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** {
 253:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_INPUT_DIN0 = 0UL,         /**< Data input stage 0 */ 
 254:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_INPUT_SLAVE_SCLKIN = 1UL, /**< Clock input stage */
 255:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_INPUT_SLAVE_SELIN = 2UL,  /**< Slave select input stage */
 256:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_INPUT_DIN1 = 3UL,         /**< Data input stage 1 */
 257:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_INPUT_DIN2 = 4UL,         /**< Data input stage 2 */
 258:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_INPUT_DIN3 = 5UL          /**< Data input stage 3 */
 259:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** } XMC_SPI_CH_INPUT_t;
 260:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** 
 261:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** /**
 262:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * Define SPI data transfer mode
 263:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  */
 264:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** typedef enum XMC_SPI_CH_MODE
 265:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** {
 266:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_MODE_STANDARD = 0UL,            /**< SPI standard full duplex mode */ 
 267:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_MODE_STANDARD_HALFDUPLEX = 4UL, /**< SPI standard half duplex mode */ 
 268:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_MODE_DUAL= 6UL,                 /**< SPI half duplex mode with dual data lines */ 
 269:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_MODE_QUAD= 7UL                  /**< SPI half duplex mode with quad data lines */
 270:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** } XMC_SPI_CH_MODE_t;
 271:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** 
 272:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** 
 273:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** /**
 274:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * SPI Baudrate Generator shift clock passive level
 275:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  */
 276:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** typedef enum XMC_SPI_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL
 277:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** {
 278:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****   /**< Passive clock level 0, delay disabled */
 279:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_0_DELAY_DISABLED = XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_L
 280:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****   /**< Passive clock level 1, delay disabled */
 281:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_1_DELAY_DISABLED = XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_L
 282:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****   /**< Passive clock level 0, delay enabled */
 283:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_0_DELAY_ENABLED  = XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_L
 284:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****   /**< Passive clock level 1, delay enabled */
 285:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_1_DELAY_ENABLED  = XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_L
 286:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** } XMC_SPI_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_t;
 287:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** 
 288:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** /**
 289:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * SPI Baudrate Generator shift clock output
 290:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** */
 291:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** typedef enum XMC_SPI_CH_BRG_SHIFT_CLOCK_OUTPUT
 292:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** {
 293:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_BRG_SHIFT_CLOCK_OUTPUT_SCLK = XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_SCLK,  /**< Baudrate 
 294:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_BRG_SHIFT_CLOCK_OUTPUT_DX1  = XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_DX1   /**< Clock obta
 295:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** } XMC_SPI_CH_BRG_SHIFT_CLOCK_OUTPUT_t;
 296:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** 
 297:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** /**
 298:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * SPI channel interrupt node pointers
 299:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  */
 300:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** typedef enum XMC_SPI_CH_INTERRUPT_NODE_POINTER
 301:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** {
 302:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_INTERRUPT_NODE_POINTER_TRANSMIT_SHIFT      = XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSM
 303:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_INTERRUPT_NODE_POINTER_TRANSMIT_BUFFER     = XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSM
 304:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_INTERRUPT_NODE_POINTER_RECEIVE             = XMC_USIC_CH_INTERRUPT_NODE_POINTER_RECEIV
 305:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_INTERRUPT_NODE_POINTER_ALTERNATE_RECEIVE   = XMC_USIC_CH_INTERRUPT_NODE_POINTER_ALTERN
 306:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_INTERRUPT_NODE_POINTER_PROTOCOL            = XMC_USIC_CH_INTERRUPT_NODE_POINTER_PROTOC
 307:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** } XMC_SPI_CH_INTERRUPT_NODE_POINTER_t;
 308:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** 
 309:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** /**************************************************************************************************
 310:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * DATA STRUCTURES
 311:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** ***************************************************************************************************
 312:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** 
 313:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** /**
 314:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * Structure for initializing SPI channel.
 315:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  */
 316:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** typedef struct XMC_SPI_CH_CONFIG
 317:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** {
 318:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****   uint32_t baudrate;							  /**< Module baud rate for communication */
 319:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_BUS_MODE_t bus_mode;                 /**< Bus mode: Master/Slave */
 320:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_SLAVE_SEL_MSLS_INV_t selo_inversion; /**< Enable inversion of Slave select signal rela
 321:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****                                                        MSLS signal  */
 322:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_USIC_CH_PARITY_MODE_t parity_mode;          /**< Enable parity check for transmit and receive
 323:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** } XMC_SPI_CH_CONFIG_t;
 324:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** 
 325:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** /**************************************************************************************************
 326:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * API PROTOTYPES
 327:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  **************************************************************************************************
 328:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** 
 329:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** #ifdef __cplusplus
 330:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** extern "C" {
 331:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** #endif
 332:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** 
 333:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** /**
 334:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 335:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * @param config pointer to constant SPI channel configuration data structure.\n
 336:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  *               Refer data structure @ref XMC_SPI_CH_CONFIG_t for detail.
 337:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  *
 338:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 339:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  *
 340:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 341:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * Initializes the selected SPI \a channel with the \a config structure.\n\n
 342:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * Enable SPI channel by calling XMC_USIC_CH_Enable() and then configures
 343:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * <ul>
 344:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Baudrate,</li>
 345:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Passive data level as active high,</li>
 346:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Shift control signal as active high,</li>
 347:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Frame length as 64U,</li>
 348:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Word length as 8U,</li>
 349:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Enable Hardware port control mode,</li>
 350:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Enable transmission of data TDV(Transmit data valid) bit is set to 1,</li>
 351:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Enable invalidation of data in TBUF once loaded into shift register,</li>
 352:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Parity mode settings</li>
 353:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * </ul>
 354:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * And if master mode is selected,
 355:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * <ul>
 356:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Enables MSLS signal generation,</li>
 357:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>configures slave selection as normal mode,</li>
 358:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Set polarity for the Slave signal,</li>
 359:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * <li>Enable Frame end mode(MSLS signal is kept active after transmission of a frame)</li>
 360:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * </ul>
 361:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  */
 362:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** void XMC_SPI_CH_Init(XMC_USIC_CH_t *const channel, const XMC_SPI_CH_CONFIG_t *const config);
 363:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** 
 364:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** /**
 365:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 366:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  *
 367:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 368:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  *
 369:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 370:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * Set the selected USIC channel to operate in SPI mode, by setting CCR.MODE bits.\n\n
 371:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * It should be executed after XMC_SPI_CH_Init() during initialization. By invoking XMC_SPI_CH_Stop
 372:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * to IDLE state. Call XMC_SPI_CH_Start() to set the SPI mode again, as needed later in the program
 373:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  *
 374:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 375:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_Init(), XMC_SPI_CH_Stop()
 376:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  */
 377:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** __STATIC_INLINE void XMC_SPI_CH_Start(XMC_USIC_CH_t *const channel)
 378:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** {
 379:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****   /* USIC channel in SPI mode */
 380:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_USIC_CH_SetMode(channel, XMC_USIC_CH_OPERATING_MODE_SPI);
 381:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** }
 382:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** 
 383:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** /**
 384:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 385:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  *
 386:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * @return XMC_SPI_CH_STATUS_t Status of the SPI driver after the request for stopping is processed
 387:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  *        XMC_SPI_CH_STATUS_OK- If the USIC channel is successfully put to IDLE mode. \n
 388:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  *        XMC_SPI_CH_STATUS_BUSY- If the USIC channel is busy transmitting data.
 389:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  *
 390:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 391:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * Set the selected SPI channel to IDLE mode, by clearing CCR.MODE bits.\n\n
 392:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * After calling XMC_SPI_CH_Stop, channel is IDLE mode. So no communication is supported. XMC_SPI_C
 393:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * invoked to start the communication again.
 394:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  *
 395:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 396:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_Start()
 397:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  */
 398:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** XMC_SPI_CH_STATUS_t XMC_SPI_CH_Stop(XMC_USIC_CH_t *const channel);
 399:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** 
 400:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** /**
 401:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 402:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * @param rate Bus speed in bits per second
 403:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  *
 404:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * @return XMC_SPI_CH_STATUS_t Status of the SPI driver after the request for setting baudrate is p
 405:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  *        XMC_SPI_CH_STATUS_OK- If the baudrate is successfully changed. \n
 406:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  *        XMC_SPI_CH_STATUS_ERROR- If the new baudrate value is out of range.
 407:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  *
 408:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 409:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * Sets the bus speed in bits per second
 410:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  *
 411:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 412:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_Init(), XMC_SPI_CH_Stop()
 413:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  */
 414:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** XMC_SPI_CH_STATUS_t XMC_SPI_CH_SetBaudrate(XMC_USIC_CH_t *const channel, const uint32_t rate);
 415:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** 
 416:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** /**
 417:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 418:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * @param slave Slave select signal.\n
 419:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  *              Refer @ref XMC_SPI_CH_SLAVE_SELECT_t for valid values.
 420:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  *
 421:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 422:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  *
 423:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 424:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * Enable the selected slave signal by setting PCR.SELO bits.\n\n
 425:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * Each slave is connected with one slave select signal. This is not configured in XMC_SPI_CH_Init(
 426:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_EnableSlaveSelect() with required \a slave to to start the communication. After finis
 427:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * communication XMC_SPI_CH_DisableSlaveSelect() can be invoked to disable the slaves.
 428:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  *
 429:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 430:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_DisableSlaveSelect()
 431:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  */
 432:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** void XMC_SPI_CH_EnableSlaveSelect(XMC_USIC_CH_t *const channel, const XMC_SPI_CH_SLAVE_SELECT_t sla
 433:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** 
 434:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** /**
 435:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant ponter to XMC_USIC_CH_t, pointing to the USIC channel base address.
 436:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  *
 437:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 438:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  *
 439:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 440:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * Disable all the slave signals by clearing PCR.SELO bits.\n\n
 441:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_EnableSlaveSelect() has to be invoked to start the communication with the desired sla
 442:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  *
 443:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 444:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_EnableSlaveSelect()
 445:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  */
 446:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** void XMC_SPI_CH_DisableSlaveSelect(XMC_USIC_CH_t *const channel);
 447:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** 
 448:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** /**
 449:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 450:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * @param mode Communication mode of the SPI, based on this mode TCI(Transmit control information)i
 451:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  *             Refer @ref XMC_SPI_CH_MODE_t for valid values.
 452:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  *
 453:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 454:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  *
 455:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 456:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * In Dual and Quad modes,  hardware port control(CCR.HPCEN) mode is enabled. \n\n
 457:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * By enabling this the direction of the data pin is updated by hardware itself. Before transmittin
 458:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * mode to ensure the proper communication.
 459:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * 
 460:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 461:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_Transmit()
 462:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  */
 463:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** __STATIC_INLINE void XMC_SPI_CH_SetTransmitMode(XMC_USIC_CH_t *const channel, const XMC_SPI_CH_MODE
 464:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** {
 465:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****   channel->CCR = (channel->CCR & (uint32_t)(~USIC_CH_CCR_HPCEN_Msk)) |
 466:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****                   (((uint32_t) mode << USIC_CH_CCR_HPCEN_Pos) & (uint32_t)USIC_CH_CCR_HPCEN_Msk);
 467:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** }
 468:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** 
 469:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** /**
 470:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 471:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * @param data Data to be transmitted
 472:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * @param mode Communication mode of the SPI, based on this mode TCI(Transmit control information)i
 473:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  *             Refer @ref XMC_SPI_CH_MODE_t for valid values.
 474:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  *
 475:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 476:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  *
 477:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 478:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * Puts the data into FIFO, if FIFO mode is enabled or else into standard buffer, by setting the pr
 479:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * In Dual and Quad modes,  hardware port control(CCR.HPCEN) mode is enabled. By enabling this the 
 480:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * pin is updated by hardware itself. TCI(Transmit Control Information) allows dynamic control of b
 481:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * and pin direction during data transfers by writing to SCTR.DSM and SCTR.HPCDIR bit fields. To su
 482:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * update, TCSR.HPCMD(Hardware Port control) will be enabled during the initialization using XMC_SP
 483:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * 
 484:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * 
 485:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 486:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_Receive()
 487:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  */
 488:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** void XMC_SPI_CH_Transmit(XMC_USIC_CH_t *const channel, const uint16_t data, const XMC_SPI_CH_MODE_t
 489:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** 
 490:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** /**
 491:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 492:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * @param mode Communication mode of the SPI, based on this mode TCI(Transmit control information)i
 493:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  *             Refer @ref XMC_SPI_CH_MODE_t for valid values.      
 494:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  *
 495:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 496:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  *
 497:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 498:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * Transmits a dummy data(FFFFH) to provide clock for slave and receives the data from the slave.\n
 499:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_Receive() receives the data and places it into buffer based on the FIFO selection. Af
 500:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_GetReceivedData() can be invoked to read the data from the buffers.
 501:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * 
 502:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 503:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_GetReceivedDaa()
 504:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  */
 505:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** __STATIC_INLINE void XMC_SPI_CH_Receive(XMC_USIC_CH_t *const channel, const XMC_SPI_CH_MODE_t mode)
 506:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** {
 507:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****   /* Transmit dummy data */
 508:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****   XMC_SPI_CH_Transmit(channel, (uint16_t)0xffffU, (XMC_SPI_CH_MODE_t)((uint16_t)mode & 0xfffbU));
 509:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** }
 510:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** 
 511:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** /**
 512:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 513:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  *
 514:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * @return uint16_t Data read from the receive buffer.
 515:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  *
 516:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 517:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * Reads data from the receive buffer based on the FIFO selection.\n\n
 518:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * Invocation of XMC_SPI_CH_Receive() receives the data and place it into receive buffer. After rec
 519:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_GetReceivedData() can be used to read the data from the buffer.
 520:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * 
 521:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 522:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_Receive()
 523:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  */
 524:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** uint16_t XMC_SPI_CH_GetReceivedData(XMC_USIC_CH_t *const channel);
 525:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** 
 526:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** /**
 527:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 528:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  *
 529:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 530:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  *
 531:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 532:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * Set the order of data transfer from LSB to MSB, by clearing SCTR.SDIR bit.\n\n
 533:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * This is typically based on the slave settings. Invoke XMC_SPI_CH_SetBitOrderLsbFirst() to set di
 534:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * the program.
 535:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  *
 536:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 537:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_SetBitOrderMsbFirst()
 538:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  */
 539:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** __STATIC_INLINE void XMC_SPI_CH_SetBitOrderLsbFirst(XMC_USIC_CH_t *const channel)
 540:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** {
 541:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****   channel->SCTR &= (uint32_t)~USIC_CH_SCTR_SDIR_Msk;
 542:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** }
 543:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** 
 544:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** /**
 545:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 546:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  *
 547:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 548:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  *
 549:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 550:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * Set the order of data transfer from MSB to LSB, by setting SCTR.SDIR bit.\n\n
 551:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * This is typically based on the slave settings. This is not set during XMC_SPI_CH_Init(). 
 552:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * Invoke XMC_SPI_CH_SetBitOrderMsbFirst() to set direction as needed in the program.
 553:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  *
 554:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 555:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_SetBitOrderLsbFirst()
 556:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  */
 557:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** __STATIC_INLINE void XMC_SPI_CH_SetBitOrderMsbFirst(XMC_USIC_CH_t *const channel)
 558:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** {
 559:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****   channel->SCTR |= (uint32_t)USIC_CH_SCTR_SDIR_Msk;
 560:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** }
 561:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** 
 562:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** /**
 563:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 564:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * @param event Protocol events which have to be enabled.
 565:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  *              Refer @ XMC_SPI_CH_EVENT_t for valid values. <b>OR</b> combinations of these enum i
 566:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  *              as input.
 567:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  *
 568:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 569:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  *
 570:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 571:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * Enables the SPI protocol specific events, by configuring PCR register.\n\n
 572:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * Events can be enabled as needed using XMC_SPI_CH_EnableEvent(). 
 573:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_DisableEvent() can be used to disable the events.
 574:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  *
 575:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 576:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_DisableEvent()
 577:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  */
 578:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** void XMC_SPI_CH_EnableEvent(XMC_USIC_CH_t *const channel, const uint32_t event);
 579:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** 
 580:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** /**
 581:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 582:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * @param event Protocol events which have to be disabled.
 583:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  *              Refer @ XMC_SPI_CH_EVENT_t for valid values. <b>OR</b> combinations of these enum i
 584:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  *              as input.
 585:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  *
 586:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 587:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  *
 588:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 589:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * Disables the SPI protocol specific events, by configuring PCR register.\n\n
 590:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * After disabling the events, XMC_SPI_CH_EnableEvent() has to be invoked to re-enable the events.
 591:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  *
 592:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 593:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_EnableEvent()
 594:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  */
 595:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** void XMC_SPI_CH_DisableEvent(XMC_USIC_CH_t *const channel, const uint32_t event);
 596:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** 
 597:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** /**
 598:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 599:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  *
 600:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * @return uint32_t Status of SPI protocol events.
 601:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  *
 602:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 603:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * Returns the status of the events, by reading PSR register.\n\n
 604:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * This indicates the status of the all the events, for SPI communication. 
 605:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  *
 606:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 607:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_ClearStatusFlag()
 608:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  */
 609:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** __STATIC_INLINE uint32_t XMC_SPI_CH_GetStatusFlag(XMC_USIC_CH_t *const channel)
 610:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** {
 611:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****   return channel->PSR_SSCMode;
 612:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** }
 613:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** 
 614:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** /**
 615:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * @param channel A constant pointer to XMC_USIC_CH_t, pointing to the USIC channel base address.
 616:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * @param flag Protocol event status to be cleared for detection of next occurence.
 617:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  *              Refer @ XMC_SPI_CH_STATUS_FLAG_t for valid values. <b>OR</b> combinations of these 
 618:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  *              as input.
 619:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * @return None
 620:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  *
 621:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Description:</b><br>
 622:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * Clears the events specified, by setting PSCR register.\n\n
 623:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * During communication the events occurred have to be cleared to detect their next occurence.\n
 624:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * e.g: During transmission Transmit buffer event occurs to indicating data word transfer has start
 625:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  *       event has to be cleared after transmission of each data word. Otherwise next event cannot 
 626:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  *
 627:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * \par<b>Related APIs:</b><BR>
 628:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  * XMC_SPI_CH_GetStatusFlag()
 629:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****  */
 630:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** __STATIC_INLINE void XMC_SPI_CH_ClearStatusFlag(XMC_USIC_CH_t *const channel, const uint32_t flag)
 631:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** {
 632:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h ****   channel->PSCR |= flag;
 138              	 .loc 2 632 0
 139 0006 DA6C     	 ldr r2,[r3,#76]
 140 0008 42F48052 	 orr r2,r2,#4096
 141              	.LBE45:
 142              	.LBE44:
 143              	.LBE43:
 150:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****   SPI_MASTER_ClearFlag(&SPI_INSTANCE, XMC_SPI_CH_STATUS_FLAG_TRANSMIT_SHIFT_INDICATION);
 151:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** 
 152:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****   XMC_SPI_CH_Transmit(SPI_INSTANCE.channel, (uint16_t)data, XMC_SPI_CH_MODE_STANDARD);
 144              	 .loc 1 152 0
 145 000c 0146     	 mov r1,r0
 146              	.LBB48:
 147              	.LBB47:
 148              	.LBB46:
 149              	 .loc 2 632 0
 150 000e DA64     	 str r2,[r3,#76]
 151              	.LBE46:
 152              	.LBE47:
 153              	.LBE48:
 154              	 .loc 1 152 0
 155 0010 1846     	 mov r0,r3
 156              	.LVL11:
 157 0012 0022     	 movs r2,#0
 158 0014 FFF7FEFF 	 bl XMC_SPI_CH_Transmit
 159              	.LVL12:
 160 0018 2268     	 ldr r2,[r4]
 161              	.L14:
 162              	.LVL13:
 163              	.LBB49:
 164              	.LBB50:
 165              	.LBB51:
 166              	.LBB52:
 611:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** }
 167              	 .loc 2 611 0 discriminator 1
 168 001a 936C     	 ldr r3,[r2,#72]
 169              	.LBE52:
 170              	.LBE51:
 171              	.LBE50:
 172              	.LBE49:
 153:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** 
 154:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****   while(SPI_MASTER_GetFlagStatus(&SPI_INSTANCE, XMC_SPI_CH_STATUS_FLAG_TRANSMIT_SHIFT_INDICATION)!=
 173              	 .loc 1 154 0 discriminator 1
 174 001c DB04     	 lsls r3,r3,#19
 175 001e FCD5     	 bpl .L14
 155:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****        XMC_SPI_CH_STATUS_FLAG_TRANSMIT_SHIFT_INDICATION);
 156:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** }
 176              	 .loc 1 156 0
 177 0020 10BD     	 pop {r4,pc}
 178              	.L18:
 179 0022 00BF     	 .align 2
 180              	.L17:
 181 0024 00000000 	 .word SPI_MASTER_1
 182              	 .cfi_endproc
 183              	.LFE295:
 185              	 .section .text.GUI_SEGGERLIBRARY_ReadByte,"ax",%progbits
 186              	 .align 2
 187              	 .global GUI_SEGGERLIBRARY_ReadByte
 188              	 .thumb
 189              	 .thumb_func
 191              	GUI_SEGGERLIBRARY_ReadByte:
 192              	.LFB296:
 157:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** 
 158:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** /* Reads one byte of data from the OLED through SPI */
 159:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** uint8_t GUI_SEGGERLIBRARY_ReadByte(void)
 160:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** {
 193              	 .loc 1 160 0
 194              	 .cfi_startproc
 195              	 
 196              	 
 197              	.LVL14:
 198 0000 10B5     	 push {r4,lr}
 199              	.LCFI4:
 200              	 .cfi_def_cfa_offset 8
 201              	 .cfi_offset 4,-8
 202              	 .cfi_offset 14,-4
 203 0002 0B4C     	 ldr r4,.L23
 204 0004 2068     	 ldr r0,[r4]
 205              	.LVL15:
 206              	.LBB53:
 207              	.LBB54:
 208              	.LBB55:
 209              	 .loc 2 632 0
 210 0006 C36C     	 ldr r3,[r0,#76]
 211 0008 43F44043 	 orr r3,r3,#49152
 212 000c C364     	 str r3,[r0,#76]
 213              	.LVL16:
 214              	.LBE55:
 215              	.LBE54:
 216              	.LBE53:
 217              	.LBB56:
 218              	.LBB57:
 508:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** }
 219              	 .loc 2 508 0
 220 000e 4FF6FF71 	 movw r1,#65535
 221 0012 0022     	 movs r2,#0
 222 0014 FFF7FEFF 	 bl XMC_SPI_CH_Transmit
 223              	.LVL17:
 224 0018 2068     	 ldr r0,[r4]
 225              	.L20:
 226              	.LVL18:
 227              	.LBE57:
 228              	.LBE56:
 229              	.LBB58:
 230              	.LBB59:
 231              	.LBB60:
 232              	.LBB61:
 611:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** }
 233              	 .loc 2 611 0 discriminator 1
 234 001a 836C     	 ldr r3,[r0,#72]
 235              	.LBE61:
 236              	.LBE60:
 237              	 .file 3 "C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\\spi_master.h"
   1:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** /**
   2:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * @file spi_master.h
   3:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * @date 2016-04-07
   4:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *
   5:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * NOTE:
   6:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * This file is generated by DAVE. Any manual modification done to this file will be lost when the 
   7:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *
   8:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * @cond
   9:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  **************************************************************************************************
  10:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * SPI_MASTER v4.3.20 - Configures the properties of USIC channel to support SPI mode of communicat
  11:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *
  12:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * Copyright (c) 2015-2016, Infineon Technologies AG
  13:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * All rights reserved.
  14:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *
  15:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  16:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * following conditions are met:
  17:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *
  18:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *   Redistributions of source code must retain the above copyright notice, this list of conditions
  19:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *   disclaimer.
  20:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *
  21:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *   Redistributions in binary form must reproduce the above copyright notice, this list of conditi
  22:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *   following disclaimer in the documentation and/or other materials provided with the distributio
  23:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *
  24:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *   Neither the name of the copyright holders nor the names of its contributors may be used to end
  25:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *   products derived from this software without specific prior written permission.
  26:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *
  27:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  28:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  29:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  30:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  31:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  32:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  33:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  34:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *
  35:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  36:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * with Infineon Technologies AG (dave@infineon.com).
  37:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  **************************************************************************************************
  38:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *
  39:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * Change History
  40:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * --------------
  41:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *
  42:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * 2015-02-16:
  43:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *     - Initial version<br>
  44:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *
  45:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * 2015-02-20:
  46:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *     - Added 'SPI_MASTER_INPUT_INVALID' in SPI_MASTER_INPUT_t to support dynamic mode change from
  47:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *       as well<br>
  48:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *
  49:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * 2015-05-08:
  50:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *     - SPI_MASTER_SetBaudRate() and SPI_MASTER_Transfer() are added<br>
  51:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *     - C++ guard applied to API section only<br>
  52:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *     - File guard updated according to the guidelines<br>
  53:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *     - "SPI_MASTER_STATUS_BUFFER_INVALID" is added in SPI_MASTER_STATUS_t enum<br>
  54:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *     - "leading_trailing_delay" is added in APP config structure<br>
  55:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *     - "tx_data_dummy" is added in Dynamic config structure to support SPI_MASTER_Transfer() API<
  56:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *     - XMC_ASSERT() are for NULL handle check in inline APIs<br>
  57:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *     - SPI_MASTER_lTransmitHandler(), SPI_MASTER_lReceiveHandler(), SPI_MASTER_lProtocolHandler()
  58:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *       spi_master_conf.c file<br>
  59:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *
  60:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * 2015-06-20:
  61:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *     - For SPI_MASTER_Transfer(), SPI_MASTER_Receive(), SPI_MASTER_Transmit() APIs, the input dat
  62:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *       from 16-bit to 8-bit.
  63:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *     - word_length fields is added in SPI_MASTER_DYNAMIC_CONFIG_t, to support runtime change.
  64:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *     - Abort API are updated to return the status.
  65:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *
  66:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * 2015-07-07:
  67:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *     - DYNAMIC_CONFIG_t is renamed as RUNTIME_t
  68:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *
  69:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * 2015-09-30:
  70:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *     - New SPI_MASTER_STATUS_MODE_MISMATCH item is added in SPI_MASTER_STATUS_t
  71:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *
  72:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * 2015-10-08:
  73:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *     - SPI_MASTER_DMA_MAXCOUNT is exposed to the user.
  74:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *     - dx0_input_half_duplex is added to support while changing the mode to half duplex mode.
  75:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *     - SPI_MASTER_IsTxBusy() and SPI_MASTER_IsRxBusy() APIs are added to return the current state
  76:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *     - Documentation update.
  77:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *
  78:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * 2015-10-14:
  79:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *     - new variable "spi_master_config_mode" to store the actual mode generated during initialisa
  80:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *
  81:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * 2016-04-07:
  82:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *     - runtime variable are made as volatile.
  83:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *
  84:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * @endcond
  85:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *
  86:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  */
  87:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** 
  88:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** #ifndef SPI_MASTER_H
  89:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** #define SPI_MASTER_H
  90:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** /**************************************************************************************************
  91:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * HEADER FILES
  92:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  **************************************************************************************************
  93:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** #include <xmc_gpio.h>
  94:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** #include <xmc_scu.h>
  95:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** #include <xmc_spi.h>
  96:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** #include <DAVE_Common.h>
  97:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** #include "spi_master_conf.h"
  98:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** 
  99:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** #if((SPI_MASTER_DMA_TRANSMIT_MODE == 1U) || (SPI_MASTER_DMA_RECEIVE_MODE == 1U))
 100:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** #include "./GLOBAL_DMA/global_dma.h"
 101:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** #endif
 102:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** 
 103:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** /**************************************************************************************************
 104:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * MACROS
 105:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  **************************************************************************************************
 106:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** #if (!((XMC_LIB_MAJOR_VERSION == 2U) && \
 107:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****        (XMC_LIB_MINOR_VERSION >= 1U) && \
 108:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****        (XMC_LIB_PATCH_VERSION >= 6U)))
 109:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** #error "SPI_MASTER requires XMC Peripheral Library v2.1.6 or higher"
 110:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** #endif
 111:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** 
 112:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** 
 113:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** /*
 114:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Represents the maximum data size for DMA transaction*/
 115:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** #define SPI_MASTER_DMA_MAXCOUNT (4095U)
 116:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** /**************************************************************************************************
 117:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * ENUMS
 118:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  **************************************************************************************************
 119:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 120:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * @ingroup SPI_MASTER_enumerations
 121:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * @{
 122:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 123:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 124:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Return status of the SPI_MASTER APP
 125:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 126:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** typedef enum SPI_MASTER_STATUS
 127:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** {
 128:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_STATUS_SUCCESS = 0U,   /**< Status success */
 129:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_STATUS_FAILURE,        /**< Status failure */
 130:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_STATUS_BUSY,           /**< Busy state */
 131:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_STATUS_BUFFER_INVALID,  /**< If input buffer and length is invalid */
 132:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_STATUS_MODE_MISMATCH   /**< API invoked by a handle configured with different mode.
 133:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****                                          e.g, If SPI_MASTER_StartTransmitDMA is invoked for an inst
 134:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****                                          which has transmit mode configured as "Interrupt", will
 135:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****                                          return this status.*/
 136:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** } SPI_MASTER_STATUS_t;
 137:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** 
 138:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 139:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Service ID for Transmit, Receive and Parity events
 140:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 141:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** typedef enum SPI_MASTER_SR_ID
 142:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** {
 143:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_SR_ID_0 = 0U, /**< SR-0 */
 144:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_SR_ID_1,      /**< SR-1 */
 145:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_SR_ID_2,      /**< SR-2 */
 146:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_SR_ID_3,      /**< SR-3 */
 147:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_SR_ID_4,      /**< SR-4 */
 148:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_SR_ID_5       /**< SR-5 */
 149:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** } SPI_MASTER_SR_ID_t;
 150:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** 
 151:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 152:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Slave select signals
 153:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 154:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** typedef enum SPI_MASTER_SS_SIGNAL
 155:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** {
 156:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_SS_SIGNAL_0 = 0U, /**< Slave select 0 */
 157:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_SS_SIGNAL_1,      /**< Slave select 1 */
 158:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_SS_SIGNAL_2,      /**< Slave select 2 */
 159:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_SS_SIGNAL_3,      /**< Slave select 3 */
 160:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_SS_SIGNAL_4,      /**< Slave select 4 */
 161:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_SS_SIGNAL_5,      /**< Slave select 5 */
 162:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_SS_SIGNAL_6,      /**< Slave select 6 */
 163:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_SS_SIGNAL_7       /**< Slave select 7 */
 164:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** } SPI_MASTER_SS_SIGNAL_t;
 165:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** 
 166:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 167:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Enum type which defines Receive input list
 168:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 169:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** typedef enum SPI_MASTER_INPUT
 170:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** {
 171:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_INPUT_A = 0U, /**< Input-A */
 172:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_INPUT_B,      /**< Input-B */
 173:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_INPUT_C,      /**< Input-C */
 174:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_INPUT_D,      /**< Input-D */
 175:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_INPUT_E,      /**< Input-E */
 176:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_INPUT_F,      /**< Input-F */
 177:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_INPUT_G,      /**< Input-G */
 178:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_INPUT_INVALID /**< This is to check during mode switch */
 179:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** } SPI_MASTER_INPUT_t;
 180:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** 
 181:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 182:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Enum used to identify the transfer type used for either transmit or receive function.
 183:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 184:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** typedef enum SPI_MASTER_TRANSFER_MODE
 185:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** {
 186:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_TRANSFER_MODE_INTERRUPT,  /**< Implement data transmit or receive using interrupts */
 187:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_TRANSFER_MODE_DMA,        /**< Implement data transmit or receive using DMA */
 188:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_TRANSFER_MODE_DIRECT      /**< This configuration exposes signals for external APP con
 189:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** } SPI_MASTER_TRANSFER_MODE_t;
 190:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 191:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * @}
 192:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 193:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** 
 194:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** typedef void (*SPI_MASTER_functionhandler)(void);
 195:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** typedef SPI_MASTER_STATUS_t (*SPI_MASTER_lInit_functionhandler)(void);
 196:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** 
 197:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** /**************************************************************************************************
 198:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** * DATA STRUCTURES
 199:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** ***************************************************************************************************
 200:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 201:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** * @ingroup SPI_MASTER_datastructures
 202:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** * @{
 203:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** */
 204:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** 
 205:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 206:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Port pin selection for communication
 207:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 208:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** typedef struct SPI_MASTER_GPIO
 209:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** {
 210:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****   XMC_GPIO_PORT_t* port;  /**< Reference to the port configuration */
 211:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****   uint8_t pin;  /**< Selected pin */
 212:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** } SPI_MASTER_GPIO_t;
 213:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** 
 214:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 215:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Pin configuration for the selected pins
 216:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 217:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** typedef struct SPI_MASTER_GPIO_CONFIG
 218:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** {
 219:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****   XMC_GPIO_CONFIG_t port_config;  /**< Properties of the port pin */
 220:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****   XMC_GPIO_HWCTRL_t hw_control;  /**<  hardware control characteristics of the pin */
 221:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****   XMC_SPI_CH_SLAVE_SELECT_t slave_select_ch;  /**<  Indicates the mapped slave select line  */
 222:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** } SPI_MASTER_GPIO_CONFIG_t;
 223:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** 
 224:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 225:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Configuration parameters of SPI_MASTER APP
 226:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 227:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  typedef struct SPI_MASTER_CONFIG
 228:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** {
 229:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****   XMC_SPI_CH_CONFIG_t * const channel_config;         /**< Reference to SPI configuration structure
 230:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_lInit_functionhandler fptr_spi_master_config;  /**< Function pointer to configure the 
 231:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** 
 232:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****   /* Port configuration */
 233:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****   const SPI_MASTER_GPIO_t* const mosi_0_pin;               /**< Reference to mosi 0 pin */
 234:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****   const SPI_MASTER_GPIO_CONFIG_t* const mosi_0_pin_config; /**< Reference to mosi 0 pin configurati
 235:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****   const SPI_MASTER_GPIO_t* const mosi_1_pin;               /**< Reference to mosi 1 pin */
 236:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****   const SPI_MASTER_GPIO_CONFIG_t* const mosi_1_pin_config; /**< Reference to mosi 1 pin configurati
 237:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****   const SPI_MASTER_GPIO_t* const mosi_2_pin;               /**< Reference to mosi 2 pin */
 238:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****   const SPI_MASTER_GPIO_CONFIG_t* const mosi_2_pin_config; /**< Reference to mosi 2 pin configurati
 239:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****   const SPI_MASTER_GPIO_t* const mosi_3_pin;               /**< Reference to mosi 3 pin */
 240:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****   const SPI_MASTER_GPIO_CONFIG_t* const mosi_3_pin_config; /**< Reference to mosi 3 pin configurati
 241:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****   const SPI_MASTER_GPIO_t* const sclk_out_pin;             /**< Reference to sclk out pin */
 242:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****   const SPI_MASTER_GPIO_CONFIG_t* const sclk_out_pin_config;/**< Reference to shift clock pin confi
 243:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****   const SPI_MASTER_GPIO_t* const slave_select_pin[8];      /**< Reference to slave select pin */
 244:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****   const SPI_MASTER_GPIO_CONFIG_t* const slave_select_pin_config[8]; /**< Reference to slave select 
 245:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_functionhandler tx_cbhandler;            /**< callback handler for end of transmission
 246:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_functionhandler rx_cbhandler;            /**< callback handler for end of reception */
 247:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_functionhandler parity_cbhandler;        /**< callback handler for end of parity error
 248:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****   /* FIFO configuration */
 249:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****   XMC_USIC_CH_FIFO_SIZE_t tx_fifo_size;               /**< Number of FIFO entries assigned to the t
 250:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****   XMC_USIC_CH_FIFO_SIZE_t rx_fifo_size;               /**< Number of FIFO entries assigned to the r
 251:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** 
 252:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****   /* Clock Settings */
 253:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****   XMC_SPI_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_t shift_clk_passive_level; /**< Baudrate Generator shift
 254:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_TRANSFER_MODE_t transmit_mode;           /**< Indicates how the transmit mode is being
 255:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_TRANSFER_MODE_t receive_mode;            /**< Indicates how the receive mode is being 
 256:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****   XMC_SPI_CH_MODE_t  spi_master_config_mode;          /**< Defines the SPI transmit mode being used
 257:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****   uint8_t slave_select_lines;                         /**< Number of slave select lines being used 
 258:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****   uint8_t leading_trailing_delay;                     /**< Delay before and after each frame in ter
 259:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_SR_ID_t tx_sr;                           /**< Service request number assigned to trans
 260:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_SR_ID_t rx_sr;                           /**< Service request number assigned to recei
 261:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_SR_ID_t parity_sr;                       /**< Service request number assigned to recei
 262:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** } SPI_MASTER_CONFIG_t;
 263:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** 
 264:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 265:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Structure to hold the dynamic variables for the SPI_MASTER communication.
 266:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 267:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** typedef struct SPI_MASTER_RUNTIME
 268:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** {
 269:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****   uint32_t word_length;                              /**< Indicates the length of the data word */
 270:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****   uint32_t tx_data_count;                            /**< Number of bytes of data to be transmitted
 271:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****   volatile uint32_t tx_data_index;                   /**< Index to the byte to be transmitted next 
 272:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****                                                           buffer */
 273:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****   uint32_t rx_data_count;                            /**< Number of bytes of data to be received*/
 274:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****   volatile uint32_t rx_data_index;                   /**< Indicates the number of bytes currently a
 275:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****                                                           rx_data buffer */
 276:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****   uint8_t* rx_data;                                  /**< Pointer to the receive data buffer*/
 277:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****   uint8_t* tx_data;                                  /**< Pointer to the transmit data buffer*/
 278:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****   volatile XMC_SPI_CH_MODE_t  spi_master_mode;       /**< Defines the SPI transmit mode being used 
 279:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_INPUT_t dx0_input;                      /**< DX0 input channel used for Rx input, This
 280:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****                                                           mode is changed to full duplex mode */
 281:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_INPUT_t dx0_input_half_duplex;          /**< DX0 input channel used for Rx input, This
 282:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****                                                           mode is changed to half duplex mode */
 283:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****   volatile bool  rx_busy;                            /**< Status flag to indicate busy when a recep
 284:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****   volatile bool  tx_busy;                            /**< Status flag to indicate busy when a trans
 285:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****   volatile bool  tx_data_dummy;                      /**< Status flag to indicate, dummy data is be
 286:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****   volatile bool  rx_data_dummy;                      /**< Status flag to indicate, receive data has
 287:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****                                                           not */
 288:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  } SPI_MASTER_RUNTIME_t;
 289:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** 
 290:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** 
 291:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 292:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Initialization parameters of SPI_MASTER APP
 293:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 294:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** typedef struct SPI_MASTER
 295:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** {
 296:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****   XMC_USIC_CH_t* const channel; /**< Reference to SPI channel */
 297:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****   const SPI_MASTER_CONFIG_t * const config; /**< Reference to the SPI_MASTER configuration structur
 298:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****   SPI_MASTER_RUNTIME_t * const runtime;  /**< Reference to SPI_MASTER dynamic configuration structu
 299:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** #if ((SPI_MASTER_DMA_TRANSMIT_MODE == 1U) || (SPI_MASTER_DMA_RECEIVE_MODE == 1U))
 300:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****   const GLOBAL_DMA_t * const global_dma;
 301:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** #endif
 302:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** #if (SPI_MASTER_DMA_TRANSMIT_MODE == 1U)
 303:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****   const XMC_DMA_CH_CONFIG_t * const dma_ch_tx_config; /**< Reference to the DMA configuration struc
 304:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** #endif
 305:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** #if (SPI_MASTER_DMA_RECEIVE_MODE == 1U)
 306:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****   const XMC_DMA_CH_CONFIG_t * const dma_ch_rx_config; /**< Reference to the DMA configuration struc
 307:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****   const GLOBAL_DMA_t * const global_dma_rx;
 308:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****   const uint8_t dma_ch_rx_number;
 309:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** #endif
 310:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** #if (SPI_MASTER_DMA_TRANSMIT_MODE == 1U)
 311:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****   const uint8_t dma_ch_tx_number;
 312:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** #endif
 313:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** } SPI_MASTER_t;
 314:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** 
 315:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 316:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * @}
 317:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 318:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** /**************************************************************************************************
 319:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** * API Prototypes
 320:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** ***************************************************************************************************
 321:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** #ifdef __cplusplus
 322:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** extern "C" {
 323:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** #endif
 324:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 325:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * @ingroup SPI_MASTER_apidoc
 326:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * @{
 327:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 328:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 329:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Get SPI_MASTER APP version
 330:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * @return DAVE_APP_VERSION_t APP version information (major, minor and patch number)
 331:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
 332:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * \par<b>Description:</b><br>
 333:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * The function can be used to check application software compatibility with a
 334:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * specific version of the APP.
 335:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 336:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * Example Usage:
 337:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * @code
 338:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * #include <DAVE.h>
 339:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * int main(void)
 340:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * {
 341:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *   DAVE_STATUS_t status;
 342:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *   DAVE_APP_VERSION_t app_version;
 343:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 344:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *   status = DAVE_Init();    // SPI_MASTER_Init() is called from DAVE_Init()
 345:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 346:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *   app_version = SPI_MASTER_GetAppVersion();
 347:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 348:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *   if (app_version.major != 4U)
 349:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
 350:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *     // Probably, not the right version.
 351:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
 352:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 353:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *   while(1U)
 354:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
 355:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
 356:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *   return 1;
 357:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * }
 358:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * @endcode<BR>
 359:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 360:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** DAVE_APP_VERSION_t SPI_MASTER_GetAppVersion(void);
 361:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** 
 362:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 363:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Initialize the SPI channel as per the configuration made in GUI.
 364:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param handle Pointer to static and dynamic content of APP configuration.
 365:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * @return SPI_MASTER_STATUS_t: Status of SPI_MASTER driver initialization.\n
 366:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *                    SPI_MASTER_STATUS_SUCCESS - on successful initialization.\n
 367:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *                    SPI_MASTER_STATUS_FAILURE - if initialization fails.\n
 368:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 369:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * \par<b>Description:</b><br>
 370:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * Initializes IO pins used for the SPI_MASTER communication and configures USIC registers based on
 371:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * provided in the GUI. Calculates divider values PDIV and STEP for a precise baudrate. It also ena
 372:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * interrupt flags and service request values.
 373:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
 374:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 375:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * Example Usage:
 376:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * @code
 377:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *  #include <DAVE.h>         //Declarations from DAVE Code Generation (includes SFR declaration)
 378:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 379:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *  int main(void)
 380:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *  {
 381:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *    DAVE_STATUS_t status;
 382:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 383:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *    status = DAVE_Init();    // SPI_MASTER_Init() is called from DAVE_Init()
 384:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 385:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *    if(status == DAVE_STATUS_SUCCESS)
 386:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *    {
 387:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *        while(1U)
 388:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *        {
 389:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *        }
 390:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *    }
 391:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *    else
 392:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *    {
 393:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *     XMC_DEBUG("main: Application initialization failed");
 394:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *     while(1U)
 395:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *     {
 396:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *     }
 397:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *    }
 398:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *     return 1U;
 399:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * }
 400:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *  @endcode
 401:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 402:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** SPI_MASTER_STATUS_t SPI_MASTER_Init(SPI_MASTER_t* const handle);
 403:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** 
 404:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 405:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Set the communication mode along with required port configuration.
 406:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 407:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param handle handle Pointer to static and dynamic content of APP configuration.
 408:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param mode SPI working mode
 409:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 410:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * @return  SPI_MASTER_STATUS_t
 411:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *          SPI_MASTER_STATUS_SUCCESS  : if updation of settings are successful\n
 412:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *          SPI_MASTER_STATUS_FAILURE  : if mode is not supported by the selected pins\n
 413:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *          SPI_MASTER_STATUS_BUSY     : if SPI channel is busy with transmit or receive operation\
 414:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
 415:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 416:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * \par<b>Description:</b><br>
 417:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * To change the mode of communication, it is advised to generate the code in Quad/Dual mode initia
 418:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * the mode will be taken care by the APP.
 419:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * <ul>
 420:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * <li>If code is generated for Quad mode, it is possible to change to other modes like Dual, Half 
 421:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * <li>If code is generated for Dual mode, it is possible to change to other modes like Half Duplex
 422:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * <li>If code is generated for full-duplex mode, it is possible to change to Half Duplex only </li
 423:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * </ul>
 424:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * 
 425:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
 426:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 427:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * Example Usage:
 428:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
 429:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * @code
 430:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * #include <DAVE.h>
 431:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 432:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *  //Precondition:
 433:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *  //Configure the SPI_MASTER APP operation mode as 'Quad SPI'.
 434:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *  //Description:
 435:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *  //The following code changes the SPI master device mode to Full duplex mode and starts sending 
 436:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *  //the buffer.
 437:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 438:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 439:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * int main(void)
 440:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * {
 441:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *   DAVE_STATUS_t status;
 442:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *   SPI_MASTER_STATUS_t spi_status;
 443:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *   uint8_t Send_Data[] = "Infineon DAVE application.";
 444:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 445:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *   status = DAVE_Init();    // SPI_MASTER_Init() is called from DAVE_Init()
 446:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *   if(status == DAVE_STATUS_SUCCESS)
 447:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
 448:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *    spi_status = SPI_MASTER_SetMode(&SPI_MASTER_0, XMC_SPI_CH_MODE_STANDARD);
 449:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *    if(spi_status == SPI_MASTER_STATUS_SUCCESS)
 450:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *    {
 451:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *       SPI_MASTER_Transmit(&SPI_MASTER_0, Send_Data, sizeof(Send_Data));
 452:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *    }
 453:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
 454:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *   else
 455:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
 456:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *    XMC_DEBUG("main: Application initialization failed");
 457:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *    while(1U)
 458:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *    {
 459:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *    }
 460:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
 461:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *    return 1U;
 462:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * }
 463:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * @endcode<BR>
 464:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 465:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** 
 466:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** SPI_MASTER_STATUS_t SPI_MASTER_SetMode(SPI_MASTER_t* const handle, const XMC_SPI_CH_MODE_t mode);
 467:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** 
 468:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 469:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Set the required baud rate during runtime.
 470:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 471:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param handle handle Pointer to static and dynamic content of APP configuration.
 472:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param baud_rate required baud rate
 473:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 474:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * @return  SPI_MASTER_STATUS_t
 475:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *          SPI_MASTER_STATUS_SUCCESS  : if updation of baud rate is successful\n
 476:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *          SPI_MASTER_STATUS_FAILURE  : if updation is failed\n
 477:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *          SPI_MASTER_STATUS_BUSY     : if SPI channel is busy with other operation\n
 478:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
 479:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 480:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * \par<b>Description:</b><br>
 481:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * While setting the baud rate to avoid noise of the port pins, all the pins are changed to input. 
 482:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * required baud again ports are initialised with the configured settings.
 483:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
 484:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 485:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * Example Usage:
 486:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
 487:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * @code
 488:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * #include <DAVE.h>
 489:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 490:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *  //Description:
 491:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *  //The following code changes the SPI master baud rate to 9600 and starts sending the data store
 492:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *  //the buffer.
 493:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 494:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * int main(void)
 495:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * {
 496:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *   DAVE_STATUS_t status;
 497:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *   SPI_MASTER_STATUS_t spi_status;
 498:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *   uint8_t Send_Data[] = "Infineon DAVE application.";
 499:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *   uint32_t baud_rate;
 500:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 501:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *   status = DAVE_Init();    // SPI_MASTER_Init() is called from DAVE_Init()
 502:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *   if(status == DAVE_STATUS_SUCCESS)
 503:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
 504:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *     baud_rate = 9600U;
 505:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 506:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *     spi_status = SPI_MASTER_SetBaudRate(&SPI_MASTER_0, baud_rate);
 507:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 508:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *     if(spi_status == SPI_MASTER_STATUS_SUCCESS)
 509:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *     {
 510:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *       SPI_MASTER_Transmit(&SPI_MASTER_0, Send_Data, sizeof(Send_Data));
 511:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *     }
 512:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
 513:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *   else
 514:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
 515:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *    XMC_DEBUG("main: Application initialization failed");
 516:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *    while(1U)
 517:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *    {
 518:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *    }
 519:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
 520:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *    return 1U;
 521:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * }
 522:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * @endcode<BR>
 523:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 524:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** SPI_MASTER_STATUS_t SPI_MASTER_SetBaudRate(SPI_MASTER_t* const handle, const uint32_t baud_rate);
 525:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** 
 526:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 527:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Transmits the specified number of data words and execute the callback defined in GUI, if 
 528:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 529:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param handle Pointer to static and dynamic content of APP configuration.
 530:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param dataptr Pointer to data
 531:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param count number of data words (word length configured) to be transmitted
 532:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 533:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * @return  SPI_MASTER_STATUS_t
 534:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *          SPI_MASTER_STATUS_SUCCESS : if transmit is successful\n
 535:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *          SPI_MASTER_STATUS_BUSY : if SPI channel is busy with other operation
 536:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
 537:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 538:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * \par<b>Description:</b><br>
 539:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** * Transmits data using the SPI channel as a master device. Transmission is accomplished using the t
 540:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * as configured in the UI.<br>
 541:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * <b>Interrupt:</b><br>
 542:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * The data transmission is accomplished using transmit interrupt. User can configure
 543:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * a callback function in the APP UI. When the data is fully transmitted, the callback
 544:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * function will be executed. If transmit FIFO is enabled, the trigger limit is set to 1.
 545:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * So the transmit interrupt will be generated when all the data in FIFO is moved out of FIFO.
 546:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * The APP handle's runtime structure is used to store the data pointer, count, data index
 547:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * and status of transmission. This function only registers a data transmission request if
 548:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * there is no active transmission in progress. Actual data transmission happens in the transmit
 549:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * interrupt service routine. A trigger is generated for the transmit interrupt to start loading
 550:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * the data to the transmit buffer. If transmit FIFO is configured, the data is filled into the FIF
 551:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * Transmit interrupt will be generated subsequently when the transmit FIFO is empty. At this
 552:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * point of time, if there is some more data to be transmitted, it is loaded to the FIFO again.
 553:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * When FIFO is not enabled, data is transmitted one byte at a time. On transmission of each byte
 554:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * an interrupt is generated and the next byte is transmitted in the interrupt service routine.
 555:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * Callback function is executed when all the data bytes are transmitted.
 556:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * If a callback function is not configured, user has to poll for the value of \a tx_busy flag of
 557:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * the APP handle structure( \a handle->runtime->tx_busy ) to check for
 558:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * the completion of data transmission or use SPI_MASTER_IsTxBusy() API.<br>
 559:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * <b>DMA:</b><br>
 560:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * DMA mode is available only in XMC4x family of microcontrollers. A DMA channel is configured to p
 561:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * data to the SPI channel transmit buffer. This removes the load off the CPU. This API will only c
 562:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * and enable the DMA channel by specifying the data buffer and count of bytes to transmit. Rest is
 563:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * care without the CPU's intervention. User can configure a callback function in the APP UI. When 
 564:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * transmission is complete, the callback function will be executed. FIFO will not be used in DMA m
 565:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * Receive start interrupt is configured for triggering the DMA channel. So each byte is transmitte
 566:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * the background through the DMA channel.
 567:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * If the callback function is not configured, \a handle->runtime->tx_busy flag can be checked to
 568:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * verify if the transmission is complete.
 569:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * <b>Direct:</b><br>
 570:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * Data will be transmitted using polling method. Status flags are used to check if data can be tra
 571:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * <i><b> Note:</b> In Direct mode, the API blocks the CPU until the count of bytes requested is tr
 572:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 573:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * Example Usage:
 574:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
 575:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * @code
 576:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * #include <DAVE.h>
 577:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 578:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * //Description:
 579:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * //Transmits "Infineon" to the slave device.
 580:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 581:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 582:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * int main(void)
 583:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * {
 584:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *   DAVE_STATUS_t status;
 585:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 586:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *   uint8_t Send_Data[] = "Infineon";
 587:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 588:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *   status = DAVE_Init();    // SPI_MASTER_Init() is called from DAVE_Init()
 589:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *   if(status == DAVE_STATUS_SUCCESS)
 590:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
 591:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *     if(SPI_MASTER_Transmit(&SPI_MASTER_0, Send_Data, sizeof(Send_Data)) == SPI_MASTER_STATUS_SUC
 592:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *     {
 593:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *       while(SPI_MASTER_0.runtime->tx_busy)
 594:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *       {
 595:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *       }
 596:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *     }
 597:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
 598:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *   else
 599:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
 600:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *    XMC_DEBUG("main: Application initialization failed");
 601:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *    while(1U)
 602:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *    {
 603:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *    }
 604:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
 605:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *    return 1U;
 606:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * }
 607:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * @endcode<BR> </p>
 608:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 609:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 610:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** SPI_MASTER_STATUS_t SPI_MASTER_Transmit(const SPI_MASTER_t *const handle, uint8_t* dataptr, uint32_
 611:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** 
 612:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 613:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Receives the specified number of data words and execute the callback defined in GUI, if e
 614:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 615:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param handle Pointer to static and dynamic content of APP configuration.
 616:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param dataptr Pointer to data in which value is written
 617:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param count number of data words (word length configured) to be read
 618:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 619:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * @return  SPI_MASTER_STATUS_t
 620:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *          SPI_MASTER_STATUS_SUCCESS : if read is successful\n
 621:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *          SPI_MASTER_STATUS_BUSY : if SPI channel is busy with other operation
 622:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
 623:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * \par<b>Description:</b><br>
 624:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * Data will be received from the SPI slave synchronously. After the requested number of data bytes
 625:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * optionally, the user configured callback function will be executed.
 626:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * Data reception is accomplished using the receive mode selected in the UI.
 627:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * <b>Interrupt:</b><br>
 628:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * Based on the UI configuration, either standard receive buffer(RBUF) or receive FIFO(OUT) is used
 629:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * for data reception. An interrupt is configured for reading received data from the bus. This func
 630:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * only registers a request to receive a number of data bytes from a USIC channel. If FIFO is
 631:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * configured for reception, the FIFO limit is dynamically configured to optimally utilize the
 632:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * CPU load. Before starting data reception, the receive buffers are flushed. So only those data, r
 633:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * after calling the API, will be placed in the user buffer.
 634:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * When all the requested number of data bytes are received, the configured callback
 635:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * function will be executed.
 636:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * If a callback function is not configured, the user has to poll for the value of the
 637:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * variable, \a handle->runtime->rx_busy to be false. The value is updated to \a false when all the
 638:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * requested number of data bytes are received.
 639:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * <br>
 640:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * <b>DMA:</b><br>
 641:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * DMA mode is available only in XMC4x family of microcontrollers. In this mode, a DMA channel is
 642:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * configured for receiving data from standard receive buffer(RBUF) to the user buffer. By calling
 643:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * this API, the DMA channel destination address is configured to the user buffer and the channel i
 644:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * enabled. Receive FIFO will not be used when the receive mode is DMA.
 645:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * Before starting data reception, the receive buffers are flushed. So only those data, received
 646:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * after calling the API, will be placed in the user buffer.
 647:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * When all the requested number of data bytes are received, the configured callback
 648:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * function will be executed.
 649:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * If a callback function is not configured, the user has to poll for the value of the
 650:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * variable, \a handle->runtime->rx_busy to be false. The value is updated to \a false when all the
 651:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * requested number of data bytes are received.
 652:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * <br>
 653:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * <b>Direct</b><br>
 654:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * In Direct receive mode, neither interrupt nor DMA is used. The API polls
 655:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * the receive flag to read the received data and waits for all the requested number of bytes to
 656:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * be received. Based on FIFO configuration, either RBUF or OUT register is used for reading receiv
 657:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * data. Before starting data reception, the receive buffers are flushed. So only those data, recei
 658:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * after calling the API, will be placed in the user buffer.
 659:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * <i><b> Note:</b> In Direct mode, the API blocks the CPU until the count of bytes requested is re
 660:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
 661:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 662:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * Example Usage:
 663:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 664:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * @code
 665:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * #include <DAVE.h>
 666:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 667:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * //Description:
 668:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * //Receives 10 bytes of data from slave.
 669:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 670:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * int main(void)
 671:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * {
 672:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *   DAVE_STATUS_t status;
 673:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *   uint8_t ReadData[10];
 674:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 675:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *   status =  DAVE_Init();    // SPI_MASTER_Init() is called from DAVE_Init()
 676:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *   if(status == DAVE_STATUS_SUCCESS)
 677:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
 678:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *     if(SPI_MASTER_Receive(&SPI_MASTER_0, ReadData, 10U))
 679:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *     {
 680:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *       while(SPI_MASTER_0.runtime->rx_busy)
 681:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *       {
 682:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *       }
 683:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *     }
 684:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
 685:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *   else
 686:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
 687:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *    XMC_DEBUG("main: Application initialization failed");
 688:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *    while(1U)
 689:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *    {
 690:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *    }
 691:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
 692:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *    return 1U;
 693:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * }
 694:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * @endcode<BR>
 695:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 696:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** SPI_MASTER_STATUS_t SPI_MASTER_Receive(const SPI_MASTER_t *const handle, uint8_t* dataptr, uint32_t
 697:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** 
 698:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 699:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Transmits and Receives the specified number of data words and execute the receive callbac
 700:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *        in GUI.
 701:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 702:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param handle Pointer to static and dynamic content of APP configuration.
 703:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param tx_dataptr Pointer to data buffer which has to be send
 704:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param rx_dataptr Pointer to data buffer where the received data has to be stored.
 705:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param count number of data words (word length configured) to be read and write
 706:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 707:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * @return  SPI_MASTER_STATUS_t
 708:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *          SPI_MASTER_STATUS_SUCCESS   : if transfer of data is successful\n
 709:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *          SPI_MASTER_STATUS_FAILURE   : if transfer of data is failed (or) in other than standard
 710:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *          SPI_MASTER_STATUS_BUFFER_INVALID : if passed buffers are NULL pointers (or) length of d
 711:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
 712:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * \par<b>Description:</b><br>
 713:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * Transmits and receives data simultaneously using the SPI channel as a master device. API is appl
 714:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * <i>Full duplex</> operation mode. Data transfer happens based on the individual modes configured
 715:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * reception.<br>
 716:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * Two data pins MOSI and MISO will be used for receiving and transmitting data respectively. A cal
 717:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * configured to execute after completing the transfer when 'Interrupt' or 'DMA' mode is used. The 
 718:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * should be configured for <i>End of receive/transfer callback</i> in the 'Interrupt Settings' tab
 719:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * function will be executed when the last word of data is received.
 720:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 721:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
 722:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 723:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * Example Usage:
 724:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 725:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * @code
 726:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * #include <DAVE.h>
 727:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 728:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * //Precondition: Operation mode should be 'Full Duplex"
 729:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * //Description:
 730:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * //Transmits and Receives 10 bytes of data from slave in parallel.
 731:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 732:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * int main(void)
 733:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * {
 734:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *   DAVE_STATUS_t status;
 735:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *   uint8_t ReadData[10];
 736:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *   uint8_t SendData[10] = {0x1, 0x2, 0x3, 0x4, 0x5, 0x6, 0x7, 0x8, 0x9, 0xA};
 737:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 738:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *   status =  DAVE_Init();    // SPI_MASTER_Init() is called from DAVE_Init()
 739:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 740:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *   if(status == DAVE_STATUS_SUCCESS)
 741:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
 742:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *     SPI_MASTER_Transfer(&SPI_MASTER_0, SendData, ReadData, 10);
 743:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
 744:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *   else
 745:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
 746:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *     XMC_DEBUG("main: Application initialization failed");
 747:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *     while(1U)
 748:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *     {
 749:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *     }
 750:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
 751:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *    return 1U;
 752:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * }
 753:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * @endcode<BR>
 754:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 755:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** SPI_MASTER_STATUS_t SPI_MASTER_Transfer(const SPI_MASTER_t *const handle,
 756:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****                                         uint8_t* tx_dataptr,
 757:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****                                         uint8_t* rx_dataptr,
 758:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****                                         uint32_t count);
 759:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** 
 760:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** #if (SPI_MASTER_INTERRUPT_RECEIVE_MODE == 1U)
 761:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 762:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Receives the specified number of data words and execute the callback defined in GUI, if e
 763:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 764:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param handle Pointer to static and dynamic content of APP configuration.
 765:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param dataptr Pointer to data in which value is written
 766:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param count number of data words (word length configured) to be read
 767:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 768:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * @return  SPI_MASTER_STATUS_t
 769:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *          SPI_MASTER_STATUS_SUCCESS : if read is successful\n
 770:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *          SPI_MASTER_STATUS_BUSY : if SPI channel is busy with other operation
 771:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *          SPI_MASTER_STATUS_MODE_MISMATCH if receive mode is DMA.
 772:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
 773:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * \par<b>Description:</b><br>
 774:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * After receiving the specified number of words (word length configured), the user configured call
 775:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * is executed, if it is enabled. If a callback function is not configured on the APP UI, the user 
 776:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * the status of rx_busy variable of the APP handle structure. Based on the UI configuration, eithe
 777:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * buffer or receive FIFO is used for data reception. An interrupt is configured for received data 
 778:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * function only registers a request to receive a number of data bytes from a SPI channel. If FIFO 
 779:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * reception, the FIFO limit is dynamically configured to optimally utilize the CPU load.
 780:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * <a href="..\group___architecture___description.html#spi_master_receive_irq_flow_chart">Click her
 781:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 782:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
 783:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 784:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * Example Usage:
 785:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 786:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * @code
 787:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * #include <DAVE.h>
 788:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 789:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * int main(void)
 790:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * {
 791:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *   DAVE_STATUS_t status;
 792:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *   uint8_t ReadData[10];
 793:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 794:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *   status =  DAVE_Init();    // SPI_MASTER_Init() is called from DAVE_Init()
 795:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *   if(status == DAVE_STATUS_SUCCESS)
 796:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
 797:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *     if(SPI_MASTER_StartReceiveIRQ(&SPI_MASTER_0, ReadData, 10U))
 798:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *     {
 799:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *       while(SPI_MASTER_0.runtime->rx_busy)
 800:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *       {
 801:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *       }
 802:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *       SPI_MASTER_Transmit(&SPI_MASTER_0, ReadData, 10U);
 803:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *     }
 804:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
 805:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *   else
 806:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
 807:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *    XMC_DEBUG("main: Application initialization failed");
 808:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *    while(1U)
 809:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *    {
 810:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *    }
 811:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
 812:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *    return 1U;
 813:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * }
 814:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * @endcode<BR>
 815:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 816:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** SPI_MASTER_STATUS_t SPI_MASTER_StartReceiveIRQ(const SPI_MASTER_t *const handle, uint8_t* dataptr, 
 817:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** #endif
 818:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** 
 819:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** #if(SPI_MASTER_INTERRUPT_TRANSMIT_MODE == 1U)
 820:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 821:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Transmits the specified number of data words and execute the callback defined in GUI, if 
 822:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 823:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param handle Pointer to static and dynamic content of APP configuration.
 824:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param dataptr Pointer to data
 825:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param count number of data words (word length configured) to be transmitted
 826:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 827:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * @return  SPI_MASTER_STATUS_t
 828:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *          SPI_MASTER_STATUS_SUCCESS : if transmit is successful\n
 829:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *          SPI_MASTER_STATUS_BUSY : if SPI channel is busy with other operation
 830:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *          SPI_MASTER_STATUS_BUFFER_INVALID : if the data_ptr is NULL or count is 0. \n
 831:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *          SPI_MASTER_STATUS_MODE_MISMATCH : if transmit mode is DMA.
 832:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
 833:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 834:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * \par<b>Description:</b><br>
 835:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * The data transmission is accomplished using transmit interrupt. After transmitting the total dat
 836:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * function is executed. If transmit FIFO is enabled, the trigger limit is set to 1. So the transmi
 837:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * generated when all the data in FIFO is moved from FIFO. The function uses APP handle's dynamic s
 838:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * the data pointer, count, data index and status of transmission. This function only registers a d
 839:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * request if there is no active transmission in progress. Actual data transmission happens in the 
 840:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * service routine. A trigger is generated for the transmit interrupt to start loading the data. If
 841:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * configured, the data is filled into the FIFO with trigger limit set to 1. Transmit interrupt wil
 842:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * when the transmit FIFO is empty. At this point of time, if there is some more data to be transmi
 843:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * to the FIFO again. When FIFO is not enabled, data is transmitted one byte at a time. On transmis
 844:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * an interrupt is generated and the next byte is transmitted in the interrupt service routine.
 845:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * <a href="..\group___architecture___description.html#spi_master_transmit_irq_flow_chart">Click he
 846:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 847:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * Example Usage:
 848:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
 849:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * @code
 850:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * #include <DAVE.h>
 851:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 852:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * //Pre-condition:
 853:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * //Transmit mode should be configured as "Interrupt".
 854:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * //Description:
 855:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * //Transmits "Infineon" data to slave.
 856:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 857:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * int main(void)
 858:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * {
 859:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *   DAVE_STATUS_t status;
 860:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 861:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *   uint8_t Send_Data[] = "Infineon";
 862:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 863:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *   status = DAVE_Init();    // SPI_MASTER_Init() is called from DAVE_Init()
 864:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *   if(status == DAVE_STATUS_SUCCESS)
 865:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
 866:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *     if(SPI_MASTER_StartTransmitIRQ(&SPI_MASTER_0, Send_Data, sizeof(Send_Data)) == SPI_MASTER_ST
 867:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *     {
 868:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *       while(SPI_MASTER_0.runtime->tx_busy)
 869:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *       {
 870:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *       }
 871:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *     }
 872:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
 873:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *   else
 874:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
 875:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *    XMC_DEBUG("main: Application initialization failed");
 876:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *    while(1U)
 877:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *    {
 878:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *    }
 879:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
 880:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *    return 1U;
 881:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * }
 882:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * @endcode<BR> </p>
 883:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 884:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 885:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** SPI_MASTER_STATUS_t SPI_MASTER_StartTransmitIRQ(const SPI_MASTER_t *const handle, uint8_t *addr, ui
 886:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** #endif
 887:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** 
 888:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** 
 889:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** #if(SPI_MASTER_DMA_RECEIVE_MODE == 1U)
 890:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 891:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Registers a request for receiving data over SPI_MASTER channel using DMA.
 892:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 893:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 894:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param  handle  Pointer to SPI_MASTER_t handle structure
 895:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param data_ptr  Pointer to data of type uint8_t.
 896:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param  count  Total no of bytes to be received.\n
 897:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *                \b Range: minimum= 1, maximum= 4096.
 898:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 899:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * @return  SPI_MASTER_STATUS_t: Status for receive request.\n
 900:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *                        @ref SPI_MASTER_STATUS_SUCCESS if the request is accepted.\n
 901:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *                        @ref SPI_MASTER_STATUS_BUSY if a reception is in progress.\n
 902:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *                        @ref SPI_MASTER_STATUS_BUFFER_INVALID if the data_ptr is NULL or count is
 903:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *                        @ref SPI_MASTER_STATUS_MODE_MISMATCH : if receive mode is Interrupt \n
 904:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 905:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 906:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * \par<b>Description:</b><br>
 907:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * Data will be received asynchronously. When the requested number of data bytes are received,
 908:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * optionally, the user configured callback function will be executed.
 909:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * This function only registers a request to receive a number of data bytes from a USIC channel.
 910:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * When all the requested number of data bytes are received, the configured callback
 911:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * function will be executed.
 912:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * If a callback function is not configured, the user has to poll for the value of the
 913:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * variable, \a handle->runtime->rx_busy to be false. The value is updated to \a false when all the
 914:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * requested number of data bytes are received.
 915:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * A maximum of 4096 bytes can be received in one API call. This limit is because of the DMA single
 916:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * <a href="..\group___architecture___description.html#spi_master_receive_dma_flow_chart">Click her
 917:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 918:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 919:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * Example Usage:
 920:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * @code
 921:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *   #include <DAVE.h>         //Declarations from DAVE Code Generation (includes SFR declaration)
 922:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 923:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *   //Pre condition:
 924:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *   //Receive mode should be configured to "DMA"
 925:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *   //Description: Receive 10 bytes from slave.
 926:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 927:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 928:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *   int main(void)
 929:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
 930:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *     SPI_MASTER_STATUS_t init_status;
 931:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *     uint8_t ReadData[10];
 932:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 933:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *     init_status = (SPI_MASTER_STATUS_t)SPI_MASTER_Init(&SPI_MASTER_0);
 934:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *     if(init_status == SPI_MASTER_STATUS_SUCCESS)
 935:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *     {
 936:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *       if(SPI_MASTER_StartReceiveDMA(&SPI_MASTER_0, ReadData, 10) == SPI_MASTER_STATUS_SUCCESS)
 937:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *       {
 938:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *         while(SPI_MASTER_0.runtime->rx_busy)
 939:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *         {
 940:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *         }
 941:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *       }
 942:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *     }
 943:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *     else
 944:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *     {
 945:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *      XMC_DEBUG("main: Application initialization failed");
 946:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *      while(1U)
 947:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *      {
 948:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *      }
 949:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *     }
 950:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *      return 1U;
 951:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *  }
 952:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *  @endcode
 953:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 954:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  */
 955:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** SPI_MASTER_STATUS_t SPI_MASTER_StartReceiveDMA(const SPI_MASTER_t  *const handle, uint8_t *addr, ui
 956:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** #endif
 957:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** 
 958:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** #if(SPI_MASTER_DMA_TRANSMIT_MODE == 1U)
 959:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** /**
 960:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Registers a request for transmitting data over SPI_MASTER channel using DMA.
 961:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 962:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param  handle  SPI_MASTER APP handle pointer of type @ref SPI_MASTER_t
 963:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param  data_ptr Pointer to data of type uint8_t.
 964:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param  count Total number of words to be transmitted.\n
 965:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * \b Range: minimum= 1, maximum= 4096.
 966:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 967:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * @return  SPI_MASTER_STATUS_t: Status of transmit request.\n
 968:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *                        @ref SPI_MASTER_STATUS_SUCCESS if the request is accepted.\n
 969:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *                        @ref SPI_MASTER_STATUS_BUSY if a transmission is in progress.\n
 970:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *                        @ref SPI_MASTER__STATUS_BUFFER_INVALID if the data_ptr is NULL or count i
 971:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *                        @ref SPI_MASTER_STATUS_MODE_MISMATCH : if transmit mode is Interrupt \n
 972:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 973:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * <i>Imp Note:</i> Return value should be validated by user to ensure that the
 974:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * request is registered.
 975:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 976:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * \par<b>Description:</b><br>
 977:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * The data transmission is accomplished using DMA. User can configure a callback function in the A
 978:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * is fully transmitted, the callback function will be executed.
 979:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * The function uses APP handle's runtime structure to store the status of transmission.
 980:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * This function only registers a data transmission request, if there is no active transmission in 
 981:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * data transmission happens through DMA channel. A maximum of 4095 bytes can be transmitted in one
 982:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * is because of the DMA single block size. Callback function is executed when all the data bytes a
 983:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * If a callback function is not configured, user has to poll for the value of \a tx_busy flag of
 984:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * the APP handle structure( \a handle->runtime->tx_busy ) to check for the completion of data tran
 985:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * If data more than the block size of 4095 have to be transmitted, user will have to transmit them
 986:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * multiple calls to this API.
 987:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * <a href="..\group___architecture___description.html#spi_master_transmit_dma_flow_chart">Click he
 988:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 989:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * Example Usage:
 990:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * @code
 991:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *   #include <DAVE.h>         //Declarations from DAVE Code Generation (includes SFR declaration)
 992:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 993:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *   //Pre-condition:
 994:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *   //Transmit mode should be configured as "DMA".
 995:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *   //Description: Transmits "Infineon" data to the slave
 996:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 997:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *
 998:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *   int main(void)
 999:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
1000:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *     SPI_MASTER_STATUS_t init_status;
1001:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *     uint8_t Send_Data[] = "Infineon";
1002:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1003:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *     init_status = (SPI_MASTER_STATUS_t)SPI_MASTER_Init(&SPI_MASTER_0);
1004:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *     if(init_status == SPI_MASTER_STATUS_SUCCESS)
1005:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *     {
1006:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *       if(SPI_MASTER_StartTransmitDMA(&SPI_MASTER_0, Send_Data, sizeof(Send_Data)) == SPI_MASTER_
1007:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *       {
1008:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *         while(SPI_MASTER_0.runtime->tx_busy)
1009:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *         {
1010:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *         }
1011:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *       }
1012:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *     }
1013:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *     else
1014:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *     {
1015:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *      XMC_DEBUG("main: Application initialization failed");
1016:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *      while(1U)
1017:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *      {
1018:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *      }
1019:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *     }
1020:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *      return 1U;
1021:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *  }
1022:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * @endcode
1023:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1024:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  */
1025:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** SPI_MASTER_STATUS_t SPI_MASTER_StartTransmitDMA(const SPI_MASTER_t *const handle, uint8_t *addr, ui
1026:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** #endif
1027:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** 
1028:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** /**
1029:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * @brief Returns the state of the specified interrupt flag.
1030:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1031:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param handle Pointer to static and dynamic content of APP configuration.
1032:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * @param flag Interrupt for which status is required
1033:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *             Use type @ref XMC_SPI_CH_STATUS_FLAG_t for the bitmask of events.
1034:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * @return  uint32_t status of the interrupt
1035:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
1036:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1037:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * \par<b>Description:</b><br>
1038:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * Returns the status of the events, by reading PSR register. This indicates the status of the all 
1039:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * SPI communication.
1040:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * <BR>
1041:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1042:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * Example Usage:
1043:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * @code
1044:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * #include <DAVE.h>
1045:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1046:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * //Description:
1047:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * //It transmits "Infineon" to the SPI slave. After calling the transmit API, it will poll for the
1048:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * //indication flag to know the data has shifted out or not.
1049:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1050:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * int main(void)
1051:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * {
1052:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *   DAVE_STATUS_t status;
1053:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *   uint8_t Send_Data[] = "Infineon";
1054:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1055:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *   status = DAVE_Init();    // SPI_MASTER_Init() is called from DAVE_Init()
1056:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *   if(status == DAVE_STATUS_SUCCESS)
1057:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
1058:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *     SPI_MASTER_Transmit(&SPI_MASTER_0, Send_Data, sizeof(Send_Data));
1059:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *     while(SPI_MASTER_GetFlagStatus(&SPI_MASTER_0, XMC_SPI_CH_STATUS_FLAG_TRANSMIT_SHIFT_INDICATI
1060:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
1061:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *   else
1062:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *   {
1063:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *    XMC_DEBUG("main: Application initialization failed");
1064:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *    while(1U)
1065:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *    {
1066:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *    }
1067:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *   }
1068:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *    return 1U;
1069:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * }
1070:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  * @endcode<BR>
1071:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  *
1072:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****  */
1073:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** 
1074:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** __STATIC_INLINE uint32_t SPI_MASTER_GetFlagStatus(const SPI_MASTER_t* handle, const uint32_t flag)
1075:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h **** {
1076:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****   XMC_ASSERT("SPI_MASTER_GetFlagStatus:handle NULL" , (handle != NULL));
1077:C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\spi_master.h ****   return (XMC_SPI_CH_GetStatusFlag(handle->channel) & flag);
 238              	 .loc 3 1077 0 discriminator 1
 239 001c 03F44043 	 and r3,r3,#49152
 240              	.LBE59:
 241              	.LBE58:
 161:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****   uint16_t lastword = 0;
 162:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** 
 163:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****   SPI_MASTER_ClearFlag(&SPI_INSTANCE,XMC_SPI_CH_STATUS_FLAG_RECEIVE_INDICATION |
 164:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** 		              XMC_SPI_CH_STATUS_FLAG_ALTERNATIVE_RECEIVE_INDICATION);
 165:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** 
 166:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****   XMC_SPI_CH_Receive(SPI_INSTANCE.channel, XMC_SPI_CH_MODE_STANDARD);
 167:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** 
 168:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****   while(SPI_MASTER_GetFlagStatus(&SPI_INSTANCE, XMC_SPI_CH_STATUS_FLAG_RECEIVE_INDICATION |
 242              	 .loc 1 168 0 discriminator 1
 243 0020 B3F5404F 	 cmp r3,#49152
 244 0024 F9D1     	 bne .L20
 169:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** 	                            XMC_SPI_CH_STATUS_FLAG_ALTERNATIVE_RECEIVE_INDICATION)!=
 170:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** 	                            (XMC_SPI_CH_STATUS_FLAG_RECEIVE_INDICATION |
 171:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** 	                            XMC_SPI_CH_STATUS_FLAG_ALTERNATIVE_RECEIVE_INDICATION));
 172:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** 
 173:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****   lastword = XMC_SPI_CH_GetReceivedData(SPI_INSTANCE.channel);
 245              	 .loc 1 173 0
 246 0026 FFF7FEFF 	 bl XMC_SPI_CH_GetReceivedData
 247              	.LVL19:
 174:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** 
 175:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****   return (lastword);
 176:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** }
 248              	 .loc 1 176 0
 249 002a C0B2     	 uxtb r0,r0
 250              	.LVL20:
 251 002c 10BD     	 pop {r4,pc}
 252              	.L24:
 253 002e 00BF     	 .align 2
 254              	.L23:
 255 0030 00000000 	 .word SPI_MASTER_1
 256              	 .cfi_endproc
 257              	.LFE296:
 259              	 .section .text.GUI_SEGGERLIBRARY_WriteCmdByte,"ax",%progbits
 260              	 .align 2
 261              	 .global GUI_SEGGERLIBRARY_WriteCmdByte
 262              	 .thumb
 263              	 .thumb_func
 265              	GUI_SEGGERLIBRARY_WriteCmdByte:
 266              	.LFB297:
 177:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** 
 178:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** #if (DISPLAY_8BPP == 1)
 179:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** /*
 180:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****  *  This routine writes to display controller using SPI bus, with A0 = 0
 181:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****  *
 182:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****  */
 183:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** void GUI_SEGGERLIBRARY_WriteCmdByte(uint8_t cmd)
 184:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** {
 267              	 .loc 1 184 0
 268              	 .cfi_startproc
 269              	 
 270              	 
 271              	.LVL21:
 272 0000 38B5     	 push {r3,r4,r5,lr}
 273              	.LCFI5:
 274              	 .cfi_def_cfa_offset 16
 275              	 .cfi_offset 3,-16
 276              	 .cfi_offset 4,-12
 277              	 .cfi_offset 5,-8
 278              	 .cfi_offset 14,-4
 185:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** #if (!USER_DEFINED_LCD && SPI_INTERFACE == 1)
 186:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****     /* Clear the A0 pin */
 187:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****   XMC_GPIO_SetOutputLow(IOHandle.portNo,IOHandle.pinNo);
 188:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** #endif
 189:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** 
 190:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****   XMC_SPI_CH_EnableSlaveSelect(SPI_INSTANCE.channel,SPI_INSTANCE.config->slave_select_pin_config[0]
 279              	 .loc 1 190 0
 280 0002 104C     	 ldr r4,.L29
 187:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** #endif
 281              	 .loc 1 187 0
 282 0004 104B     	 ldr r3,.L29+4
 283              	 .loc 1 190 0
 284 0006 6268     	 ldr r2,[r4,#4]
 285              	.LBB73:
 286              	.LBB74:
 287              	 .file 4 "C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc/xmc_gpio.h"
   1:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** /**
   2:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @file xmc_gpio.h
   3:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @date 2015-06-20
   4:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
   5:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @cond
   6:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
   7:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * XMClib v2.1.16 - XMC Peripheral Driver Library 
   8:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
   9:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * Copyright (c) 2015-2017, Infineon Technologies AG
  10:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * All rights reserved.                        
  11:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *                                             
  12:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * following conditions are met:   
  14:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *                                                                              
  15:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * disclaimer.                        
  17:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * 
  18:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * 
  21:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * products derived from this software without specific prior written permission.                  
  23:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *                                                                              
  24:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *                                                                              
  32:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
  35:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  36:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * Change History
  37:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * --------------
  38:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  39:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * 2015-02-20:
  40:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Initial draft<br>
  41:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Documentation improved <br>
  42:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *      
  43:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * 2015-06-20:
  44:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  45:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  46:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @endcond
  47:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  48:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  49:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** 
  50:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** #ifndef XMC_GPIO_H
  51:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_H
  52:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** 
  53:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
  54:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * HEADER FILES
  55:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
  56:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** 
  57:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc_common.h"
  58:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** 
  59:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** /**
  60:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @addtogroup XMClib XMC Peripheral Library
  61:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @{
  62:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  63:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** 
  64:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** /**
  65:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @addtogroup GPIO
  66:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @brief General Purpose Input Output (GPIO) driver for the XMC microcontroller family.
  67:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  68:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * GPIO driver provide a generic and very flexible software interface for all standard digital I/O 
  69:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * Each port slice has individual interfaces for the operation as General Purpose I/O and it furthe
  70:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * connectivity to the on-chip periphery and the control for the pad characteristics. 
  71:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  72:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * The driver is divided into Input and Output mode.
  73:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  74:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * Input mode features:
  75:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Configuration structure XMC_GPIO_CONFIG_t and initialization function XMC_GPIO_Init()
  76:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of weak pull-up or pull-down device. Configuration structure XMC_GPIO_MO
  77:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC1
  78:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of input hysteresis. XMC_GPIO_SetInputHysteresis()
  79:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
  80:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  81:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * 
  82:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * Output mode features:
  83:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of push pull/open drain and Alternate output. Configuration structure XM
  84:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC4
  85:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of pad driver strength. Configuration structure XMC_GPIO_OUTPUT_STRENGTH
  86:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
  87:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  88:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of initial output level. Configuration structure XMC_GPIO_OUTPUT_LEVEL_t
  89:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  90:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *@{
  91:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  92:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  
  93:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
  94:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * MACROS
  95:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
  96:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** 
  97:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Pos PORT0_IOCR0_PC0_Pos
  98:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Msk PORT0_IOCR0_PC0_Msk
  99:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 100:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Size 				(8U)
 101:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** 											
 102:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 103:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_CHECK_OUTPUT_LEVEL(level) ((level == XMC_GPIO_OUTPUT_LEVEL_LOW) || \
 104:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****                                             (level == XMC_GPIO_OUTPUT_LEVEL_HIGH))
 105:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****                                             
 106:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_CHECK_HWCTRL(hwctrl) ((hwctrl == XMC_GPIO_HWCTRL_DISABLED) || \
 107:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****                                        (hwctrl == XMC_GPIO_HWCTRL_PERIPHERAL1) || \
 108:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****                                        (hwctrl == XMC_GPIO_HWCTRL_PERIPHERAL2))                    
 109:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****                                             
 110:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 111:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * ENUMS
 112:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 113:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 114:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 115:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 116:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * Defines output level of a pin. Use type \a XMC_GPIO_OUTPUT_LEVEL_t for this enum.
 117:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 118:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** typedef enum XMC_GPIO_OUTPUT_LEVEL
 119:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** {
 120:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_OUTPUT_LEVEL_LOW  = 0x10000U, /**<  Reset bit */
 121:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_OUTPUT_LEVEL_HIGH = 0x1U, 	/**< Set bit  */
 122:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** } XMC_GPIO_OUTPUT_LEVEL_t;
 123:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 124:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 125:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * Defines direct hardware control characteristics of the pin . Use type \a XMC_GPIO_HWCTRL_t for t
 126:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 127:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** typedef enum XMC_GPIO_HWCTRL
 128:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** {
 129:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_DISABLED     = 0x0U, /**<  Software control only */
 130:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_PERIPHERAL1  = 0x1U, /**<  HWI0/HWO0 control path can override the software confi
 131:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_PERIPHERAL2  = 0x2U  /**<  HWI1/HWO1 control path can override the software confi
 132:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** } XMC_GPIO_HWCTRL_t;
 133:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 134:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 135:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * DEVICE FAMILY EXTENSIONS
 136:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 137:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 138:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  #if UC_FAMILY == XMC1
 139:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc1_gpio.h"
 140:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** #elif UC_FAMILY == XMC4
 141:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc4_gpio.h"
 142:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** #else
 143:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** #error "xmc_gpio.h: family device not supported"
 144:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** #endif
 145:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 146:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 147:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * API PROTOTYPES
 148:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 149:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 150:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** #ifdef __cplusplus
 151:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** extern "C" {
 152:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** #endif
 153:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 154:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 155:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 156:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	  Constant pointer pointing to GPIO port, to access port registers like Pn_OUT,Pn_O
 157:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	  Port pin number.
 158:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  config GPIO configuration data structure. Refer data structure @ref XMC_GPIO_CONFIG_t fo
 159:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 160:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 161:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 162:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 163:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC1
 164:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * Initializes input / output mode settings like, pull up / pull down devices,hysteresis, push pull
 165:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * Also configures alternate function outputs and clears hardware port control for a selected \a po
 166:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * \a config provides selected I/O settings. It configures hardware registers Pn_IOCR,Pn_OUT, Pn_OM
 167:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
 168:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC4
 169:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * Initializes input / output mode settings like, pull up / pull down devices,push pull /open drain
 170:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * Also configures alternate function outputs and clears hardware port control for selected \a port
 171:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * It configures hardware registers Pn_IOCR,Pn_OUT,Pn_OMR,Pn_PDISC and Pn_PDR.\n
 172:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
 173:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 174:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 175:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *  None
 176:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 177:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 178:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * This API is called in definition of DAVE_init by code generation and therefore should not be exp
 179:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * for the normal operation. Use other APIs only after DAVE_init is called successfully (returns DA
 180:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 181:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 182:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 183:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 184:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  
 185:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** void XMC_GPIO_Init(XMC_GPIO_PORT_t *const port, const uint8_t pin, const XMC_GPIO_CONFIG_t *const c
 186:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  
 187:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 188:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 189:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	Constant pointer pointing to GPIO port, to access hardware register Pn_IOCR.
 190:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	Port pin number.
 191:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  mode input / output functionality selection. Refer @ref XMC_GPIO_MODE_t for valid values
 192:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 193:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 194:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 195:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 196:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * Sets digital input and output driver functionality and characteristics of a GPIO port pin. It co
 197:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * registers Pn_IOCR. \a mode is initially configured during initialization in XMC_GPIO_Init(). Cal
 198:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * the port direction functionality as needed later in the program.
 199:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 200:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 201:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *  None
 202:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 203:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 204:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 205:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** void XMC_GPIO_SetMode(XMC_GPIO_PORT_t *const port, const uint8_t pin, const XMC_GPIO_MODE_t mode);
 206:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 207:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 208:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 209:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 210:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	 Constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 211:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	 Port pin number.
 212:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  level output level selection. Refer @ref XMC_GPIO_OUTPUT_LEVEL_t for valid values.
 213:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 214:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 215:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 216:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 217:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * Set port pin output level to high or low.It configures hardware registers Pn_OMR.\a level is ini
 218:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * configured during initialization in XMC_GPIO_Init(). Call this API to alter output level as need
 219:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 220:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 221:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *  XMC_GPIO_SetOutputHigh(), XMC_GPIO_SetOutputLow().
 222:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 223:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 224:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().
 225:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 226:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 227:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 228:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 229:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputLevel(XMC_GPIO_PORT_t *const port, const uint8_t pin, const 
 230:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** {
 231:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLevel: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 232:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLevel: Invalid output level", XMC_GPIO_CHECK_OUTPUT_LEVEL(level));
 233:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****   
 234:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = (uint32_t)level << pin;
 235:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** }
 236:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 237:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 238:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 239:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 240:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	Port pin number.
 241:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 242:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 243:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 244:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 245:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *  Sets port pin output to high. It configures hardware registers Pn_OMR.
 246:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 247:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *  \par<b>Related APIs:</b><BR>
 248:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *  XMC_GPIO_SetOutputLow()
 249:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 250:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 251:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().\n
 252:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * Register Pn_OMR is virtual and does not contain any flip-flop. A read action delivers the value 
 253:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 254:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 255:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 256:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputHigh(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 257:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** {
 258:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputHigh: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 259:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 260:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = (uint32_t)0x1U << pin;
 261:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** }
 262:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 263:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 264:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 265:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 266:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	port pin number.
 267:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 268:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return  None
 269:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 270:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *\par<b>Description:</b><br>
 271:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * Sets port pin output to low. It configures hardware registers Pn_OMR.\n
 272:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 273:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>>
 274:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * XMC_GPIO_SetOutputHigh()
 275:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 276:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *\par<b>Note:</b><br>
 277:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().
 278:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * Register Pn_OMR is virtual and does not contain any flip-flop. A read action delivers the value 
 279:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 280:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 281:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 282:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputLow(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 283:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** {
 284:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLow: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 285:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 286:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = 0x10000U << pin;
 288              	 .loc 4 286 0
 289 0008 1D7A     	 ldrb r5,[r3,#8]
 290              	.LBE74:
 291              	.LBE73:
 292              	 .loc 1 190 0
 293 000a 116D     	 ldr r1,[r2,#80]
 187:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** #endif
 294              	 .loc 1 187 0
 295 000c 5A68     	 ldr r2,[r3,#4]
 296              	.LVL22:
 297              	 .loc 1 190 0
 298 000e 0969     	 ldr r1,[r1,#16]
 299              	.LBB76:
 300              	.LBB75:
 301              	 .loc 4 286 0
 302 0010 4FF48033 	 mov r3,#65536
 303 0014 AB40     	 lsls r3,r3,r5
 304 0016 5360     	 str r3,[r2,#4]
 305              	.LBE75:
 306              	.LBE76:
 184:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** #if (!USER_DEFINED_LCD && SPI_INTERFACE == 1)
 307              	 .loc 1 184 0
 308 0018 0546     	 mov r5,r0
 309              	 .loc 1 190 0
 310 001a 2068     	 ldr r0,[r4]
 311              	.LVL23:
 312 001c FFF7FEFF 	 bl XMC_SPI_CH_EnableSlaveSelect
 313              	.LVL24:
 314 0020 2068     	 ldr r0,[r4]
 315              	.LVL25:
 316              	.LBB77:
 317              	.LBB78:
 318              	.LBB79:
 319              	.LBB80:
 320              	.LBB81:
 321              	 .loc 2 632 0
 322 0022 C36C     	 ldr r3,[r0,#76]
 323 0024 43F48053 	 orr r3,r3,#4096
 324 0028 C364     	 str r3,[r0,#76]
 325              	.LBE81:
 326              	.LBE80:
 327              	.LBE79:
 152:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** 
 328              	 .loc 1 152 0
 329 002a 2946     	 mov r1,r5
 330 002c 0022     	 movs r2,#0
 331 002e FFF7FEFF 	 bl XMC_SPI_CH_Transmit
 332              	.LVL26:
 333 0032 2068     	 ldr r0,[r4]
 334              	.L26:
 335              	.LVL27:
 336              	.LBB82:
 337              	.LBB83:
 338              	.LBB84:
 339              	.LBB85:
 611:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** }
 340              	 .loc 2 611 0
 341 0034 836C     	 ldr r3,[r0,#72]
 342              	.LBE85:
 343              	.LBE84:
 344              	.LBE83:
 345              	.LBE82:
 154:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****        XMC_SPI_CH_STATUS_FLAG_TRANSMIT_SHIFT_INDICATION);
 346              	 .loc 1 154 0
 347 0036 DB04     	 lsls r3,r3,#19
 348 0038 FCD5     	 bpl .L26
 349              	.LBE78:
 350              	.LBE77:
 191:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** 
 192:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****   /* Write to the SPI Bus */
 193:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****   GUI_SEGGERLIBRARY_SendByte(cmd);
 194:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** 
 195:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****   XMC_SPI_CH_DisableSlaveSelect(SPI_INSTANCE.channel);
 196:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** }
 351              	 .loc 1 196 0
 352 003a BDE83840 	 pop {r3,r4,r5,lr}
 353              	.LCFI6:
 354              	 .cfi_restore 14
 355              	 .cfi_restore 5
 356              	 .cfi_restore 4
 357              	 .cfi_restore 3
 358              	 .cfi_def_cfa_offset 0
 359              	.LVL28:
 195:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** }
 360              	 .loc 1 195 0
 361 003e FFF7FEBF 	 b XMC_SPI_CH_DisableSlaveSelect
 362              	.LVL29:
 363              	.L30:
 364 0042 00BF     	 .align 2
 365              	.L29:
 366 0044 00000000 	 .word SPI_MASTER_1
 367 0048 00000000 	 .word GUI_SEGGERLIBRARY_0_config
 368              	 .cfi_endproc
 369              	.LFE297:
 371              	 .section .text.GUI_SEGGERLIBRARY_WriteDataByte,"ax",%progbits
 372              	 .align 2
 373              	 .global GUI_SEGGERLIBRARY_WriteDataByte
 374              	 .thumb
 375              	 .thumb_func
 377              	GUI_SEGGERLIBRARY_WriteDataByte:
 378              	.LFB298:
 197:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** 
 198:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** /*
 199:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****  *  This routine writes to display controller using SPI bus, with A0 = 1
 200:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****  *
 201:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****  */
 202:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** void GUI_SEGGERLIBRARY_WriteDataByte(uint8_t data)
 203:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** {
 379              	 .loc 1 203 0
 380              	 .cfi_startproc
 381              	 
 382              	 
 383              	.LVL30:
 384 0000 38B5     	 push {r3,r4,r5,lr}
 385              	.LCFI7:
 386              	 .cfi_def_cfa_offset 16
 387              	 .cfi_offset 3,-16
 388              	 .cfi_offset 4,-12
 389              	 .cfi_offset 5,-8
 390              	 .cfi_offset 14,-4
 204:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** #if (!USER_DEFINED_LCD && SPI_INTERFACE == 1)
 205:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****     /* Set the A0 pin*/
 206:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****   XMC_GPIO_SetOutputHigh(IOHandle.portNo,IOHandle.pinNo);
 207:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** #endif
 208:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** 
 209:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****   XMC_SPI_CH_EnableSlaveSelect(SPI_INSTANCE.channel, SPI_INSTANCE.config->slave_select_pin_config[0
 391              	 .loc 1 209 0
 392 0002 0F4C     	 ldr r4,.L35
 206:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** #endif
 393              	 .loc 1 206 0
 394 0004 0F4B     	 ldr r3,.L35+4
 395              	 .loc 1 209 0
 396 0006 6268     	 ldr r2,[r4,#4]
 397              	.LBB97:
 398              	.LBB98:
 260:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** }
 399              	 .loc 4 260 0
 400 0008 1D7A     	 ldrb r5,[r3,#8]
 401              	.LBE98:
 402              	.LBE97:
 403              	 .loc 1 209 0
 404 000a 116D     	 ldr r1,[r2,#80]
 206:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** #endif
 405              	 .loc 1 206 0
 406 000c 5A68     	 ldr r2,[r3,#4]
 407              	.LVL31:
 408              	 .loc 1 209 0
 409 000e 0969     	 ldr r1,[r1,#16]
 410              	.LBB100:
 411              	.LBB99:
 260:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** }
 412              	 .loc 4 260 0
 413 0010 0123     	 movs r3,#1
 414 0012 AB40     	 lsls r3,r3,r5
 415 0014 5360     	 str r3,[r2,#4]
 416              	.LBE99:
 417              	.LBE100:
 203:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** #if (!USER_DEFINED_LCD && SPI_INTERFACE == 1)
 418              	 .loc 1 203 0
 419 0016 0546     	 mov r5,r0
 420              	 .loc 1 209 0
 421 0018 2068     	 ldr r0,[r4]
 422              	.LVL32:
 423 001a FFF7FEFF 	 bl XMC_SPI_CH_EnableSlaveSelect
 424              	.LVL33:
 425 001e 2068     	 ldr r0,[r4]
 426              	.LVL34:
 427              	.LBB101:
 428              	.LBB102:
 429              	.LBB103:
 430              	.LBB104:
 431              	.LBB105:
 432              	 .loc 2 632 0
 433 0020 C36C     	 ldr r3,[r0,#76]
 434 0022 43F48053 	 orr r3,r3,#4096
 435 0026 C364     	 str r3,[r0,#76]
 436              	.LBE105:
 437              	.LBE104:
 438              	.LBE103:
 152:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** 
 439              	 .loc 1 152 0
 440 0028 2946     	 mov r1,r5
 441 002a 0022     	 movs r2,#0
 442 002c FFF7FEFF 	 bl XMC_SPI_CH_Transmit
 443              	.LVL35:
 444 0030 2068     	 ldr r0,[r4]
 445              	.L32:
 446              	.LVL36:
 447              	.LBB106:
 448              	.LBB107:
 449              	.LBB108:
 450              	.LBB109:
 611:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** }
 451              	 .loc 2 611 0
 452 0032 836C     	 ldr r3,[r0,#72]
 453              	.LBE109:
 454              	.LBE108:
 455              	.LBE107:
 456              	.LBE106:
 154:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****        XMC_SPI_CH_STATUS_FLAG_TRANSMIT_SHIFT_INDICATION);
 457              	 .loc 1 154 0
 458 0034 DB04     	 lsls r3,r3,#19
 459 0036 FCD5     	 bpl .L32
 460              	.LBE102:
 461              	.LBE101:
 210:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** 
 211:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****   GUI_SEGGERLIBRARY_SendByte(data);
 212:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** 
 213:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****   XMC_SPI_CH_DisableSlaveSelect(SPI_INSTANCE.channel);
 214:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** }
 462              	 .loc 1 214 0
 463 0038 BDE83840 	 pop {r3,r4,r5,lr}
 464              	.LCFI8:
 465              	 .cfi_restore 14
 466              	 .cfi_restore 5
 467              	 .cfi_restore 4
 468              	 .cfi_restore 3
 469              	 .cfi_def_cfa_offset 0
 470              	.LVL37:
 213:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** }
 471              	 .loc 1 213 0
 472 003c FFF7FEBF 	 b XMC_SPI_CH_DisableSlaveSelect
 473              	.LVL38:
 474              	.L36:
 475              	 .align 2
 476              	.L35:
 477 0040 00000000 	 .word SPI_MASTER_1
 478 0044 00000000 	 .word GUI_SEGGERLIBRARY_0_config
 479              	 .cfi_endproc
 480              	.LFE298:
 482              	 .section .text.GUI_SEGGERLIBRARY_WriteMultipleBytes,"ax",%progbits
 483              	 .align 2
 484              	 .global GUI_SEGGERLIBRARY_WriteMultipleBytes
 485              	 .thumb
 486              	 .thumb_func
 488              	GUI_SEGGERLIBRARY_WriteMultipleBytes:
 489              	.LFB299:
 215:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** 
 216:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** /*
 217:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****  *  This routine writes multiple bytes to display controller using SPI bus,
 218:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****  *  with A0 = 1.
 219:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****  *
 220:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****  */
 221:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** void GUI_SEGGERLIBRARY_WriteMultipleBytes(uint8_t *data, int numitems)
 222:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** {
 490              	 .loc 1 222 0
 491              	 .cfi_startproc
 492              	 
 493              	 
 494              	.LVL39:
 495 0000 F8B5     	 push {r3,r4,r5,r6,r7,lr}
 496              	.LCFI9:
 497              	 .cfi_def_cfa_offset 24
 498              	 .cfi_offset 3,-24
 499              	 .cfi_offset 4,-20
 500              	 .cfi_offset 5,-16
 501              	 .cfi_offset 6,-12
 502              	 .cfi_offset 7,-8
 503              	 .cfi_offset 14,-4
 223:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****   uint8_t datacopy;
 224:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** 
 225:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** #if (!USER_DEFINED_LCD && SPI_INTERFACE == 1)
 226:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****   /* Set the A0 pin*/
 227:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****   XMC_GPIO_SetOutputHigh(IOHandle.portNo,IOHandle.pinNo);
 228:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** #endif
 229:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** 
 230:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****   XMC_SPI_CH_EnableSlaveSelect(SPI_INSTANCE.channel, SPI_INSTANCE.config->slave_select_pin_config[0
 504              	 .loc 1 230 0
 505 0002 124E     	 ldr r6,.L43
 227:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** #endif
 506              	 .loc 1 227 0
 507 0004 124B     	 ldr r3,.L43+4
 508              	 .loc 1 230 0
 509 0006 7268     	 ldr r2,[r6,#4]
 510              	.LBB121:
 511              	.LBB122:
 260:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** }
 512              	 .loc 4 260 0
 513 0008 1C7A     	 ldrb r4,[r3,#8]
 514              	.LBE122:
 515              	.LBE121:
 516              	 .loc 1 230 0
 517 000a 176D     	 ldr r7,[r2,#80]
 227:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** #endif
 518              	 .loc 1 227 0
 519 000c 5A68     	 ldr r2,[r3,#4]
 520              	.LVL40:
 521              	.LBB125:
 522              	.LBB123:
 260:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** }
 523              	 .loc 4 260 0
 524 000e 0123     	 movs r3,#1
 525 0010 A340     	 lsls r3,r3,r4
 526              	.LBE123:
 527              	.LBE125:
 222:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****   uint8_t datacopy;
 528              	 .loc 1 222 0
 529 0012 0546     	 mov r5,r0
 530 0014 0C46     	 mov r4,r1
 531              	 .loc 1 230 0
 532 0016 3068     	 ldr r0,[r6]
 533              	.LVL41:
 534              	.LBB126:
 535              	.LBB124:
 260:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** }
 536              	 .loc 4 260 0
 537 0018 5360     	 str r3,[r2,#4]
 538              	.LBE124:
 539              	.LBE126:
 540              	 .loc 1 230 0
 541 001a 3969     	 ldr r1,[r7,#16]
 542              	.LVL42:
 543 001c FFF7FEFF 	 bl XMC_SPI_CH_EnableSlaveSelect
 544              	.LVL43:
 545 0020 3068     	 ldr r0,[r6]
 546 0022 013D     	 subs r5,r5,#1
 547              	.LVL44:
 548              	.L39:
 549              	.LBB127:
 550              	.LBB128:
 551              	.LBB129:
 552              	.LBB130:
 553              	.LBB131:
 554              	 .loc 2 632 0 discriminator 1
 555 0024 C36C     	 ldr r3,[r0,#76]
 556              	.LBE131:
 557              	.LBE130:
 558              	.LBE129:
 559              	.LBE128:
 560              	.LBE127:
 231:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** 
 232:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****   do
 233:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****   {
 234:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****     datacopy = *data;
 561              	 .loc 1 234 0 discriminator 1
 562 0026 15F8011F 	 ldrb r1,[r5,#1]!
 563              	.LVL45:
 564              	.LBB140:
 565              	.LBB139:
 566              	.LBB134:
 567              	.LBB133:
 568              	.LBB132:
 569              	 .loc 2 632 0 discriminator 1
 570 002a 43F48053 	 orr r3,r3,#4096
 571 002e C364     	 str r3,[r0,#76]
 572              	.LBE132:
 573              	.LBE133:
 574              	.LBE134:
 152:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** 
 575              	 .loc 1 152 0 discriminator 1
 576 0030 0022     	 movs r2,#0
 577 0032 FFF7FEFF 	 bl XMC_SPI_CH_Transmit
 578              	.LVL46:
 579 0036 3068     	 ldr r0,[r6]
 580              	.L38:
 581              	.LVL47:
 582              	.LBB135:
 583              	.LBB136:
 584              	.LBB137:
 585              	.LBB138:
 611:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_spi.h **** }
 586              	 .loc 2 611 0
 587 0038 836C     	 ldr r3,[r0,#72]
 588              	.LBE138:
 589              	.LBE137:
 590              	.LBE136:
 591              	.LBE135:
 154:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****        XMC_SPI_CH_STATUS_FLAG_TRANSMIT_SHIFT_INDICATION);
 592              	 .loc 1 154 0
 593 003a DB04     	 lsls r3,r3,#19
 594 003c FCD5     	 bpl .L38
 595              	.LVL48:
 596              	.LBE139:
 597              	.LBE140:
 235:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****     GUI_SEGGERLIBRARY_SendByte(datacopy);
 236:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** 	data++;
 237:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****   }while(--numitems);
 598              	 .loc 1 237 0 discriminator 1
 599 003e 013C     	 subs r4,r4,#1
 600              	.LVL49:
 601 0040 F0D1     	 bne .L39
 238:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** 
 239:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****   XMC_SPI_CH_DisableSlaveSelect(SPI_INSTANCE.channel);
 240:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** }
 602              	 .loc 1 240 0
 603 0042 BDE8F840 	 pop {r3,r4,r5,r6,r7,lr}
 604              	.LCFI10:
 605              	 .cfi_restore 14
 606              	 .cfi_restore 7
 607              	 .cfi_restore 6
 608              	 .cfi_restore 5
 609              	 .cfi_restore 4
 610              	 .cfi_restore 3
 611              	 .cfi_def_cfa_offset 0
 612              	.LVL50:
 239:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** }
 613              	 .loc 1 239 0
 614 0046 FFF7FEBF 	 b XMC_SPI_CH_DisableSlaveSelect
 615              	.LVL51:
 616              	.L44:
 617 004a 00BF     	 .align 2
 618              	.L43:
 619 004c 00000000 	 .word SPI_MASTER_1
 620 0050 00000000 	 .word GUI_SEGGERLIBRARY_0_config
 621              	 .cfi_endproc
 622              	.LFE299:
 624              	 .section .text.GUI_SEGGERLIBRARY_ReadMultipleBytes,"ax",%progbits
 625              	 .align 2
 626              	 .global GUI_SEGGERLIBRARY_ReadMultipleBytes
 627              	 .thumb
 628              	 .thumb_func
 630              	GUI_SEGGERLIBRARY_ReadMultipleBytes:
 631              	.LFB300:
 241:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** 
 242:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** /*
 243:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****  *  This routine read multiple bytes from display controller using SPI bus,
 244:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****  *  with A0 = 1.
 245:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****  *
 246:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****  */
 247:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** void GUI_SEGGERLIBRARY_ReadMultipleBytes(uint8_t *data, int numitems)
 248:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** {
 632              	 .loc 1 248 0
 633              	 .cfi_startproc
 634              	 
 635              	 
 636              	 
 637              	.LVL52:
 638 0000 30B4     	 push {r4,r5}
 639              	.LCFI11:
 640              	 .cfi_def_cfa_offset 8
 641              	 .cfi_offset 4,-8
 642              	 .cfi_offset 5,-4
 249:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** #if (!USER_DEFINED_LCD && SPI_INTERFACE == 1)
 250:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****   XMC_GPIO_SetOutputHigh(IOHandle.portNo,IOHandle.pinNo);
 643              	 .loc 1 250 0
 644 0002 064B     	 ldr r3,.L47
 645              	.LBB141:
 646              	.LBB142:
 260:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** }
 647              	 .loc 4 260 0
 648 0004 1D7A     	 ldrb r5,[r3,#8]
 649              	.LBE142:
 650              	.LBE141:
 651              	 .loc 1 250 0
 652 0006 5C68     	 ldr r4,[r3,#4]
 653              	.LVL53:
 654              	.LBB145:
 655              	.LBB143:
 260:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** }
 656              	 .loc 4 260 0
 657 0008 0123     	 movs r3,#1
 658 000a AB40     	 lsls r3,r3,r5
 659              	.LBE143:
 660              	.LBE145:
 248:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** #if (!USER_DEFINED_LCD && SPI_INTERFACE == 1)
 661              	 .loc 1 248 0
 662 000c 0A46     	 mov r2,r1
 663              	.LBB146:
 664              	.LBB144:
 260:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** }
 665              	 .loc 4 260 0
 666 000e 6360     	 str r3,[r4,#4]
 667              	.LBE144:
 668              	.LBE146:
 251:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** #endif
 252:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** 
 253:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c ****   SPI_MASTER_Receive(&SPI_INSTANCE, data, numitems);
 669              	 .loc 1 253 0
 670 0010 0146     	 mov r1,r0
 671              	.LVL54:
 254:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** }
 672              	 .loc 1 254 0
 673 0012 30BC     	 pop {r4,r5}
 674              	.LCFI12:
 675              	 .cfi_restore 5
 676              	 .cfi_restore 4
 677              	 .cfi_def_cfa_offset 0
 678              	.LVL55:
 253:../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.c **** }
 679              	 .loc 1 253 0
 680 0014 0248     	 ldr r0,.L47+4
 681              	.LVL56:
 682 0016 FFF7FEBF 	 b SPI_MASTER_Receive
 683              	.LVL57:
 684              	.L48:
 685 001a 00BF     	 .align 2
 686              	.L47:
 687 001c 00000000 	 .word GUI_SEGGERLIBRARY_0_config
 688 0020 00000000 	 .word SPI_MASTER_1
 689              	 .cfi_endproc
 690              	.LFE300:
 692              	 .text
 693              	.Letext0:
 694              	 .file 5 "c:\\dave 4\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 695              	 .file 6 "c:\\dave 4\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 696              	 .file 7 "C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc/xmc4_gpio.h"
 697              	 .file 8 "C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc/xmc_usic.h"
 698              	 .file 9 "C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/DAVE_Common.h"
 699              	 .file 10 "../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary.h"
 700              	 .file 11 "C:/Workspaces/Dave 4/CTPOT_test1/Libraries/CMSIS/Include/core_cm4.h"
 701              	 .file 12 "C:/Workspaces/Dave 4/CTPOT_test1/Libraries/CMSIS/Infineon/XMC4700_series/Include/system_XMC4700.h"
 702              	 .file 13 "C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/SPI_MASTER\\spi_master_extern.h"
 703              	 .file 14 "../Dave/Generated/GUI_SEGGERLIBRARY/gui_seggerlibrary_extern.h"
 704              	 .file 15 "c:\\dave 4\\eclipse\\emwin\\start\\gui\\inc\\gui.h"
DEFINED SYMBOLS
                            *ABS*:00000000 gui_seggerlibrary.c
    {standard input}:20     .text.GUI_SEGGERLIBRARY_GetAppVersion:00000000 $t
    {standard input}:25     .text.GUI_SEGGERLIBRARY_GetAppVersion:00000000 GUI_SEGGERLIBRARY_GetAppVersion
    {standard input}:56     .text.GUI_SEGGERLIBRARY_Init:00000000 $t
    {standard input}:61     .text.GUI_SEGGERLIBRARY_Init:00000000 GUI_SEGGERLIBRARY_Init
    {standard input}:114    .text.GUI_SEGGERLIBRARY_SendByte:00000000 $t
    {standard input}:119    .text.GUI_SEGGERLIBRARY_SendByte:00000000 GUI_SEGGERLIBRARY_SendByte
    {standard input}:181    .text.GUI_SEGGERLIBRARY_SendByte:00000024 $d
    {standard input}:186    .text.GUI_SEGGERLIBRARY_ReadByte:00000000 $t
    {standard input}:191    .text.GUI_SEGGERLIBRARY_ReadByte:00000000 GUI_SEGGERLIBRARY_ReadByte
    {standard input}:255    .text.GUI_SEGGERLIBRARY_ReadByte:00000030 $d
    {standard input}:260    .text.GUI_SEGGERLIBRARY_WriteCmdByte:00000000 $t
    {standard input}:265    .text.GUI_SEGGERLIBRARY_WriteCmdByte:00000000 GUI_SEGGERLIBRARY_WriteCmdByte
    {standard input}:366    .text.GUI_SEGGERLIBRARY_WriteCmdByte:00000044 $d
    {standard input}:372    .text.GUI_SEGGERLIBRARY_WriteDataByte:00000000 $t
    {standard input}:377    .text.GUI_SEGGERLIBRARY_WriteDataByte:00000000 GUI_SEGGERLIBRARY_WriteDataByte
    {standard input}:477    .text.GUI_SEGGERLIBRARY_WriteDataByte:00000040 $d
    {standard input}:483    .text.GUI_SEGGERLIBRARY_WriteMultipleBytes:00000000 $t
    {standard input}:488    .text.GUI_SEGGERLIBRARY_WriteMultipleBytes:00000000 GUI_SEGGERLIBRARY_WriteMultipleBytes
    {standard input}:619    .text.GUI_SEGGERLIBRARY_WriteMultipleBytes:0000004c $d
    {standard input}:625    .text.GUI_SEGGERLIBRARY_ReadMultipleBytes:00000000 $t
    {standard input}:630    .text.GUI_SEGGERLIBRARY_ReadMultipleBytes:00000000 GUI_SEGGERLIBRARY_ReadMultipleBytes
    {standard input}:687    .text.GUI_SEGGERLIBRARY_ReadMultipleBytes:0000001c $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
SPI_MASTER_Init
GUI_Init
XMC_GPIO_Init
XMC_SPI_CH_Transmit
SPI_MASTER_1
XMC_SPI_CH_GetReceivedData
XMC_SPI_CH_EnableSlaveSelect
XMC_SPI_CH_DisableSlaveSelect
GUI_SEGGERLIBRARY_0_config
SPI_MASTER_Receive
