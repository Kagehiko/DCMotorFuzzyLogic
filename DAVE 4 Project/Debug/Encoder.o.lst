   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,2
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "Encoder.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.CCU43_1_IRQHandler,"ax",%progbits
  20              	 .align 2
  21              	 .global CCU43_1_IRQHandler
  22              	 .thumb
  23              	 .thumb_func
  25              	CCU43_1_IRQHandler:
  26              	.LFB400:
  27              	 .file 1 "../Encoder.c"
   1:../Encoder.c  **** #include "Encoder.h"
   2:../Encoder.c  **** 
   3:../Encoder.c  **** int8_t counter_lut[32] = {
   4:../Encoder.c  **** 		//Direction = 1
   5:../Encoder.c  **** 		0, // 00 to 00
   6:../Encoder.c  **** 	   -1, // 00 to 01
   7:../Encoder.c  **** 	   +1, // 00 to 10
   8:../Encoder.c  **** 	   +2, // 00 to 11
   9:../Encoder.c  **** 
  10:../Encoder.c  **** 	   +1, // 01 to 00
  11:../Encoder.c  **** 		0, // 01 to 01
  12:../Encoder.c  **** 	   +2, // 01 to 10
  13:../Encoder.c  **** 	   -1, // 01 to 11
  14:../Encoder.c  **** 
  15:../Encoder.c  **** 	   -1, // 10 to 00
  16:../Encoder.c  **** 	   +2, // 10 to 01
  17:../Encoder.c  **** 		0, // 10 to 10
  18:../Encoder.c  **** 	   +1, // 10 to 11
  19:../Encoder.c  **** 
  20:../Encoder.c  **** 	   +2, // 11 to 00
  21:../Encoder.c  **** 	   +1, // 11 to 01
  22:../Encoder.c  **** 	   -1, // 11 to 10
  23:../Encoder.c  **** 		0, // 11 to 11
  24:../Encoder.c  **** 
  25:../Encoder.c  **** 		//Direction = 0
  26:../Encoder.c  **** 		0, // 00 to 00
  27:../Encoder.c  **** 	   -1, // 00 to 01
  28:../Encoder.c  **** 	   +1, // 00 to 10
  29:../Encoder.c  **** 	   -2, // 00 to 11
  30:../Encoder.c  **** 
  31:../Encoder.c  **** 	   +1, // 01 to 00
  32:../Encoder.c  **** 		0, // 01 to 01
  33:../Encoder.c  **** 	   -2, // 01 to 10
  34:../Encoder.c  **** 	   -1, // 01 to 11
  35:../Encoder.c  **** 
  36:../Encoder.c  **** 	   -1, // 10 to 00
  37:../Encoder.c  **** 	   -2, // 10 to 01
  38:../Encoder.c  **** 		0, // 10 to 10
  39:../Encoder.c  **** 	   +1, // 10 to 11
  40:../Encoder.c  **** 
  41:../Encoder.c  **** 	   -2, // 11 to 00
  42:../Encoder.c  **** 	   +1, // 11 to 01
  43:../Encoder.c  **** 	   -1, // 11 to 10
  44:../Encoder.c  **** 		0, // 11 to 11
  45:../Encoder.c  **** };
  46:../Encoder.c  **** 
  47:../Encoder.c  **** uint32_t counter = 0,  direction = 0, lut_index = 0;
  48:../Encoder.c  **** 
  49:../Encoder.c  **** void encoderInterrupt(void){
  28              	 .loc 1 49 0
  29              	 .cfi_startproc
  30              	 
  31              	 
  32              	 
  33 0000 164A     	 ldr r2,.L7
  34 0002 174B     	 ldr r3,.L7+4
  35 0004 1168     	 ldr r1,[r2]
  36              	.LVL0:
  37 0006 1868     	 ldr r0,[r3]
  38              	.LVL1:
  39              	.LBB22:
  40              	.LBB23:
  41              	.LBB24:
  42              	 .file 2 "C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc/xmc_gpio.h"
   1:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** /**
   2:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @file xmc_gpio.h
   3:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @date 2015-06-20
   4:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
   5:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @cond
   6:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
   7:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * XMClib v2.1.16 - XMC Peripheral Driver Library 
   8:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
   9:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * Copyright (c) 2015-2017, Infineon Technologies AG
  10:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * All rights reserved.                        
  11:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *                                             
  12:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * following conditions are met:   
  14:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *                                                                              
  15:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * disclaimer.                        
  17:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * 
  18:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * 
  21:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * products derived from this software without specific prior written permission.                  
  23:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *                                                                              
  24:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *                                                                              
  32:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
  35:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  36:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * Change History
  37:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * --------------
  38:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  39:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * 2015-02-20:
  40:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Initial draft<br>
  41:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Documentation improved <br>
  42:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *      
  43:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * 2015-06-20:
  44:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  45:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  46:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @endcond
  47:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  48:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  49:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** 
  50:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** #ifndef XMC_GPIO_H
  51:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_H
  52:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** 
  53:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
  54:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * HEADER FILES
  55:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
  56:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** 
  57:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc_common.h"
  58:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** 
  59:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** /**
  60:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @addtogroup XMClib XMC Peripheral Library
  61:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @{
  62:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  63:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** 
  64:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** /**
  65:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @addtogroup GPIO
  66:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @brief General Purpose Input Output (GPIO) driver for the XMC microcontroller family.
  67:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  68:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * GPIO driver provide a generic and very flexible software interface for all standard digital I/O 
  69:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * Each port slice has individual interfaces for the operation as General Purpose I/O and it furthe
  70:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * connectivity to the on-chip periphery and the control for the pad characteristics. 
  71:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  72:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * The driver is divided into Input and Output mode.
  73:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  74:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * Input mode features:
  75:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Configuration structure XMC_GPIO_CONFIG_t and initialization function XMC_GPIO_Init()
  76:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of weak pull-up or pull-down device. Configuration structure XMC_GPIO_MO
  77:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC1
  78:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of input hysteresis. XMC_GPIO_SetInputHysteresis()
  79:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
  80:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  81:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * 
  82:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * Output mode features:
  83:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of push pull/open drain and Alternate output. Configuration structure XM
  84:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC4
  85:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of pad driver strength. Configuration structure XMC_GPIO_OUTPUT_STRENGTH
  86:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
  87:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  88:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of initial output level. Configuration structure XMC_GPIO_OUTPUT_LEVEL_t
  89:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  90:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *@{
  91:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  92:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  
  93:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
  94:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * MACROS
  95:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
  96:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** 
  97:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Pos PORT0_IOCR0_PC0_Pos
  98:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Msk PORT0_IOCR0_PC0_Msk
  99:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 100:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Size 				(8U)
 101:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** 											
 102:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 103:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_CHECK_OUTPUT_LEVEL(level) ((level == XMC_GPIO_OUTPUT_LEVEL_LOW) || \
 104:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****                                             (level == XMC_GPIO_OUTPUT_LEVEL_HIGH))
 105:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****                                             
 106:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_CHECK_HWCTRL(hwctrl) ((hwctrl == XMC_GPIO_HWCTRL_DISABLED) || \
 107:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****                                        (hwctrl == XMC_GPIO_HWCTRL_PERIPHERAL1) || \
 108:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****                                        (hwctrl == XMC_GPIO_HWCTRL_PERIPHERAL2))                    
 109:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****                                             
 110:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 111:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * ENUMS
 112:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 113:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 114:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 115:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 116:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * Defines output level of a pin. Use type \a XMC_GPIO_OUTPUT_LEVEL_t for this enum.
 117:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 118:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** typedef enum XMC_GPIO_OUTPUT_LEVEL
 119:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** {
 120:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_OUTPUT_LEVEL_LOW  = 0x10000U, /**<  Reset bit */
 121:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_OUTPUT_LEVEL_HIGH = 0x1U, 	/**< Set bit  */
 122:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** } XMC_GPIO_OUTPUT_LEVEL_t;
 123:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 124:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 125:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * Defines direct hardware control characteristics of the pin . Use type \a XMC_GPIO_HWCTRL_t for t
 126:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 127:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** typedef enum XMC_GPIO_HWCTRL
 128:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** {
 129:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_DISABLED     = 0x0U, /**<  Software control only */
 130:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_PERIPHERAL1  = 0x1U, /**<  HWI0/HWO0 control path can override the software confi
 131:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_PERIPHERAL2  = 0x2U  /**<  HWI1/HWO1 control path can override the software confi
 132:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** } XMC_GPIO_HWCTRL_t;
 133:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 134:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 135:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * DEVICE FAMILY EXTENSIONS
 136:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 137:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 138:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  #if UC_FAMILY == XMC1
 139:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc1_gpio.h"
 140:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** #elif UC_FAMILY == XMC4
 141:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc4_gpio.h"
 142:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** #else
 143:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** #error "xmc_gpio.h: family device not supported"
 144:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** #endif
 145:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 146:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 147:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * API PROTOTYPES
 148:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 149:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 150:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** #ifdef __cplusplus
 151:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** extern "C" {
 152:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** #endif
 153:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 154:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 155:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 156:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	  Constant pointer pointing to GPIO port, to access port registers like Pn_OUT,Pn_O
 157:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	  Port pin number.
 158:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  config GPIO configuration data structure. Refer data structure @ref XMC_GPIO_CONFIG_t fo
 159:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 160:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 161:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 162:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 163:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC1
 164:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * Initializes input / output mode settings like, pull up / pull down devices,hysteresis, push pull
 165:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * Also configures alternate function outputs and clears hardware port control for a selected \a po
 166:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * \a config provides selected I/O settings. It configures hardware registers Pn_IOCR,Pn_OUT, Pn_OM
 167:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
 168:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC4
 169:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * Initializes input / output mode settings like, pull up / pull down devices,push pull /open drain
 170:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * Also configures alternate function outputs and clears hardware port control for selected \a port
 171:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * It configures hardware registers Pn_IOCR,Pn_OUT,Pn_OMR,Pn_PDISC and Pn_PDR.\n
 172:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
 173:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 174:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 175:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *  None
 176:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 177:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 178:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * This API is called in definition of DAVE_init by code generation and therefore should not be exp
 179:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * for the normal operation. Use other APIs only after DAVE_init is called successfully (returns DA
 180:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 181:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 182:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 183:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 184:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  
 185:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** void XMC_GPIO_Init(XMC_GPIO_PORT_t *const port, const uint8_t pin, const XMC_GPIO_CONFIG_t *const c
 186:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  
 187:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 188:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 189:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	Constant pointer pointing to GPIO port, to access hardware register Pn_IOCR.
 190:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	Port pin number.
 191:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  mode input / output functionality selection. Refer @ref XMC_GPIO_MODE_t for valid values
 192:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 193:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 194:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 195:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 196:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * Sets digital input and output driver functionality and characteristics of a GPIO port pin. It co
 197:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * registers Pn_IOCR. \a mode is initially configured during initialization in XMC_GPIO_Init(). Cal
 198:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * the port direction functionality as needed later in the program.
 199:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 200:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 201:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *  None
 202:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 203:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 204:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 205:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** void XMC_GPIO_SetMode(XMC_GPIO_PORT_t *const port, const uint8_t pin, const XMC_GPIO_MODE_t mode);
 206:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 207:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 208:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 209:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 210:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	 Constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 211:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	 Port pin number.
 212:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  level output level selection. Refer @ref XMC_GPIO_OUTPUT_LEVEL_t for valid values.
 213:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 214:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 215:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 216:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 217:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * Set port pin output level to high or low.It configures hardware registers Pn_OMR.\a level is ini
 218:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * configured during initialization in XMC_GPIO_Init(). Call this API to alter output level as need
 219:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 220:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 221:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *  XMC_GPIO_SetOutputHigh(), XMC_GPIO_SetOutputLow().
 222:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 223:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 224:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().
 225:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 226:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 227:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 228:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 229:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputLevel(XMC_GPIO_PORT_t *const port, const uint8_t pin, const 
 230:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** {
 231:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLevel: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 232:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLevel: Invalid output level", XMC_GPIO_CHECK_OUTPUT_LEVEL(level));
 233:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****   
 234:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = (uint32_t)level << pin;
 235:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** }
 236:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 237:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 238:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 239:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 240:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	Port pin number.
 241:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 242:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 243:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 244:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 245:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *  Sets port pin output to high. It configures hardware registers Pn_OMR.
 246:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 247:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *  \par<b>Related APIs:</b><BR>
 248:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *  XMC_GPIO_SetOutputLow()
 249:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 250:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 251:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().\n
 252:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * Register Pn_OMR is virtual and does not contain any flip-flop. A read action delivers the value 
 253:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 254:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 255:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 256:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputHigh(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 257:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** {
 258:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputHigh: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 259:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 260:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = (uint32_t)0x1U << pin;
 261:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** }
 262:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 263:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 264:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 265:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 266:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	port pin number.
 267:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 268:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return  None
 269:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 270:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *\par<b>Description:</b><br>
 271:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * Sets port pin output to low. It configures hardware registers Pn_OMR.\n
 272:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 273:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>>
 274:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * XMC_GPIO_SetOutputHigh()
 275:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 276:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *\par<b>Note:</b><br>
 277:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().
 278:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * Register Pn_OMR is virtual and does not contain any flip-flop. A read action delivers the value 
 279:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 280:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 281:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 282:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputLow(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 283:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** {
 284:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLow: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 285:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 286:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = 0x10000U << pin;
 287:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** }
 288:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 289:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 290:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 291:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param port constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 292:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param pin  port pin number.
 293:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 294:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 295:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 296:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 297:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * Configures port pin output to Toggle. It configures hardware registers Pn_OMR.
 298:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 299:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 300:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * XMC_GPIO_SetOutputHigh(), XMC_GPIO_SetOutputLow().
 301:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 302:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 303:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode(). Regis
 304:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * and does not contain any flip-flop. A read action delivers the value of 0.
 305:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 306:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 307:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 308:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_ToggleOutput(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 309:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** {
 310:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_ToggleOutput: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 311:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 312:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = 0x10001U << pin;
 313:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** }
 314:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 315:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 316:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 317:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param port constant pointer pointing to GPIO port, to access hardware register Pn_IN.
 318:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param pin  Port pin number.
 319:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 320:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return uint32_t pin logic level status.
 321:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 322:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *\par<b>Description:</b><br>
 323:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * Reads the Pn_IN register and returns the current logical value at the GPIO pin.
 324:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 325:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 326:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * None
 327:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 328:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 329:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to input mode using XMC_GPIO_SetMode().
 330:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 331:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 332:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 333:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE uint32_t XMC_GPIO_GetInput(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 334:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** {
 335:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_GetInput: Invalid port", XMC_GPIO_CHECK_PORT(port));
 336:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 337:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc\xmc_gpio.h ****   return (((port->IN) >> pin) & 0x1U);
  43              	 .loc 2 337 0
  44 0008 496A     	 ldr r1,[r1,#36]
  45              	.LVL2:
  46              	.LBE24:
  47              	.LBE23:
  48              	.LBE22:
  49              	 .loc 1 49 0
  50 000a F0B4     	 push {r4,r5,r6,r7}
  51              	.LCFI0:
  52              	 .cfi_def_cfa_offset 16
  53              	 .cfi_offset 4,-16
  54              	 .cfi_offset 5,-12
  55              	 .cfi_offset 6,-8
  56              	 .cfi_offset 7,-4
  57              	.LBB29:
  58              	.LBB30:
  59              	.LBB31:
  60              	 .loc 2 337 0
  61 000c 1F7C     	 ldrb r7,[r3,#16]
  62 000e 436A     	 ldr r3,[r0,#36]
  63              	.LBE31:
  64              	.LBE30:
  65              	.LBE29:
  50:../Encoder.c  **** 
  51:../Encoder.c  **** 	lut_index |= DIGITAL_IO_GetInput(&ENC_A)<<1 | DIGITAL_IO_GetInput(&ENC_B);
  66              	 .loc 1 51 0
  67 0010 1448     	 ldr r0,.L7+8
  68              	.LVL3:
  69              	.LBB34:
  70              	.LBB27:
  71              	.LBB25:
  72              	 .loc 2 337 0
  73 0012 167C     	 ldrb r6,[r2,#16]
  74 0014 0268     	 ldr r2,[r0]
  75              	.LVL4:
  76              	.LBE25:
  77              	.LBE27:
  78              	.LBE34:
  52:../Encoder.c  **** 	counter += counter_lut[lut_index];
  79              	 .loc 1 52 0
  80 0016 144D     	 ldr r5,.L7+12
  81 0018 144C     	 ldr r4,.L7+16
  82              	.LBB35:
  83              	.LBB33:
  84              	.LBB32:
  85              	 .loc 2 337 0
  86 001a FB40     	 lsrs r3,r3,r7
  87 001c 03F00103 	 and r3,r3,#1
  88              	.LBE32:
  89              	.LBE33:
  90              	.LBE35:
  91              	.LBB36:
  92              	.LBB28:
  93              	.LBB26:
  94 0020 F140     	 lsrs r1,r1,r6
  95 0022 01F00101 	 and r1,r1,#1
  96 0026 1A43     	 orrs r2,r2,r3
  97              	.LBE26:
  98              	.LBE28:
  99              	.LBE36:
  51:../Encoder.c  **** 	counter += counter_lut[lut_index];
 100              	 .loc 1 51 0
 101 0028 42EA4103 	 orr r3,r2,r1,lsl#1
 102              	 .loc 1 52 0
 103 002c 2168     	 ldr r1,[r4]
 104 002e ED5C     	 ldrb r5,[r5,r3]
 105 0030 6AB2     	 sxtb r2,r5
 106 0032 1144     	 add r1,r1,r2
 107 0034 2160     	 str r1,[r4]
  53:../Encoder.c  **** 
  54:../Encoder.c  **** 	if (counter_lut[lut_index] != 0){
 108              	 .loc 1 54 0
 109 0036 6DB1     	 cbz r5,.L6
  55:../Encoder.c  **** 		direction = (counter_lut[lut_index] > 0) ? 1 : 0;
 110              	 .loc 1 55 0
 111 0038 002A     	 cmp r2,#0
 112 003a 0D49     	 ldr r1,.L7+20
 113 003c D4BF     	 ite le
 114 003e 0022     	 movle r2,#0
 115 0040 0122     	 movgt r2,#1
 116 0042 0A60     	 str r2,[r1]
 117              	.L3:
  56:../Encoder.c  **** 	}
  57:../Encoder.c  **** 
  58:../Encoder.c  **** 	//Prepare for next iteration by shifting current state
  59:../Encoder.c  **** 	//bits to old state bits and also the direction bit
  60:../Encoder.c  **** 	lut_index = ((lut_index << 2) & 0b1100) | (direction<<4);
 118              	 .loc 1 60 0
 119 0044 9B00     	 lsls r3,r3,#2
 120 0046 03F00C03 	 and r3,r3,#12
 121 004a 43EA0213 	 orr r3,r3,r2,lsl#4
 122 004e 0360     	 str r3,[r0]
  61:../Encoder.c  **** }
 123              	 .loc 1 61 0
 124 0050 F0BC     	 pop {r4,r5,r6,r7}
 125              	.LCFI1:
 126              	 .cfi_remember_state
 127              	 .cfi_restore 7
 128              	 .cfi_restore 6
 129              	 .cfi_restore 5
 130              	 .cfi_restore 4
 131              	 .cfi_def_cfa_offset 0
 132 0052 7047     	 bx lr
 133              	.L6:
 134              	.LCFI2:
 135              	 .cfi_restore_state
 136 0054 064A     	 ldr r2,.L7+20
 137 0056 1268     	 ldr r2,[r2]
 138 0058 F4E7     	 b .L3
 139              	.L8:
 140 005a 00BF     	 .align 2
 141              	.L7:
 142 005c 00000000 	 .word ENC_A
 143 0060 00000000 	 .word ENC_B
 144 0064 00000000 	 .word .LANCHOR0
 145 0068 00000000 	 .word .LANCHOR1
 146 006c 00000000 	 .word .LANCHOR2
 147 0070 00000000 	 .word .LANCHOR3
 148              	 .cfi_endproc
 149              	.LFE400:
 151              	 .section .text.getEncoderValue,"ax",%progbits
 152              	 .align 2
 153              	 .global getEncoderValue
 154              	 .thumb
 155              	 .thumb_func
 157              	getEncoderValue:
 158              	.LFB401:
  62:../Encoder.c  **** 
  63:../Encoder.c  **** uint32_t getEncoderValue(void){
 159              	 .loc 1 63 0
 160              	 .cfi_startproc
 161              	 
 162              	 
 163              	 
 164              	.LBB37:
 165              	.LBB38:
 166              	 .file 3 "C:/Workspaces/Dave 4/CTPOT_test1/Libraries/CMSIS/Include/cmsis_gcc.h"
   1:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/CMSIS/Include\cmsis_gcc.h **** /**************************************************************************//**
   2:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/CMSIS/Include\cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/CMSIS/Include\cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/CMSIS/Include\cmsis_gcc.h ****  * @version  V5.0.1
   5:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/CMSIS/Include\cmsis_gcc.h ****  * @date     02. February 2017
   6:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/CMSIS/Include\cmsis_gcc.h ****  ******************************************************************************/
   7:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/CMSIS/Include\cmsis_gcc.h **** /*
   8:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/CMSIS/Include\cmsis_gcc.h ****  * Copyright (c) 2009-2017 ARM Limited. All rights reserved.
   9:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/CMSIS/Include\cmsis_gcc.h ****  *
  10:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/CMSIS/Include\cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/CMSIS/Include\cmsis_gcc.h ****  *
  12:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/CMSIS/Include\cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/CMSIS/Include\cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/CMSIS/Include\cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/CMSIS/Include\cmsis_gcc.h ****  *
  16:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/CMSIS/Include\cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/CMSIS/Include\cmsis_gcc.h ****  *
  18:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/CMSIS/Include\cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/CMSIS/Include\cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/CMSIS/Include\cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/CMSIS/Include\cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/CMSIS/Include\cmsis_gcc.h ****  * limitations under the License.
  23:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
  24:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  25:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  28:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/CMSIS/Include\cmsis_gcc.h **** /* ignore some GCC warnings */
  29:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic push
  30:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  34:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/CMSIS/Include\cmsis_gcc.h **** /* CMSIS compiler specific defines */
  35:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __ASM
  36:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __ASM                     __asm
  37:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  38:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __INLINE
  39:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __INLINE                  inline
  40:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  41:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  42:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __STATIC_INLINE           static inline
  43:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  44:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __NO_RETURN
  45:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __NO_RETURN               __attribute__((noreturn))
  46:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  47:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __USED
  48:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __USED                    __attribute__((used))
  49:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  50:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __WEAK
  51:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __WEAK                    __attribute__((weak))
  52:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  53:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32
  54:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic push
  55:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wpacked"
  56:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wattributes"
  57:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/CMSIS/Include\cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  58:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic pop
  59:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)     (((struct T_UINT32 *)(x))->v)
  60:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  61:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __ALIGNED
  62:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __ALIGNED(x)              __attribute__((aligned(x)))
  63:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  64:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __PACKED
  65:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __PACKED                  __attribute__((packed, aligned(1)))
  66:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  67:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  68:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __PACKED_STRUCT           struct __attribute__((packed, aligned(1)))
  69:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  70:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  71:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  72:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/CMSIS/Include\cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
  73:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/CMSIS/Include\cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
  74:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/CMSIS/Include\cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  75:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/CMSIS/Include\cmsis_gcc.h ****   @{
  76:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
  77:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  78:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
  79:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
  80:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
  81:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/CMSIS/Include\cmsis_gcc.h ****            Can only be executed in Privileged modes.
  82:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
  83:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __enable_irq(void)
  84:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/CMSIS/Include\cmsis_gcc.h **** {
  85:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
  86:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/CMSIS/Include\cmsis_gcc.h **** }
  87:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  88:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  89:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
  90:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
  91:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
  92:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/CMSIS/Include\cmsis_gcc.h ****            Can only be executed in Privileged modes.
  93:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
  94:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __disable_irq(void)
  95:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/CMSIS/Include\cmsis_gcc.h **** {
  96:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 167              	 .loc 3 96 0
 168              	
 169 0000 72B6     	 cpsid i
 170              	
 171              	 .thumb
 172              	.LBE38:
 173              	.LBE37:
  64:../Encoder.c  **** 	__disable_irq();
  65:../Encoder.c  **** 	uint32_t encoder_value = counter;
 174              	 .loc 1 65 0
 175 0002 024B     	 ldr r3,.L10
 176 0004 1868     	 ldr r0,[r3]
 177              	.LVL5:
 178              	.LBB39:
 179              	.LBB40:
  85:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 180              	 .loc 3 85 0
 181              	
 182 0006 62B6     	 cpsie i
 183              	
 184              	 .thumb
 185              	.LBE40:
 186              	.LBE39:
  66:../Encoder.c  **** 	__enable_irq();
  67:../Encoder.c  **** 	return encoder_value;
  68:../Encoder.c  **** }
 187              	 .loc 1 68 0
 188 0008 7047     	 bx lr
 189              	.L11:
 190 000a 00BF     	 .align 2
 191              	.L10:
 192 000c 00000000 	 .word .LANCHOR2
 193              	 .cfi_endproc
 194              	.LFE401:
 196              	 .section .text.getDirection,"ax",%progbits
 197              	 .align 2
 198              	 .global getDirection
 199              	 .thumb
 200              	 .thumb_func
 202              	getDirection:
 203              	.LFB402:
  69:../Encoder.c  **** 
  70:../Encoder.c  **** uint8_t getDirection(void){
 204              	 .loc 1 70 0
 205              	 .cfi_startproc
 206              	 
 207              	 
 208              	 
 209              	.LBB41:
 210              	.LBB42:
 211              	 .loc 3 96 0
 212              	
 213 0000 72B6     	 cpsid i
 214              	
 215              	 .thumb
 216              	.LBE42:
 217              	.LBE41:
  71:../Encoder.c  **** 	__disable_irq();
  72:../Encoder.c  **** 	uint8_t direction_value = direction;
 218              	 .loc 1 72 0
 219 0002 024B     	 ldr r3,.L13
 220 0004 1878     	 ldrb r0,[r3]
 221              	.LVL6:
 222              	.LBB43:
 223              	.LBB44:
  85:C:/Workspaces/Dave 4/CTPOT_test1/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 224              	 .loc 3 85 0
 225              	
 226 0006 62B6     	 cpsie i
 227              	
 228              	 .thumb
 229              	.LBE44:
 230              	.LBE43:
  73:../Encoder.c  **** 	__enable_irq();
  74:../Encoder.c  **** 	return direction_value;
  75:../Encoder.c  **** }
 231              	 .loc 1 75 0
 232 0008 7047     	 bx lr
 233              	.L14:
 234 000a 00BF     	 .align 2
 235              	.L13:
 236 000c 00000000 	 .word .LANCHOR3
 237              	 .cfi_endproc
 238              	.LFE402:
 240              	 .global lut_index
 241              	 .global direction
 242              	 .global counter
 243              	 .global counter_lut
 244              	 .section .data.counter_lut,"aw",%progbits
 245              	 .align 2
 246              	 .set .LANCHOR1,.+0
 249              	counter_lut:
 250 0000 00       	 .byte 0
 251 0001 FF       	 .byte -1
 252 0002 01       	 .byte 1
 253 0003 02       	 .byte 2
 254 0004 01       	 .byte 1
 255 0005 00       	 .byte 0
 256 0006 02       	 .byte 2
 257 0007 FF       	 .byte -1
 258 0008 FF       	 .byte -1
 259 0009 02       	 .byte 2
 260 000a 00       	 .byte 0
 261 000b 01       	 .byte 1
 262 000c 02       	 .byte 2
 263 000d 01       	 .byte 1
 264 000e FF       	 .byte -1
 265 000f 00       	 .byte 0
 266 0010 00       	 .byte 0
 267 0011 FF       	 .byte -1
 268 0012 01       	 .byte 1
 269 0013 FE       	 .byte -2
 270 0014 01       	 .byte 1
 271 0015 00       	 .byte 0
 272 0016 FE       	 .byte -2
 273 0017 FF       	 .byte -1
 274 0018 FF       	 .byte -1
 275 0019 FE       	 .byte -2
 276 001a 00       	 .byte 0
 277 001b 01       	 .byte 1
 278 001c FE       	 .byte -2
 279 001d 01       	 .byte 1
 280 001e FF       	 .byte -1
 281 001f 00       	 .byte 0
 282              	 .section .bss.direction,"aw",%nobits
 283              	 .align 2
 284              	 .set .LANCHOR3,.+0
 287              	direction:
 288 0000 00000000 	 .space 4
 289              	 .section .bss.lut_index,"aw",%nobits
 290              	 .align 2
 291              	 .set .LANCHOR0,.+0
 294              	lut_index:
 295 0000 00000000 	 .space 4
 296              	 .section .bss.counter,"aw",%nobits
 297              	 .align 2
 298              	 .set .LANCHOR2,.+0
 301              	counter:
 302 0000 00000000 	 .space 4
 303              	 .text
 304              	.Letext0:
 305              	 .file 4 "c:\\dave 4\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 306              	 .file 5 "c:\\dave 4\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 307              	 .file 6 "C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc/xmc4_gpio.h"
 308              	 .file 7 "C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/DIGITAL_IO/digital_io.h"
 309              	 .file 8 "C:/Workspaces/Dave 4/CTPOT_test1/Libraries/XMCLib/inc/xmc_usic.h"
 310              	 .file 9 "C:/Workspaces/Dave 4/CTPOT_test1/Libraries/CMSIS/Include/core_cm4.h"
 311              	 .file 10 "C:/Workspaces/Dave 4/CTPOT_test1/Libraries/CMSIS/Infineon/XMC4700_series/Include/system_XMC4700.h"
 312              	 .file 11 "C:/Workspaces/Dave 4/CTPOT_test1/Dave/Generated/DIGITAL_IO/digital_io_extern.h"
DEFINED SYMBOLS
                            *ABS*:00000000 Encoder.c
    {standard input}:20     .text.CCU43_1_IRQHandler:00000000 $t
    {standard input}:25     .text.CCU43_1_IRQHandler:00000000 CCU43_1_IRQHandler
    {standard input}:142    .text.CCU43_1_IRQHandler:0000005c $d
    {standard input}:152    .text.getEncoderValue:00000000 $t
    {standard input}:157    .text.getEncoderValue:00000000 getEncoderValue
    {standard input}:192    .text.getEncoderValue:0000000c $d
    {standard input}:197    .text.getDirection:00000000 $t
    {standard input}:202    .text.getDirection:00000000 getDirection
    {standard input}:236    .text.getDirection:0000000c $d
    {standard input}:294    .bss.lut_index:00000000 lut_index
    {standard input}:287    .bss.direction:00000000 direction
    {standard input}:301    .bss.counter:00000000 counter
    {standard input}:249    .data.counter_lut:00000000 counter_lut
    {standard input}:245    .data.counter_lut:00000000 $d
    {standard input}:283    .bss.direction:00000000 $d
    {standard input}:290    .bss.lut_index:00000000 $d
    {standard input}:297    .bss.counter:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
ENC_A
ENC_B
